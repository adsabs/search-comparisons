name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd backend
        pytest
      env:
        APP_ENVIRONMENT: test
    
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    # Add deployment steps for your platform
    # For Render, you might use their Deploy Hook

services:
  - type: web
    name: search-comparisons-backend
    env: python
    region: oregon
    plan: standard
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: LLM_PROVIDER
        value: ollama
      - key: LLM_MODEL_NAME
        value: phi:2.7b
      - key: LLM_TEMPERATURE
        value: 0.7
      - key: LLM_MAX_TOKENS
        value: 1000
      - key: CACHE_TTL
        value: 3600
      - key: CACHE_MAX_SIZE
        value: 1000
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PYTHONOPTIMIZE
        value: "2"
    healthCheckPath: /api/health
    autoDeploy: true
    disk:
      name: models
      mountPath: /opt/render/project/src/backend/app/services/query_intent/models
      sizeGB: 10
    scaling:
      minInstances: 1
      maxInstances: 1
      memoryMB: 2048
      cpu: 1.0

  - type: web
    name: ollama
    image: ollama/ollama:latest
    env: docker
    startCommand: serve
    envVars:
      - key: OLLAMA_HOST
        value: 0.0.0.0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  - type: web
    name: search-comparisons-frontend
    env: node
    region: oregon
    plan: standard
    buildCommand: npm install && npm run build
    startCommand: npx serve -s build
    envVars:
      - key: REACT_APP_API_URL
        value: https://search-tool-api.onrender.com
      - key: NODE_ENV
        value: production
    healthCheckPath: /
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 1
      memoryMB: 1024
      cpu: 0.5
