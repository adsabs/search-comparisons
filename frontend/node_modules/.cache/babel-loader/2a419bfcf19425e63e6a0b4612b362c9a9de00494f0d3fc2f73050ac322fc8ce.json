{"ast":null,"code":"var _jsxFileName = \"/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, TextField, Button, Checkbox, FormControlLabel, FormGroup, Grid, CircularProgress, Paper, Tabs, Tab, Divider, Alert, IconButton, AppBar, Toolbar, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Chip, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar, Tooltip, Snackbar } from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { searchService, experimentService, debugService } from './services/api';\n\n// Import components as needed\n// These will be created in separate files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APP_VERSION = \"1.0.0\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\nfunction App() {\n  _s();\n  var _results$results;\n  // State for search query and options\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [mainTab, setMainTab] = useState(0);\n  const [experimentTab, setExperimentTab] = useState(0);\n  const [debugTab, setDebugTab] = useState(0);\n  const [environmentInfo, setEnvironmentInfo] = useState(null);\n\n  // State for source selection\n  const [sources, setSources] = useState({\n    ads: true,\n    scholar: true,\n    semanticScholar: false,\n    webOfScience: true\n  });\n\n  // State for similarity metrics selection\n  const [metrics, setMetrics] = useState({\n    jaccard: true,\n    rankBiased: true,\n    cosine: false,\n    euclidean: false\n  });\n\n  // State for metadata fields to compare\n  const [fields, setFields] = useState({\n    title: true,\n    abstract: true,\n    authors: false,\n    doi: true,\n    year: false,\n    citation_count: true\n  });\n\n  // Boost experiment state\n  const [boostConfig, setBoostConfig] = useState({\n    query: '',\n    boost_fields: ['citation_count', 'year'],\n    boost_weights: {\n      citation_count: 0.2,\n      year: 0.4\n    },\n    max_boost: 1.5\n  });\n\n  // A/B test state\n  const [abTestVariation, setAbTestVariation] = useState('B');\n\n  // Debug state\n  const [sourcesList, setSourcesList] = useState(null);\n  const [pingResults, setPingResults] = useState({});\n  const [testSearchResults, setTestSearchResults] = useState(null);\n\n  // Result tab state\n  const [resultTab, setResultTab] = useState(0);\n  const [filterText, setFilterText] = useState('');\n\n  // Load environment info on startup\n  useEffect(() => {\n    const fetchEnvironmentInfo = async () => {\n      try {\n        const envInfo = await debugService.getEnvironmentInfo();\n        if (!envInfo.error) {\n          setEnvironmentInfo(envInfo);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch environment info:\", error);\n      }\n    };\n    if (DEBUG) {\n      fetchEnvironmentInfo();\n    }\n  }, []);\n\n  // Handle source selection changes\n  const handleSourceChange = event => {\n    setSources({\n      ...sources,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle metrics selection changes\n  const handleMetricsChange = event => {\n    setMetrics({\n      ...metrics,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle fields selection changes\n  const handleFieldsChange = event => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle tab changes\n  const handleMainTabChange = (event, newValue) => {\n    setMainTab(newValue);\n  };\n  const handleExperimentTabChange = (event, newValue) => {\n    setExperimentTab(newValue);\n  };\n  const handleDebugTabChange = (event, newValue) => {\n    setDebugTab(newValue);\n  };\n\n  // Submit the search query\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query\");\n      return;\n    }\n    if (!Object.values(sources).some(val => val)) {\n      setError(\"Please select at least one search source\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n\n      // Always include these fields for proper display\n      const selectedFields = [...Object.keys(fields).filter(key => fields[key]), 'abstract',\n      // Always include abstract\n      'citation_count' // Always include citation_count\n      ];\n\n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields\n      };\n      if (DEBUG) {\n        console.log('Making search request:', requestBody);\n      }\n      const response = await searchService.compareSearchResults(requestBody);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setResults(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(`Failed to fetch results: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run boost experiment\n  const handleRunBoostExperiment = async () => {\n    if (!boostConfig.query.trim()) {\n      setError(\"Please enter a query for the boost experiment\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      if (DEBUG) {\n        console.log('Running boost experiment with config:', boostConfig);\n      }\n      const response = await experimentService.runBoostExperiment(boostConfig);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'boost',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('Boost experiment error:', err);\n      setError(`Failed to run boost experiment: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run A/B test\n  const handleRunAbTest = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for the A/B test\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      const selectedFields = Object.keys(fields).filter(key => fields[key]);\n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: selectedFields\n      };\n      if (DEBUG) {\n        console.log('Running A/B test with config:', requestBody, 'Variation:', abTestVariation);\n      }\n      const response = await experimentService.runAbTest(requestBody, abTestVariation);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'abTest',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('A/B test error:', err);\n      setError(`Failed to run A/B test: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // List sources for debug\n  const handleListSources = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await debugService.listSources();\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setSourcesList(response);\n      }\n    } catch (err) {\n      console.error('List sources error:', err);\n      setError(`Failed to list sources: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ping source for debug\n  const handlePingSource = async source => {\n    setLoading(true);\n    setError(null);\n    try {\n      setPingResults({\n        ...pingResults,\n        [source]: {\n          loading: true\n        }\n      });\n      const response = await debugService.pingSource(source);\n      if (response.error) {\n        setPingResults({\n          ...pingResults,\n          [source]: {\n            error: response.message\n          }\n        });\n      } else {\n        setPingResults({\n          ...pingResults,\n          [source]: response\n        });\n      }\n    } catch (err) {\n      console.error(`Ping source ${source} error:`, err);\n      setPingResults({\n        ...pingResults,\n        [source]: {\n          error: err.message\n        }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Test search for debug\n  const handleTestSearch = async source => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for testing\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await debugService.testSearch(source, query);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setTestSearchResults(response);\n      }\n    } catch (err) {\n      console.error('Test search error:', err);\n      setError(`Failed to test search: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format source name for display\n  const formatSourceName = source => {\n    switch (source) {\n      case 'ads':\n        return 'ADS/SciX';\n      case 'scholar':\n        return 'Google Scholar';\n      case 'webOfScience':\n        return 'Web of Science';\n      case 'semanticScholar':\n        return 'Semantic Scholar';\n      default:\n        return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n  };\n\n  // Format metric name for display\n  const formatMetricName = metric => {\n    switch (metric) {\n      case 'jaccard':\n        return 'Jaccard Similarity';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap';\n      case 'cosine':\n        return 'Cosine Similarity';\n      case 'euclidean':\n        return 'Euclidean Distance';\n      default:\n        return metric.replace(/_/g, ' ').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    }\n  };\n\n  // Helper function to get metric description\n  const getMetricDescription = metric => {\n    switch (metric) {\n      case 'jaccard':\n        return 'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';\n      case 'cosine':\n        return 'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';\n      case 'euclidean':\n        return 'Measures the straight-line distance between two points in Euclidean space.';\n      default:\n        return 'No description available for this metric.';\n    }\n  };\n\n  // Add a new function to handle running a new search with custom weights\n  const handleRunNewSearchWithWeights = async (transformedQuery, boostConfig) => {\n    if (!transformedQuery || !transformedQuery.trim()) {\n      setError(\"Please enter a search query\");\n      return Promise.reject(new Error(\"Empty query\"));\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      // Get selected sources\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      if (selectedSources.length === 0) {\n        throw new Error('Please select at least one source');\n      }\n\n      // Get selected metrics\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n\n      // Always include these fields for proper display\n      const selectedFields = [...Object.keys(fields).filter(key => fields[key]), 'abstract',\n      // Always include abstract\n      'citation_count',\n      // Always include citation_count\n      'doctype',\n      // Include doctype for boost features\n      'property',\n      // Include property for refereed status\n      'year' // Include year for recency boost\n      ];\n\n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      const requestBody = {\n        query: transformedQuery,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields,\n        originalQuery: query,\n        // Include the original query for reference\n        max_results: 1000,\n        // Request up to 1000 results for boosting\n        useTransformedQuery: true // Flag to indicate this is a transformed query\n      };\n      console.log('Making search request with transformed query:', requestBody);\n      const response = await fetch(`${API_URL}/api/search/compare`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n      const data = await response.json();\n      setResults(data);\n\n      // Only display top 10 results from each source in the UI\n      const displayData = {\n        ...data\n      };\n      Object.keys(displayData.results).forEach(source => {\n        displayData.results[source] = displayData.results[source].slice(0, 10);\n      });\n      setResults(displayData);\n\n      // For boost experiment tab, we need the data from the first source\n      const primarySource = selectedSources[0];\n      const primaryResults = data.results[primarySource] || [];\n      setMainTab(3); // Switch to boost experiment tab\n\n      return Promise.resolve(data);\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(err.message || 'An error occurred while searching');\n      return Promise.reject(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Search Comparison Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), (environmentInfo === null || environmentInfo === void 0 ? void 0 : environmentInfo.version) && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `v${environmentInfo.version}`,\n          size: \"small\",\n          sx: {\n            mr: 2,\n            bgcolor: 'primary.dark'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 4,\n        mb: 4,\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Query\",\n              variant: \"outlined\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  handleSearch();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSearch,\n              disabled: loading,\n              sx: {\n                height: '100%',\n                width: '100%'\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 28\n              }, this) : 'Search'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: mainTab,\n          onChange: handleMainTabChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Results\",\n            disabled: !results.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Compare\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Boost Experiment\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"A/B Test\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Debug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), mainTab === 0 && /*#__PURE__*/_jsxDEV(SearchConfig, {\n          sources: sources,\n          metrics: metrics,\n          fields: fields,\n          onSourceChange: handleSourceChange,\n          onMetricsChange: handleMetricsChange,\n          onFieldsChange: handleFieldsChange,\n          formatSourceName: formatSourceName,\n          formatMetricName: formatMetricName,\n          getMetricDescription: getMetricDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), mainTab === 1 && /*#__PURE__*/_jsxDEV(ResultsView, {\n          results: results,\n          source: selectedSource,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), mainTab === 2 && /*#__PURE__*/_jsxDEV(CompareView, {\n          compareResults: results,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), mainTab === 3 && /*#__PURE__*/_jsxDEV(BoostExperiment, {\n          originalResults: ((_results$results = results.results) === null || _results$results === void 0 ? void 0 : _results$results[Object.keys(results.results)[0]]) || [],\n          query: query,\n          API_URL: API_URL,\n          onRunNewSearch: handleRunNewSearchWithWeights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this), mainTab === 4 && /*#__PURE__*/_jsxDEV(ABTest, {\n          compareResults: results,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), mainTab === 5 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            value: debugTab,\n            onChange: handleDebugTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Ping Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Test Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), debugTab === 0 && /*#__PURE__*/_jsxDEV(EnvironmentInfo, {\n            environmentInfo: environmentInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 17\n          }, this), debugTab === 1 && /*#__PURE__*/_jsxDEV(SourcesList, {\n            sources: sourcesList,\n            onRefresh: handleListSources\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this), debugTab === 2 && /*#__PURE__*/_jsxDEV(PingSource, {\n            sources: sources,\n            pingResults: pingResults,\n            onPing: handlePingSource,\n            formatSourceName: formatSourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 17\n          }, this), debugTab === 3 && /*#__PURE__*/_jsxDEV(TestSearch, {\n            sources: sources,\n            testResults: testSearchResults,\n            onTest: handleTestSearch,\n            formatSourceName: formatSourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error !== null,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"footer\",\n      sx: {\n        p: 2,\n        bgcolor: 'background.paper',\n        mt: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"Search Comparison Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OjcpMzn81CrGSML9eQ6HCESEN6U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","TextField","Button","Checkbox","FormControlLabel","FormGroup","Grid","CircularProgress","Paper","Tabs","Tab","Divider","Alert","IconButton","AppBar","Toolbar","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","Chip","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Avatar","Tooltip","Snackbar","InfoIcon","BugReportIcon","ScienceIcon","SearchIcon","GitHubIcon","LaunchIcon","NetworkCheckIcon","CheckIcon","searchService","experimentService","debugService","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","APP_VERSION","DEBUG","REACT_APP_DEBUG","App","_s","_results$results","query","setQuery","loading","setLoading","results","setResults","error","setError","mainTab","setMainTab","experimentTab","setExperimentTab","debugTab","setDebugTab","environmentInfo","setEnvironmentInfo","sources","setSources","ads","scholar","semanticScholar","webOfScience","metrics","setMetrics","jaccard","rankBiased","cosine","euclidean","fields","setFields","title","abstract","authors","doi","year","citation_count","boostConfig","setBoostConfig","boost_fields","boost_weights","max_boost","abTestVariation","setAbTestVariation","sourcesList","setSourcesList","pingResults","setPingResults","testSearchResults","setTestSearchResults","resultTab","setResultTab","filterText","setFilterText","fetchEnvironmentInfo","envInfo","getEnvironmentInfo","console","handleSourceChange","event","target","name","checked","handleMetricsChange","handleFieldsChange","handleMainTabChange","newValue","handleExperimentTabChange","handleDebugTabChange","handleSearch","trim","Object","values","some","val","selectedSources","keys","filter","key","selectedMetrics","selectedFields","uniqueFields","Array","from","Set","requestBody","log","response","compareSearchResults","message","err","handleRunBoostExperiment","runBoostExperiment","type","handleRunAbTest","runAbTest","handleListSources","listSources","handlePingSource","source","pingSource","handleTestSearch","testSearch","formatSourceName","charAt","toUpperCase","slice","formatMetricName","metric","replace","split","map","word","join","getMetricDescription","handleRunNewSearchWithWeights","transformedQuery","Promise","reject","Error","length","originalQuery","max_results","useTransformedQuery","fetch","method","headers","body","JSON","stringify","ok","errorText","text","status","statusText","data","json","displayData","forEach","primarySource","primaryResults","resolve","sx","display","flexDirection","height","children","position","variant","component","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","version","label","size","mr","bgcolor","maxWidth","mt","mb","p","container","spacing","item","xs","md","fullWidth","value","onChange","e","onKeyDown","color","onClick","disabled","width","SearchConfig","onSourceChange","onMetricsChange","onFieldsChange","ResultsView","selectedSource","CompareView","compareResults","BoostExperiment","originalResults","onRunNewSearch","ABTest","EnvironmentInfo","SourcesList","onRefresh","PingSource","onPing","TestSearch","testResults","onTest","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","align","_c","$RefreshReg$"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, Box, Typography, TextField, Button, \n  Checkbox, FormControlLabel, FormGroup, Grid, \n  CircularProgress, Paper, Tabs, Tab, Divider, Alert,\n  IconButton, AppBar, Toolbar, TableContainer, Table,\n  TableHead, TableBody, TableRow, TableCell, Chip,\n  List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction,\n  Avatar, Tooltip, Snackbar\n} from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport { searchService, experimentService, debugService } from './services/api';\n\n// Import components as needed\n// These will be created in separate files\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APP_VERSION = \"1.0.0\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\n\nfunction App() {\n  // State for search query and options\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [mainTab, setMainTab] = useState(0);\n  const [experimentTab, setExperimentTab] = useState(0);\n  const [debugTab, setDebugTab] = useState(0);\n  const [environmentInfo, setEnvironmentInfo] = useState(null);\n  \n  // State for source selection\n  const [sources, setSources] = useState({\n    ads: true,\n    scholar: true,\n    semanticScholar: false,\n    webOfScience: true\n  });\n  \n  // State for similarity metrics selection\n  const [metrics, setMetrics] = useState({\n    jaccard: true,\n    rankBiased: true,\n    cosine: false,\n    euclidean: false\n  });\n  \n  // State for metadata fields to compare\n  const [fields, setFields] = useState({\n    title: true,\n    abstract: true,\n    authors: false,\n    doi: true,\n    year: false,\n    citation_count: true\n  });\n\n  // Boost experiment state\n  const [boostConfig, setBoostConfig] = useState({\n    query: '',\n    boost_fields: ['citation_count', 'year'],\n    boost_weights: {\n      citation_count: 0.2,\n      year: 0.4\n    },\n    max_boost: 1.5\n  });\n  \n  // A/B test state\n  const [abTestVariation, setAbTestVariation] = useState('B');\n\n  // Debug state\n  const [sourcesList, setSourcesList] = useState(null);\n  const [pingResults, setPingResults] = useState({});\n  const [testSearchResults, setTestSearchResults] = useState(null);\n\n  // Result tab state\n  const [resultTab, setResultTab] = useState(0);\n  const [filterText, setFilterText] = useState('');\n\n  // Load environment info on startup\n  useEffect(() => {\n    const fetchEnvironmentInfo = async () => {\n      try {\n        const envInfo = await debugService.getEnvironmentInfo();\n        if (!envInfo.error) {\n          setEnvironmentInfo(envInfo);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch environment info:\", error);\n      }\n    };\n\n    if (DEBUG) {\n      fetchEnvironmentInfo();\n    }\n  }, []);\n\n  // Handle source selection changes\n  const handleSourceChange = (event) => {\n    setSources({\n      ...sources,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle metrics selection changes\n  const handleMetricsChange = (event) => {\n    setMetrics({\n      ...metrics,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle fields selection changes\n  const handleFieldsChange = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle tab changes\n  const handleMainTabChange = (event, newValue) => {\n    setMainTab(newValue);\n  };\n\n  const handleExperimentTabChange = (event, newValue) => {\n    setExperimentTab(newValue);\n  };\n\n  const handleDebugTabChange = (event, newValue) => {\n    setDebugTab(newValue);\n  };\n\n  // Submit the search query\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query\");\n      return;\n    }\n    \n    if (!Object.values(sources).some(val => val)) {\n      setError(\"Please select at least one search source\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count'  // Always include citation_count\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields\n      };\n\n      if (DEBUG) {\n        console.log('Making search request:', requestBody);\n      }\n      \n      const response = await searchService.compareSearchResults(requestBody);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setResults(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(`Failed to fetch results: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run boost experiment\n  const handleRunBoostExperiment = async () => {\n    if (!boostConfig.query.trim()) {\n      setError(\"Please enter a query for the boost experiment\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (DEBUG) {\n        console.log('Running boost experiment with config:', boostConfig);\n      }\n      \n      const response = await experimentService.runBoostExperiment(boostConfig);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'boost',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('Boost experiment error:', err);\n      setError(`Failed to run boost experiment: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run A/B test\n  const handleRunAbTest = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for the A/B test\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      const selectedFields = Object.keys(fields).filter(key => fields[key]);\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: selectedFields\n      };\n\n      if (DEBUG) {\n        console.log('Running A/B test with config:', requestBody, 'Variation:', abTestVariation);\n      }\n      \n      const response = await experimentService.runAbTest(requestBody, abTestVariation);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'abTest',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('A/B test error:', err);\n      setError(`Failed to run A/B test: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // List sources for debug\n  const handleListSources = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.listSources();\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setSourcesList(response);\n      }\n    } catch (err) {\n      console.error('List sources error:', err);\n      setError(`Failed to list sources: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ping source for debug\n  const handlePingSource = async (source) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      setPingResults({\n        ...pingResults,\n        [source]: { loading: true }\n      });\n      \n      const response = await debugService.pingSource(source);\n      \n      if (response.error) {\n        setPingResults({\n          ...pingResults,\n          [source]: { error: response.message }\n        });\n      } else {\n        setPingResults({\n          ...pingResults,\n          [source]: response\n        });\n      }\n    } catch (err) {\n      console.error(`Ping source ${source} error:`, err);\n      setPingResults({\n        ...pingResults,\n        [source]: { error: err.message }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Test search for debug\n  const handleTestSearch = async (source) => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for testing\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.testSearch(source, query);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setTestSearchResults(response);\n      }\n    } catch (err) {\n      console.error('Test search error:', err);\n      setError(`Failed to test search: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format source name for display\n  const formatSourceName = (source) => {\n    switch(source) {\n      case 'ads':\n        return 'ADS/SciX';\n      case 'scholar':\n        return 'Google Scholar';\n      case 'webOfScience':\n        return 'Web of Science';\n      case 'semanticScholar':\n        return 'Semantic Scholar';\n      default:\n        return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n  };\n\n  // Format metric name for display\n  const formatMetricName = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Jaccard Similarity';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap';\n      case 'cosine':\n        return 'Cosine Similarity';\n      case 'euclidean':\n        return 'Euclidean Distance';\n      default:\n        return metric.replace(/_/g, ' ').split(' ').map(word => \n          word.charAt(0).toUpperCase() + word.slice(1)\n        ).join(' ');\n    }\n  };\n\n  // Helper function to get metric description\n  const getMetricDescription = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';\n      case 'cosine':\n        return 'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';\n      case 'euclidean':\n        return 'Measures the straight-line distance between two points in Euclidean space.';\n      default:\n        return 'No description available for this metric.';\n    }\n  };\n\n  // Add a new function to handle running a new search with custom weights\n  const handleRunNewSearchWithWeights = async (transformedQuery, boostConfig) => {\n    if (!transformedQuery || !transformedQuery.trim()) {\n      setError(\"Please enter a search query\");\n      return Promise.reject(new Error(\"Empty query\"));\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Get selected sources\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      \n      if (selectedSources.length === 0) {\n        throw new Error('Please select at least one source');\n      }\n      \n      // Get selected metrics\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count',  // Always include citation_count\n        'doctype',   // Include doctype for boost features\n        'property',  // Include property for refereed status\n        'year'       // Include year for recency boost\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query: transformedQuery,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields,\n        originalQuery: query, // Include the original query for reference\n        max_results: 1000,    // Request up to 1000 results for boosting\n        useTransformedQuery: true // Flag to indicate this is a transformed query\n      };\n      \n      console.log('Making search request with transformed query:', requestBody);\n      \n      const response = await fetch(`${API_URL}/api/search/compare`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      setResults(data);\n      \n      // Only display top 10 results from each source in the UI\n      const displayData = { ...data };\n      Object.keys(displayData.results).forEach(source => {\n        displayData.results[source] = displayData.results[source].slice(0, 10);\n      });\n      \n      setResults(displayData);\n      \n      // For boost experiment tab, we need the data from the first source\n      const primarySource = selectedSources[0];\n      const primaryResults = data.results[primarySource] || [];\n      \n      setMainTab(3); // Switch to boost experiment tab\n      \n      return Promise.resolve(data);\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(err.message || 'An error occurred while searching');\n      return Promise.reject(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Search Comparison Tool\n          </Typography>\n          {environmentInfo?.version && (\n            <Chip\n              label={`v${environmentInfo.version}`}\n              size=\"small\"\n              sx={{ mr: 2, bgcolor: 'primary.dark' }}\n            />\n          )}\n        </Toolbar>\n      </AppBar>\n      \n      <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4, flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <Paper sx={{ p: 2, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={8}>\n              <TextField\n                fullWidth\n                label=\"Search Query\"\n                variant=\"outlined\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    handleSearch();\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSearch}\n                disabled={loading}\n                sx={{ height: '100%', width: '100%' }}\n              >\n                {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Search'}\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        \n        <Box sx={{ width: '100%', flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n          <Tabs value={mainTab} onChange={handleMainTabChange}>\n            <Tab label=\"Search\" />\n            <Tab label=\"Results\" disabled={!results.length} />\n            <Tab label=\"Compare\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"Boost Experiment\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"A/B Test\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"Debug\" />\n          </Tabs>\n          \n          {/* Search Tab */}\n          {mainTab === 0 && (\n            <SearchConfig\n              sources={sources}\n              metrics={metrics}\n              fields={fields}\n              onSourceChange={handleSourceChange}\n              onMetricsChange={handleMetricsChange}\n              onFieldsChange={handleFieldsChange}\n              formatSourceName={formatSourceName}\n              formatMetricName={formatMetricName}\n              getMetricDescription={getMetricDescription}\n            />\n          )}\n          \n          {/* Results Tab */}\n          {mainTab === 1 && (\n            <ResultsView\n              results={results}\n              source={selectedSource}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Compare Tab */}\n          {mainTab === 2 && (\n            <CompareView\n              compareResults={results}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Boost Experiment Tab */}\n          {mainTab === 3 && (\n            <BoostExperiment\n              originalResults={results.results?.[Object.keys(results.results)[0]] || []}\n              query={query}\n              API_URL={API_URL}\n              onRunNewSearch={handleRunNewSearchWithWeights}\n            />\n          )}\n          \n          {/* A/B Test Tab */}\n          {mainTab === 4 && (\n            <ABTest\n              compareResults={results}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Debug Tab */}\n          {mainTab === 5 && (\n            <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', mt: 2 }}>\n              <Tabs value={debugTab} onChange={handleDebugTabChange}>\n                <Tab label=\"Environment\" />\n                <Tab label=\"Sources\" />\n                <Tab label=\"Ping Source\" />\n                <Tab label=\"Test Search\" />\n              </Tabs>\n              \n              {debugTab === 0 && (\n                <EnvironmentInfo environmentInfo={environmentInfo} />\n              )}\n              \n              {debugTab === 1 && (\n                <SourcesList sources={sourcesList} onRefresh={handleListSources} />\n              )}\n              \n              {debugTab === 2 && (\n                <PingSource\n                  sources={sources}\n                  pingResults={pingResults}\n                  onPing={handlePingSource}\n                  formatSourceName={formatSourceName}\n                />\n              )}\n              \n              {debugTab === 3 && (\n                <TestSearch\n                  sources={sources}\n                  testResults={testSearchResults}\n                  onTest={handleTestSearch}\n                  formatSourceName={formatSourceName}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Container>\n      \n      <Snackbar\n        open={error !== null}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      <Box component=\"footer\" sx={{ p: 2, bgcolor: 'background.paper', mt: 'auto' }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          Search Comparison Tool\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAC7CC,QAAQ,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,IAAI,EAC3CC,gBAAgB,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAClDC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,cAAc,EAAEC,KAAK,EAClDC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAC/CC,IAAI,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,YAAY,EAAEC,uBAAuB,EACrEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,QACpB,eAAe;AACtB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,gBAAgB;;AAE/E;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AACxE,MAAMC,WAAW,GAAG,OAAO;AAC3B,MAAMC,KAAK,GAAGJ,OAAO,CAACC,GAAG,CAACI,eAAe,KAAK,MAAM;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4D,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8D,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgE,KAAK,EAAEC,QAAQ,CAAC,GAAGjE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoE,aAAa,EAAEC,gBAAgB,CAAC,GAAGrE,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACsE,QAAQ,EAAEC,WAAW,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACwE,eAAe,EAAEC,kBAAkB,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAAC0E,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC;IACrC4E,GAAG,EAAE,IAAI;IACTC,OAAO,EAAE,IAAI;IACbC,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjF,QAAQ,CAAC;IACrCkF,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGvF,QAAQ,CAAC;IACnCwF,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,KAAK;IACdC,GAAG,EAAE,IAAI;IACTC,IAAI,EAAE,KAAK;IACXC,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG/F,QAAQ,CAAC;IAC7C0D,KAAK,EAAE,EAAE;IACTsC,YAAY,EAAE,CAAC,gBAAgB,EAAE,MAAM,CAAC;IACxCC,aAAa,EAAE;MACbJ,cAAc,EAAE,GAAG;MACnBD,IAAI,EAAE;IACR,CAAC;IACDM,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpG,QAAQ,CAAC,GAAG,CAAC;;EAE3D;EACA,MAAM,CAACqG,WAAW,EAAEC,cAAc,CAAC,GAAGtG,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuG,WAAW,EAAEC,cAAc,CAAC,GAAGxG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACyG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1G,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAAC2G,SAAS,EAAEC,YAAY,CAAC,GAAG5G,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC6G,UAAU,EAAEC,aAAa,CAAC,GAAG9G,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM8G,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMnE,YAAY,CAACoE,kBAAkB,CAAC,CAAC;QACvD,IAAI,CAACD,OAAO,CAAChD,KAAK,EAAE;UAClBS,kBAAkB,CAACuC,OAAO,CAAC;QAC7B;MACF,CAAC,CAAC,OAAOhD,KAAK,EAAE;QACdkD,OAAO,CAAClD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAED,IAAIX,KAAK,EAAE;MACT0D,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpCzC,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAAC0C,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIJ,KAAK,IAAK;IACrCnC,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACoC,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAIL,KAAK,IAAK;IACpC7B,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAAC8B,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,mBAAmB,GAAGA,CAACN,KAAK,EAAEO,QAAQ,KAAK;IAC/CxD,UAAU,CAACwD,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAACR,KAAK,EAAEO,QAAQ,KAAK;IACrDtD,gBAAgB,CAACsD,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAACT,KAAK,EAAEO,QAAQ,KAAK;IAChDpD,WAAW,CAACoD,QAAQ,CAAC;EACvB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACpE,KAAK,CAACqE,IAAI,CAAC,CAAC,EAAE;MACjB9D,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEA,IAAI,CAAC+D,MAAM,CAACC,MAAM,CAACvD,OAAO,CAAC,CAACwD,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAC,EAAE;MAC5ClE,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMmE,eAAe,GAAGJ,MAAM,CAACK,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,GAAG,IAAI7D,OAAO,CAAC6D,GAAG,CAAC,CAAC;MACxE,MAAMC,eAAe,GAAGR,MAAM,CAACK,IAAI,CAACrD,OAAO,CAAC,CAACsD,MAAM,CAACC,GAAG,IAAIvD,OAAO,CAACuD,GAAG,CAAC,CAAC;;MAExE;MACA,MAAME,cAAc,GAAG,CACrB,GAAGT,MAAM,CAACK,IAAI,CAAC/C,MAAM,CAAC,CAACgD,MAAM,CAACC,GAAG,IAAIjD,MAAM,CAACiD,GAAG,CAAC,CAAC,EACjD,UAAU;MAAG;MACb,gBAAgB,CAAE;MAAA,CACnB;;MAED;MACA,MAAMG,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,cAAc,CAAC,CAAC;MAExD,MAAMK,WAAW,GAAG;QAClBpF,KAAK;QACLgB,OAAO,EAAE0D,eAAe;QACxBpD,OAAO,EAAEwD,eAAe;QACxBlD,MAAM,EAAEoD;MACV,CAAC;MAED,IAAIrF,KAAK,EAAE;QACT6D,OAAO,CAAC6B,GAAG,CAAC,wBAAwB,EAAED,WAAW,CAAC;MACpD;MAEA,MAAME,QAAQ,GAAG,MAAMrG,aAAa,CAACsG,oBAAoB,CAACH,WAAW,CAAC;MAEtE,IAAIE,QAAQ,CAAChF,KAAK,EAAE;QAClBC,QAAQ,CAAC+E,QAAQ,CAACE,OAAO,CAAC;MAC5B,CAAC,MAAM;QACLnF,UAAU,CAACiF,QAAQ,CAAC;MACtB;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,eAAe,EAAEmF,GAAG,CAAC;MACnClF,QAAQ,CAAC,4BAA4BkF,GAAG,CAACD,OAAO,EAAE,CAAC;IACrD,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMuF,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI,CAACtD,WAAW,CAACpC,KAAK,CAACqE,IAAI,CAAC,CAAC,EAAE;MAC7B9D,QAAQ,CAAC,+CAA+C,CAAC;MACzD;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,IAAIZ,KAAK,EAAE;QACT6D,OAAO,CAAC6B,GAAG,CAAC,uCAAuC,EAAEjD,WAAW,CAAC;MACnE;MAEA,MAAMkD,QAAQ,GAAG,MAAMpG,iBAAiB,CAACyG,kBAAkB,CAACvD,WAAW,CAAC;MAExE,IAAIkD,QAAQ,CAAChF,KAAK,EAAE;QAClBC,QAAQ,CAAC+E,QAAQ,CAACE,OAAO,CAAC;MAC5B,CAAC,MAAM;QACL;QACAnF,UAAU,CAAC;UACTuF,IAAI,EAAE,OAAO;UACb,GAAGN;QACL,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,yBAAyB,EAAEmF,GAAG,CAAC;MAC7ClF,QAAQ,CAAC,mCAAmCkF,GAAG,CAACD,OAAO,EAAE,CAAC;IAC5D,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM0F,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC7F,KAAK,CAACqE,IAAI,CAAC,CAAC,EAAE;MACjB9D,QAAQ,CAAC,8CAA8C,CAAC;MACxD;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMmE,eAAe,GAAGJ,MAAM,CAACK,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,GAAG,IAAI7D,OAAO,CAAC6D,GAAG,CAAC,CAAC;MACxE,MAAMC,eAAe,GAAGR,MAAM,CAACK,IAAI,CAACrD,OAAO,CAAC,CAACsD,MAAM,CAACC,GAAG,IAAIvD,OAAO,CAACuD,GAAG,CAAC,CAAC;MACxE,MAAME,cAAc,GAAGT,MAAM,CAACK,IAAI,CAAC/C,MAAM,CAAC,CAACgD,MAAM,CAACC,GAAG,IAAIjD,MAAM,CAACiD,GAAG,CAAC,CAAC;MAErE,MAAMO,WAAW,GAAG;QAClBpF,KAAK;QACLgB,OAAO,EAAE0D,eAAe;QACxBpD,OAAO,EAAEwD,eAAe;QACxBlD,MAAM,EAAEmD;MACV,CAAC;MAED,IAAIpF,KAAK,EAAE;QACT6D,OAAO,CAAC6B,GAAG,CAAC,+BAA+B,EAAED,WAAW,EAAE,YAAY,EAAE3C,eAAe,CAAC;MAC1F;MAEA,MAAM6C,QAAQ,GAAG,MAAMpG,iBAAiB,CAAC4G,SAAS,CAACV,WAAW,EAAE3C,eAAe,CAAC;MAEhF,IAAI6C,QAAQ,CAAChF,KAAK,EAAE;QAClBC,QAAQ,CAAC+E,QAAQ,CAACE,OAAO,CAAC;MAC5B,CAAC,MAAM;QACL;QACAnF,UAAU,CAAC;UACTuF,IAAI,EAAE,QAAQ;UACd,GAAGN;QACL,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,iBAAiB,EAAEmF,GAAG,CAAC;MACrClF,QAAQ,CAAC,2BAA2BkF,GAAG,CAACD,OAAO,EAAE,CAAC;IACpD,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM4F,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC5F,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAM+E,QAAQ,GAAG,MAAMnG,YAAY,CAAC6G,WAAW,CAAC,CAAC;MAEjD,IAAIV,QAAQ,CAAChF,KAAK,EAAE;QAClBC,QAAQ,CAAC+E,QAAQ,CAACE,OAAO,CAAC;MAC5B,CAAC,MAAM;QACL5C,cAAc,CAAC0C,QAAQ,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,qBAAqB,EAAEmF,GAAG,CAAC;MACzClF,QAAQ,CAAC,2BAA2BkF,GAAG,CAACD,OAAO,EAAE,CAAC;IACpD,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM8F,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC/F,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFuC,cAAc,CAAC;QACb,GAAGD,WAAW;QACd,CAACqD,MAAM,GAAG;UAAEhG,OAAO,EAAE;QAAK;MAC5B,CAAC,CAAC;MAEF,MAAMoF,QAAQ,GAAG,MAAMnG,YAAY,CAACgH,UAAU,CAACD,MAAM,CAAC;MAEtD,IAAIZ,QAAQ,CAAChF,KAAK,EAAE;QAClBwC,cAAc,CAAC;UACb,GAAGD,WAAW;UACd,CAACqD,MAAM,GAAG;YAAE5F,KAAK,EAAEgF,QAAQ,CAACE;UAAQ;QACtC,CAAC,CAAC;MACJ,CAAC,MAAM;QACL1C,cAAc,CAAC;UACb,GAAGD,WAAW;UACd,CAACqD,MAAM,GAAGZ;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,eAAe4F,MAAM,SAAS,EAAET,GAAG,CAAC;MAClD3C,cAAc,CAAC;QACb,GAAGD,WAAW;QACd,CAACqD,MAAM,GAAG;UAAE5F,KAAK,EAAEmF,GAAG,CAACD;QAAQ;MACjC,CAAC,CAAC;IACJ,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMiG,gBAAgB,GAAG,MAAOF,MAAM,IAAK;IACzC,IAAI,CAAClG,KAAK,CAACqE,IAAI,CAAC,CAAC,EAAE;MACjB9D,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAM+E,QAAQ,GAAG,MAAMnG,YAAY,CAACkH,UAAU,CAACH,MAAM,EAAElG,KAAK,CAAC;MAE7D,IAAIsF,QAAQ,CAAChF,KAAK,EAAE;QAClBC,QAAQ,CAAC+E,QAAQ,CAACE,OAAO,CAAC;MAC5B,CAAC,MAAM;QACLxC,oBAAoB,CAACsC,QAAQ,CAAC;MAChC;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,oBAAoB,EAAEmF,GAAG,CAAC;MACxClF,QAAQ,CAAC,0BAA0BkF,GAAG,CAACD,OAAO,EAAE,CAAC;IACnD,CAAC,SAAS;MACRrF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmG,gBAAgB,GAAIJ,MAAM,IAAK;IACnC,QAAOA,MAAM;MACX,KAAK,KAAK;QACR,OAAO,UAAU;MACnB,KAAK,SAAS;QACZ,OAAO,gBAAgB;MACzB,KAAK,cAAc;QACjB,OAAO,gBAAgB;MACzB,KAAK,iBAAiB;QACpB,OAAO,kBAAkB;MAC3B;QACE,OAAOA,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGN,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC,QAAOA,MAAM;MACX,KAAK,SAAS;QACZ,OAAO,oBAAoB;MAC7B,KAAK,YAAY;MACjB,KAAK,aAAa;QAChB,OAAO,qBAAqB;MAC9B,KAAK,QAAQ;QACX,OAAO,mBAAmB;MAC5B,KAAK,WAAW;QACd,OAAO,oBAAoB;MAC7B;QACE,OAAOA,MAAM,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAClDA,IAAI,CAACR,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGO,IAAI,CAACN,KAAK,CAAC,CAAC,CAC7C,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIN,MAAM,IAAK;IACvC,QAAOA,MAAM;MACX,KAAK,SAAS;QACZ,OAAO,yJAAyJ;MAClK,KAAK,YAAY;MACjB,KAAK,aAAa;QAChB,OAAO,wIAAwI;MACjJ,KAAK,QAAQ;QACX,OAAO,gIAAgI;MACzI,KAAK,WAAW;QACd,OAAO,4EAA4E;MACrF;QACE,OAAO,2CAA2C;IACtD;EACF,CAAC;;EAED;EACA,MAAMO,6BAA6B,GAAG,MAAAA,CAAOC,gBAAgB,EAAE/E,WAAW,KAAK;IAC7E,IAAI,CAAC+E,gBAAgB,IAAI,CAACA,gBAAgB,CAAC9C,IAAI,CAAC,CAAC,EAAE;MACjD9D,QAAQ,CAAC,6BAA6B,CAAC;MACvC,OAAO6G,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,aAAa,CAAC,CAAC;IACjD;IAEAnH,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMmE,eAAe,GAAGJ,MAAM,CAACK,IAAI,CAAC3D,OAAO,CAAC,CAAC4D,MAAM,CAACC,GAAG,IAAI7D,OAAO,CAAC6D,GAAG,CAAC,CAAC;MAExE,IAAIH,eAAe,CAAC6C,MAAM,KAAK,CAAC,EAAE;QAChC,MAAM,IAAID,KAAK,CAAC,mCAAmC,CAAC;MACtD;;MAEA;MACA,MAAMxC,eAAe,GAAGR,MAAM,CAACK,IAAI,CAACrD,OAAO,CAAC,CAACsD,MAAM,CAACC,GAAG,IAAIvD,OAAO,CAACuD,GAAG,CAAC,CAAC;;MAExE;MACA,MAAME,cAAc,GAAG,CACrB,GAAGT,MAAM,CAACK,IAAI,CAAC/C,MAAM,CAAC,CAACgD,MAAM,CAACC,GAAG,IAAIjD,MAAM,CAACiD,GAAG,CAAC,CAAC,EACjD,UAAU;MAAG;MACb,gBAAgB;MAAG;MACnB,SAAS;MAAI;MACb,UAAU;MAAG;MACb,MAAM,CAAO;MAAA,CACd;;MAED;MACA,MAAMG,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,cAAc,CAAC,CAAC;MAExD,MAAMK,WAAW,GAAG;QAClBpF,KAAK,EAAEmH,gBAAgB;QACvBnG,OAAO,EAAE0D,eAAe;QACxBpD,OAAO,EAAEwD,eAAe;QACxBlD,MAAM,EAAEoD,YAAY;QACpBwC,aAAa,EAAExH,KAAK;QAAE;QACtByH,WAAW,EAAE,IAAI;QAAK;QACtBC,mBAAmB,EAAE,IAAI,CAAC;MAC5B,CAAC;MAEDlE,OAAO,CAAC6B,GAAG,CAAC,+CAA+C,EAAED,WAAW,CAAC;MAEzE,MAAME,QAAQ,GAAG,MAAMqC,KAAK,CAAC,GAAGrI,OAAO,qBAAqB,EAAE;QAC5DsI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC5C,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAAC2C,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAM5C,QAAQ,CAAC6C,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIb,KAAK,CAAC,UAAUhC,QAAQ,CAAC8C,MAAM,IAAI9C,QAAQ,CAAC+C,UAAU,MAAMH,SAAS,EAAE,CAAC;MACpF;MAEA,MAAMI,IAAI,GAAG,MAAMhD,QAAQ,CAACiD,IAAI,CAAC,CAAC;MAElClI,UAAU,CAACiI,IAAI,CAAC;;MAEhB;MACA,MAAME,WAAW,GAAG;QAAE,GAAGF;MAAK,CAAC;MAC/BhE,MAAM,CAACK,IAAI,CAAC6D,WAAW,CAACpI,OAAO,CAAC,CAACqI,OAAO,CAACvC,MAAM,IAAI;QACjDsC,WAAW,CAACpI,OAAO,CAAC8F,MAAM,CAAC,GAAGsC,WAAW,CAACpI,OAAO,CAAC8F,MAAM,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACxE,CAAC,CAAC;MAEFpG,UAAU,CAACmI,WAAW,CAAC;;MAEvB;MACA,MAAME,aAAa,GAAGhE,eAAe,CAAC,CAAC,CAAC;MACxC,MAAMiE,cAAc,GAAGL,IAAI,CAAClI,OAAO,CAACsI,aAAa,CAAC,IAAI,EAAE;MAExDjI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEf,OAAO2G,OAAO,CAACwB,OAAO,CAACN,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAO7C,GAAG,EAAE;MACZjC,OAAO,CAAClD,KAAK,CAAC,eAAe,EAAEmF,GAAG,CAAC;MACnClF,QAAQ,CAACkF,GAAG,CAACD,OAAO,IAAI,mCAAmC,CAAC;MAC5D,OAAO4B,OAAO,CAACC,MAAM,CAAC5B,GAAG,CAAC;IAC5B,CAAC,SAAS;MACRtF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA,CAAC5C,GAAG;IAACoM,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACrE5J,OAAA,CAAC7B,MAAM;MAAC0L,QAAQ,EAAC,QAAQ;MAAAD,QAAA,eACvB5J,OAAA,CAAC5B,OAAO;QAAAwL,QAAA,gBACN5J,OAAA,CAAC3C,UAAU;UAACyM,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,KAAK;UAACP,EAAE,EAAE;YAAEQ,QAAQ,EAAE;UAAE,CAAE;UAAAJ,QAAA,EAAC;QAE9D;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACZ,CAAA3I,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE4I,OAAO,kBACvBrK,OAAA,CAACrB,IAAI;UACH2L,KAAK,EAAE,IAAI7I,eAAe,CAAC4I,OAAO,EAAG;UACrCE,IAAI,EAAC,OAAO;UACZf,EAAE,EAAE;YAAEgB,EAAE,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAe;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAETpK,OAAA,CAAC7C,SAAS;MAACuN,QAAQ,EAAC,IAAI;MAAClB,EAAE,EAAE;QAAEmB,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEZ,QAAQ,EAAE,CAAC;QAAEP,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAE,QAAA,gBACnG5J,OAAA,CAACnC,KAAK;QAAC2L,EAAE,EAAE;UAAEqB,CAAC,EAAE,CAAC;UAAED,EAAE,EAAE;QAAE,CAAE;QAAAhB,QAAA,eACzB5J,OAAA,CAACrC,IAAI;UAACmN,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAnB,QAAA,gBACzB5J,OAAA,CAACrC,IAAI;YAACqN,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAtB,QAAA,eACvB5J,OAAA,CAAC1C,SAAS;cACR6N,SAAS;cACTb,KAAK,EAAC,cAAc;cACpBR,OAAO,EAAC,UAAU;cAClBsB,KAAK,EAAEzK,KAAM;cACb0K,QAAQ,EAAGC,CAAC,IAAK1K,QAAQ,CAAC0K,CAAC,CAAChH,MAAM,CAAC8G,KAAK,CAAE;cAC1CG,SAAS,EAAGD,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAAC9F,GAAG,KAAK,OAAO,EAAE;kBACrBT,YAAY,CAAC,CAAC;gBAChB;cACF;YAAE;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPpK,OAAA,CAACrC,IAAI;YAACqN,IAAI;YAACC,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAAtB,QAAA,eACvB5J,OAAA,CAACzC,MAAM;cACLuM,OAAO,EAAC,WAAW;cACnB0B,KAAK,EAAC,SAAS;cACfC,OAAO,EAAE1G,YAAa;cACtB2G,QAAQ,EAAE7K,OAAQ;cAClB2I,EAAE,EAAE;gBAAEG,MAAM,EAAE,MAAM;gBAAEgC,KAAK,EAAE;cAAO,CAAE;cAAA/B,QAAA,EAErC/I,OAAO,gBAAGb,OAAA,CAACpC,gBAAgB;gBAAC2M,IAAI,EAAE,EAAG;gBAACiB,KAAK,EAAC;cAAS;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,GAAG;YAAQ;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAERpK,OAAA,CAAC5C,GAAG;QAACoM,EAAE,EAAE;UAAEmC,KAAK,EAAE,MAAM;UAAE3B,QAAQ,EAAE,CAAC;UAAEP,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE;QAAS,CAAE;QAAAE,QAAA,gBAChF5J,OAAA,CAAClC,IAAI;UAACsN,KAAK,EAAEjK,OAAQ;UAACkK,QAAQ,EAAE1G,mBAAoB;UAAAiF,QAAA,gBAClD5J,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtBpK,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC,SAAS;YAACoB,QAAQ,EAAE,CAAC3K,OAAO,CAACmH;UAAO;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClDpK,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC,SAAS;YAACoB,QAAQ,EAAE,CAACzG,MAAM,CAACK,IAAI,CAACvE,OAAO,CAACA,OAAO,IAAI,CAAC,CAAC,CAAC,CAACmH;UAAO;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7EpK,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC,kBAAkB;YAACoB,QAAQ,EAAE,CAACzG,MAAM,CAACK,IAAI,CAACvE,OAAO,CAACA,OAAO,IAAI,CAAC,CAAC,CAAC,CAACmH;UAAO;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtFpK,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC,UAAU;YAACoB,QAAQ,EAAE,CAACzG,MAAM,CAACK,IAAI,CAACvE,OAAO,CAACA,OAAO,IAAI,CAAC,CAAC,CAAC,CAACmH;UAAO;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9EpK,OAAA,CAACjC,GAAG;YAACuM,KAAK,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,EAGNjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAAC4L,YAAY;UACXjK,OAAO,EAAEA,OAAQ;UACjBM,OAAO,EAAEA,OAAQ;UACjBM,MAAM,EAAEA,MAAO;UACfsJ,cAAc,EAAEzH,kBAAmB;UACnC0H,eAAe,EAAErH,mBAAoB;UACrCsH,cAAc,EAAErH,kBAAmB;UACnCuC,gBAAgB,EAAEA,gBAAiB;UACnCI,gBAAgB,EAAEA,gBAAiB;UACnCO,oBAAoB,EAAEA;QAAqB;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CACF,EAGAjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAACgM,WAAW;UACVjL,OAAO,EAAEA,OAAQ;UACjB8F,MAAM,EAAEoF,cAAe;UACvBhF,gBAAgB,EAAEA;QAAiB;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACF,EAGAjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAACkM,WAAW;UACVC,cAAc,EAAEpL,OAAQ;UACxBkG,gBAAgB,EAAEA;QAAiB;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACF,EAGAjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAACoM,eAAe;UACdC,eAAe,EAAE,EAAA3L,gBAAA,GAAAK,OAAO,CAACA,OAAO,cAAAL,gBAAA,uBAAfA,gBAAA,CAAkBuE,MAAM,CAACK,IAAI,CAACvE,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,EAAG;UAC1EJ,KAAK,EAAEA,KAAM;UACbV,OAAO,EAAEA,OAAQ;UACjBqM,cAAc,EAAEzE;QAA8B;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CACF,EAGAjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAACuM,MAAM;UACLJ,cAAc,EAAEpL,OAAQ;UACxBkG,gBAAgB,EAAEA;QAAiB;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACF,EAGAjJ,OAAO,KAAK,CAAC,iBACZnB,OAAA,CAAC5C,GAAG;UAACoM,EAAE,EAAE;YAAEQ,QAAQ,EAAE,CAAC;YAAEP,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEiB,EAAE,EAAE;UAAE,CAAE;UAAAf,QAAA,gBACxE5J,OAAA,CAAClC,IAAI;YAACsN,KAAK,EAAE7J,QAAS;YAAC8J,QAAQ,EAAEvG,oBAAqB;YAAA8E,QAAA,gBACpD5J,OAAA,CAACjC,GAAG;cAACuM,KAAK,EAAC;YAAa;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3BpK,OAAA,CAACjC,GAAG;cAACuM,KAAK,EAAC;YAAS;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvBpK,OAAA,CAACjC,GAAG;cAACuM,KAAK,EAAC;YAAa;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3BpK,OAAA,CAACjC,GAAG;cAACuM,KAAK,EAAC;YAAa;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,EAEN7I,QAAQ,KAAK,CAAC,iBACbvB,OAAA,CAACwM,eAAe;YAAC/K,eAAe,EAAEA;UAAgB;YAAAwI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACrD,EAEA7I,QAAQ,KAAK,CAAC,iBACbvB,OAAA,CAACyM,WAAW;YAAC9K,OAAO,EAAE2B,WAAY;YAACoJ,SAAS,EAAEhG;UAAkB;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACnE,EAEA7I,QAAQ,KAAK,CAAC,iBACbvB,OAAA,CAAC2M,UAAU;YACThL,OAAO,EAAEA,OAAQ;YACjB6B,WAAW,EAAEA,WAAY;YACzBoJ,MAAM,EAAEhG,gBAAiB;YACzBK,gBAAgB,EAAEA;UAAiB;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CACF,EAEA7I,QAAQ,KAAK,CAAC,iBACbvB,OAAA,CAAC6M,UAAU;YACTlL,OAAO,EAAEA,OAAQ;YACjBmL,WAAW,EAAEpJ,iBAAkB;YAC/BqJ,MAAM,EAAEhG,gBAAiB;YACzBE,gBAAgB,EAAEA;UAAiB;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEZpK,OAAA,CAACb,QAAQ;MACP6N,IAAI,EAAE/L,KAAK,KAAK,IAAK;MACrBgM,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAEA,CAAA,KAAMhM,QAAQ,CAAC,IAAI,CAAE;MAC9BiM,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAzD,QAAA,eAE3D5J,OAAA,CAAC/B,KAAK;QAACiP,OAAO,EAAEA,CAAA,KAAMhM,QAAQ,CAAC,IAAI,CAAE;QAACoM,QAAQ,EAAC,OAAO;QAAC9D,EAAE,EAAE;UAAEmC,KAAK,EAAE;QAAO,CAAE;QAAA/B,QAAA,EAC1E3I;MAAK;QAAAgJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAEXpK,OAAA,CAAC5C,GAAG;MAAC2M,SAAS,EAAC,QAAQ;MAACP,EAAE,EAAE;QAAEqB,CAAC,EAAE,CAAC;QAAEJ,OAAO,EAAE,kBAAkB;QAAEE,EAAE,EAAE;MAAO,CAAE;MAAAf,QAAA,eAC5E5J,OAAA,CAAC3C,UAAU;QAACyM,OAAO,EAAC,OAAO;QAAC0B,KAAK,EAAC,gBAAgB;QAAC+B,KAAK,EAAC,QAAQ;QAAA3D,QAAA,EAAC;MAElE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3J,EAAA,CA5nBQD,GAAG;AAAAgN,EAAA,GAAHhN,GAAG;AA8nBZ,eAAeA,GAAG;AAAC,IAAAgN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}