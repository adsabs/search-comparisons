{"ast":null,"code":"/**\n * API service for search-comparisons application.\n * \n * Provides methods for interacting with the backend API.\n */import axios from'axios';// Base API URL from environment or fallback to localhost\nconst API_URL=process.env.REACT_APP_API_URL||process.env.VITE_API_URL||\"http://localhost:8000\";const DEBUG=process.env.REACT_APP_DEBUG==='true';// Create axios instance with consistent configuration\nconst apiClient=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json','Accept':'application/json'},timeout:60000// 1 minute timeout\n});// Log requests and responses in debug mode\nif(DEBUG){apiClient.interceptors.request.use(request=>{console.log('API Request:',request);return request;});apiClient.interceptors.response.use(response=>{console.log('API Response:',response);return response;},error=>{console.error('API Error:',error);return Promise.reject(error);});}/**\n * Standard error handler for API calls\n */const handleApiError=error=>{let errorMessage='An unknown error occurred';if(error.response){// The request was made and the server responded with an error status\nconst status=error.response.status;const data=error.response.data;if(data&&data.detail){errorMessage=data.detail;}else if(data&&data.message){errorMessage=data.message;}else{errorMessage=`Server error: ${status}`;}}else if(error.request){// The request was made but no response was received\nerrorMessage='No response received from server. Please check your connection.';}else{// Something happened in setting up the request\nerrorMessage=error.message||errorMessage;}return{error:true,message:errorMessage};};/**\n * Search API services\n */const searchService={/**\n   * Compare search results across multiple sources\n   */compareSearchResults:async searchParams=>{try{const response=await apiClient.post('/api/search/compare',searchParams);return response.data;}catch(error){return handleApiError(error);}},/**\n   * Get search results from a specific source\n   */searchBySource:async function(source,query){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};try{const response=await apiClient.post(`/api/search/${source}`,{query,...options});return response.data;}catch(error){return handleApiError(error);}},/**\n   * Get paper details by DOI\n   */getPaperDetails:async function(doi){let sources=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];try{const params=sources.length>0?{sources:sources.join(',')}:{};const response=await apiClient.get(`/api/paper/${doi}`,{params});return response.data;}catch(error){return handleApiError(error);}}};/**\n * Experiment API services\n */const experimentService={/**\n   * Run result boosting experiment\n   */runBoostExperiment:async boostConfig=>{try{const response=await apiClient.post('/api/experiments/boost',boostConfig);return response.data;}catch(error){return handleApiError(error);}},/**\n   * Run A/B testing experiment\n   */runAbTest:async function(searchRequest){let variation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'B';try{const response=await apiClient.post(`/api/experiments/ab-test?variation=${variation}`,searchRequest);return response.data;}catch(error){return handleApiError(error);}},/**\n   * Get log analysis metrics\n   */getLogAnalysis:async()=>{try{const response=await apiClient.get('/api/experiments/log-analysis');return response.data;}catch(error){return handleApiError(error);}},/**\n   * Evaluate search results against Quepid judgments\n   */evaluateWithQuepid:async evaluationRequest=>{try{const response=await apiClient.post('/api/experiments/quepid-evaluation',evaluationRequest);return response.data;}catch(error){return handleApiError(error);}},/**\n   * Get available Quepid cases\n   */getQuepidCases:async()=>{try{const response=await apiClient.get('/api/experiments/quepid-cases');return response.data;}catch(error){return handleApiError(error);}}};/**\n * Debug API services\n */const debugService={/**\n   * List available sources and their configuration\n   */listSources:async()=>{try{const response=await apiClient.get('/api/debug/sources');return response.data;}catch(error){return handleApiError(error);}},/**\n   * Get environment information\n   */getEnvironmentInfo:async()=>{try{const response=await apiClient.get('/api/debug/env');return response.data;}catch(error){return handleApiError(error);}},/**\n   * Ping a specific source\n   */pingSource:async source=>{try{const response=await apiClient.get(`/api/debug/ping/${source}`);return response.data;}catch(error){return handleApiError(error);}},/**\n   * Test search on a specific source\n   */testSearch:async function(source,query){let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;try{const response=await apiClient.get(`/api/debug/search/${source}?query=${encodeURIComponent(query)}&limit=${limit}`);return response.data;}catch(error){return handleApiError(error);}}};// Export all services\nexport{searchService,experimentService,debugService,API_URL};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","VITE_API_URL","DEBUG","REACT_APP_DEBUG","apiClient","create","baseURL","headers","timeout","interceptors","request","use","console","log","response","error","Promise","reject","handleApiError","errorMessage","status","data","detail","message","searchService","compareSearchResults","searchParams","post","searchBySource","source","query","options","arguments","length","undefined","getPaperDetails","doi","sources","params","join","get","experimentService","runBoostExperiment","boostConfig","runAbTest","searchRequest","variation","getLogAnalysis","evaluateWithQuepid","evaluationRequest","getQuepidCases","debugService","listSources","getEnvironmentInfo","pingSource","testSearch","limit","encodeURIComponent"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/services/api.js"],"sourcesContent":["/**\n * API service for search-comparisons application.\n * \n * Provides methods for interacting with the backend API.\n */\nimport axios from 'axios';\n\n// Base API URL from environment or fallback to localhost\nconst API_URL = process.env.REACT_APP_API_URL || process.env.VITE_API_URL || \"http://localhost:8000\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\n\n// Create axios instance with consistent configuration\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 60000 // 1 minute timeout\n});\n\n// Log requests and responses in debug mode\nif (DEBUG) {\n  apiClient.interceptors.request.use(request => {\n    console.log('API Request:', request);\n    return request;\n  });\n  \n  apiClient.interceptors.response.use(\n    response => {\n      console.log('API Response:', response);\n      return response;\n    },\n    error => {\n      console.error('API Error:', error);\n      return Promise.reject(error);\n    }\n  );\n}\n\n/**\n * Standard error handler for API calls\n */\nconst handleApiError = (error) => {\n  let errorMessage = 'An unknown error occurred';\n  \n  if (error.response) {\n    // The request was made and the server responded with an error status\n    const status = error.response.status;\n    const data = error.response.data;\n    \n    if (data && data.detail) {\n      errorMessage = data.detail;\n    } else if (data && data.message) {\n      errorMessage = data.message;\n    } else {\n      errorMessage = `Server error: ${status}`;\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    errorMessage = 'No response received from server. Please check your connection.';\n  } else {\n    // Something happened in setting up the request\n    errorMessage = error.message || errorMessage;\n  }\n  \n  return {\n    error: true,\n    message: errorMessage\n  };\n};\n\n/**\n * Search API services\n */\nconst searchService = {\n  /**\n   * Compare search results across multiple sources\n   */\n  compareSearchResults: async (searchParams) => {\n    try {\n      const response = await apiClient.post('/api/search/compare', searchParams);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Get search results from a specific source\n   */\n  searchBySource: async (source, query, options = {}) => {\n    try {\n      const response = await apiClient.post(`/api/search/${source}`, { \n        query,\n        ...options\n      });\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Get paper details by DOI\n   */\n  getPaperDetails: async (doi, sources = []) => {\n    try {\n      const params = sources.length > 0 ? { sources: sources.join(',') } : {};\n      const response = await apiClient.get(`/api/paper/${doi}`, { params });\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n};\n\n/**\n * Experiment API services\n */\nconst experimentService = {\n  /**\n   * Run result boosting experiment\n   */\n  runBoostExperiment: async (boostConfig) => {\n    try {\n      const response = await apiClient.post('/api/experiments/boost', boostConfig);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Run A/B testing experiment\n   */\n  runAbTest: async (searchRequest, variation = 'B') => {\n    try {\n      const response = await apiClient.post(`/api/experiments/ab-test?variation=${variation}`, searchRequest);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Get log analysis metrics\n   */\n  getLogAnalysis: async () => {\n    try {\n      const response = await apiClient.get('/api/experiments/log-analysis');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Evaluate search results against Quepid judgments\n   */\n  evaluateWithQuepid: async (evaluationRequest) => {\n    try {\n      const response = await apiClient.post('/api/experiments/quepid-evaluation', evaluationRequest);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Get available Quepid cases\n   */\n  getQuepidCases: async () => {\n    try {\n      const response = await apiClient.get('/api/experiments/quepid-cases');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n};\n\n/**\n * Debug API services\n */\nconst debugService = {\n  /**\n   * List available sources and their configuration\n   */\n  listSources: async () => {\n    try {\n      const response = await apiClient.get('/api/debug/sources');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Get environment information\n   */\n  getEnvironmentInfo: async () => {\n    try {\n      const response = await apiClient.get('/api/debug/env');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Ping a specific source\n   */\n  pingSource: async (source) => {\n    try {\n      const response = await apiClient.get(`/api/debug/ping/${source}`);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n  \n  /**\n   * Test search on a specific source\n   */\n  testSearch: async (source, query, limit = 5) => {\n    try {\n      const response = await apiClient.get(`/api/debug/search/${source}?query=${encodeURIComponent(query)}&limit=${limit}`);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n};\n\n// Export all services\nexport {\n  searchService,\n  experimentService,\n  debugService,\n  API_URL\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAIF,OAAO,CAACC,GAAG,CAACE,YAAY,EAAI,uBAAuB,CACpG,KAAM,CAAAC,KAAK,CAAGJ,OAAO,CAACC,GAAG,CAACI,eAAe,GAAK,MAAM,CAEpD;AACA,KAAM,CAAAC,SAAS,CAAGR,KAAK,CAACS,MAAM,CAAC,CAC7BC,OAAO,CAAET,OAAO,CAChBU,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACZ,CAAC,CACDC,OAAO,CAAE,KAAM;AACjB,CAAC,CAAC,CAEF;AACA,GAAIN,KAAK,CAAE,CACTE,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,EAAI,CAC5CE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEH,OAAO,CAAC,CACpC,MAAO,CAAAA,OAAO,CAChB,CAAC,CAAC,CAEFN,SAAS,CAACK,YAAY,CAACK,QAAQ,CAACH,GAAG,CACjCG,QAAQ,EAAI,CACVF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEC,QAAQ,CAAC,CACtC,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACDC,KAAK,EAAI,CACPH,OAAO,CAACG,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CACH,CAEA;AACA;AACA,GACA,KAAM,CAAAG,cAAc,CAAIH,KAAK,EAAK,CAChC,GAAI,CAAAI,YAAY,CAAG,2BAA2B,CAE9C,GAAIJ,KAAK,CAACD,QAAQ,CAAE,CAClB;AACA,KAAM,CAAAM,MAAM,CAAGL,KAAK,CAACD,QAAQ,CAACM,MAAM,CACpC,KAAM,CAAAC,IAAI,CAAGN,KAAK,CAACD,QAAQ,CAACO,IAAI,CAEhC,GAAIA,IAAI,EAAIA,IAAI,CAACC,MAAM,CAAE,CACvBH,YAAY,CAAGE,IAAI,CAACC,MAAM,CAC5B,CAAC,IAAM,IAAID,IAAI,EAAIA,IAAI,CAACE,OAAO,CAAE,CAC/BJ,YAAY,CAAGE,IAAI,CAACE,OAAO,CAC7B,CAAC,IAAM,CACLJ,YAAY,CAAG,iBAAiBC,MAAM,EAAE,CAC1C,CACF,CAAC,IAAM,IAAIL,KAAK,CAACL,OAAO,CAAE,CACxB;AACAS,YAAY,CAAG,iEAAiE,CAClF,CAAC,IAAM,CACL;AACAA,YAAY,CAAGJ,KAAK,CAACQ,OAAO,EAAIJ,YAAY,CAC9C,CAEA,MAAO,CACLJ,KAAK,CAAE,IAAI,CACXQ,OAAO,CAAEJ,YACX,CAAC,CACH,CAAC,CAED;AACA;AACA,GACA,KAAM,CAAAK,aAAa,CAAG,CACpB;AACF;AACA,KACEC,oBAAoB,CAAE,KAAO,CAAAC,YAAY,EAAK,CAC5C,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACuB,IAAI,CAAC,qBAAqB,CAAED,YAAY,CAAC,CAC1E,MAAO,CAAAZ,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEa,cAAc,CAAE,cAAAA,CAAOC,MAAM,CAAEC,KAAK,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAChD,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACuB,IAAI,CAAC,eAAeE,MAAM,EAAE,CAAE,CAC7DC,KAAK,CACL,GAAGC,OACL,CAAC,CAAC,CACF,MAAO,CAAAjB,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEoB,eAAe,CAAE,cAAAA,CAAOC,GAAG,CAAmB,IAAjB,CAAAC,OAAO,CAAAL,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACvC,GAAI,CACF,KAAM,CAAAM,MAAM,CAAGD,OAAO,CAACJ,MAAM,CAAG,CAAC,CAAG,CAAEI,OAAO,CAAEA,OAAO,CAACE,IAAI,CAAC,GAAG,CAAE,CAAC,CAAG,CAAC,CAAC,CACvE,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,cAAcJ,GAAG,EAAE,CAAE,CAAEE,MAAO,CAAC,CAAC,CACrE,MAAO,CAAAxB,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CACF,CAAC,CAED;AACA;AACA,GACA,KAAM,CAAA0B,iBAAiB,CAAG,CACxB;AACF;AACA,KACEC,kBAAkB,CAAE,KAAO,CAAAC,WAAW,EAAK,CACzC,GAAI,CACF,KAAM,CAAA7B,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACuB,IAAI,CAAC,wBAAwB,CAAEgB,WAAW,CAAC,CAC5E,MAAO,CAAA7B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACE6B,SAAS,CAAE,cAAAA,CAAOC,aAAa,CAAsB,IAApB,CAAAC,SAAS,CAAAd,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,CAC9C,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACuB,IAAI,CAAC,sCAAsCmB,SAAS,EAAE,CAAED,aAAa,CAAC,CACvG,MAAO,CAAA/B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEgC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAjC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,+BAA+B,CAAC,CACrE,MAAO,CAAA1B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEiC,kBAAkB,CAAE,KAAO,CAAAC,iBAAiB,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAnC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACuB,IAAI,CAAC,oCAAoC,CAAEsB,iBAAiB,CAAC,CAC9F,MAAO,CAAAnC,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEmC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAApC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,+BAA+B,CAAC,CACrE,MAAO,CAAA1B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CACF,CAAC,CAED;AACA;AACA,GACA,KAAM,CAAAoC,YAAY,CAAG,CACnB;AACF;AACA,KACEC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,oBAAoB,CAAC,CAC1D,MAAO,CAAA1B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEsC,kBAAkB,CAAE,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAvC,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,gBAAgB,CAAC,CACtD,MAAO,CAAA1B,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEuC,UAAU,CAAE,KAAO,CAAAzB,MAAM,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,mBAAmBX,MAAM,EAAE,CAAC,CACjE,MAAO,CAAAf,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACF;AACA,KACEwC,UAAU,CAAE,cAAAA,CAAO1B,MAAM,CAAEC,KAAK,CAAgB,IAAd,CAAA0B,KAAK,CAAAxB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CACzC,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAV,SAAS,CAACoC,GAAG,CAAC,qBAAqBX,MAAM,UAAU4B,kBAAkB,CAAC3B,KAAK,CAAC,UAAU0B,KAAK,EAAE,CAAC,CACrH,MAAO,CAAA1C,QAAQ,CAACO,IAAI,CACtB,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CAAAG,cAAc,CAACH,KAAK,CAAC,CAC9B,CACF,CACF,CAAC,CAED;AACA,OACES,aAAa,CACbiB,iBAAiB,CACjBU,YAAY,CACZtD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}