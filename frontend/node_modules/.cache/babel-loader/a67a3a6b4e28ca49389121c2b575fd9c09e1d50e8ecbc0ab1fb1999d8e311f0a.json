{"ast":null,"code":"var _jsxFileName = \"/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, TextField, Button, Checkbox, FormControlLabel, FormGroup, Grid, CircularProgress, Paper, Tabs, Tab, Divider, Alert, IconButton, AppBar, Toolbar, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Chip, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar, Tooltip, Snackbar } from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport CheckIcon from '@mui/icons-material/Check';\n\n// Import BoostExperiment component\nimport BoostExperiment from './components/BoostExperiment';\nimport { searchService, experimentService, debugService } from './services/api';\n\n// Add stub components for the missing components\n// In a real application, these would be imported from proper files\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchConfig = ({\n  sources,\n  metrics,\n  fields,\n  onSourceChange,\n  onMetricsChange,\n  onFieldsChange,\n  formatSourceName,\n  formatMetricName,\n  getMetricDescription\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Search Configuration\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for SearchConfig.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\n_c = SearchConfig;\nconst ResultsView = ({\n  results,\n  source,\n  formatSourceName\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Results View\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for ResultsView.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n_c2 = ResultsView;\nconst CompareView = ({\n  compareResults,\n  formatSourceName\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Compare View\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for CompareView.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this);\n_c3 = CompareView;\nconst ABTest = ({\n  compareResults,\n  formatSourceName\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"A/B Testing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for ABTest.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n_c4 = ABTest;\nconst EnvironmentInfo = ({\n  environmentInfo\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Environment Information\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: JSON.stringify(environmentInfo, null, 2)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this);\n_c5 = EnvironmentInfo;\nconst SourcesList = ({\n  sources,\n  onRefresh\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Sources List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    onClick: onRefresh,\n    children: \"Refresh Sources\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for SourcesList.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n_c6 = SourcesList;\nconst PingSource = ({\n  sources,\n  pingResults,\n  onPing,\n  formatSourceName\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Ping Source\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for PingSource.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this);\n_c7 = PingSource;\nconst TestSearch = ({\n  sources,\n  testResults,\n  onTest,\n  formatSourceName\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    p: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Test Search\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"info\",\n    children: \"This is a stub component for TestSearch.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 3\n}, this);\n_c8 = TestSearch;\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APP_VERSION = \"1.0.0\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\nfunction App() {\n  _s();\n  var _results$results;\n  // State for search query and options\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState({\n    results: {}\n  }); // Initialize with empty results object\n  const [error, setError] = useState(null);\n  const [mainTab, setMainTab] = useState(0);\n  const [experimentTab, setExperimentTab] = useState(0);\n  const [debugTab, setDebugTab] = useState(0);\n  const [environmentInfo, setEnvironmentInfo] = useState(null);\n\n  // State for source selection\n  const [sources, setSources] = useState({\n    ads: true,\n    scholar: true,\n    semanticScholar: false,\n    webOfScience: true\n  });\n\n  // State for similarity metrics selection\n  const [metrics, setMetrics] = useState({\n    jaccard: true,\n    rankBiased: true,\n    cosine: false,\n    euclidean: false\n  });\n\n  // State for metadata fields to compare\n  const [fields, setFields] = useState({\n    title: true,\n    abstract: true,\n    authors: false,\n    doi: true,\n    year: false,\n    citation_count: true\n  });\n\n  // Boost experiment state\n  const [boostConfig, setBoostConfig] = useState({\n    query: '',\n    boost_fields: ['citation_count', 'year'],\n    boost_weights: {\n      citation_count: 0.2,\n      year: 0.4\n    },\n    max_boost: 1.5\n  });\n\n  // A/B test state\n  const [abTestVariation, setAbTestVariation] = useState('B');\n\n  // Debug state\n  const [sourcesList, setSourcesList] = useState(null);\n  const [pingResults, setPingResults] = useState({});\n  const [testSearchResults, setTestSearchResults] = useState(null);\n\n  // Result tab state\n  const [resultTab, setResultTab] = useState(0);\n  const [filterText, setFilterText] = useState('');\n\n  // Add missing state variable\n  const [selectedSource, setSelectedSource] = useState('ads');\n\n  // Load environment info on startup\n  useEffect(() => {\n    const fetchEnvironmentInfo = async () => {\n      try {\n        const envInfo = await debugService.getEnvironmentInfo();\n        if (!envInfo.error) {\n          setEnvironmentInfo(envInfo);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch environment info:\", error);\n      }\n    };\n    if (DEBUG) {\n      fetchEnvironmentInfo();\n    }\n  }, []);\n\n  // Handle source selection changes\n  const handleSourceChange = event => {\n    setSources({\n      ...sources,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle metrics selection changes\n  const handleMetricsChange = event => {\n    setMetrics({\n      ...metrics,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle fields selection changes\n  const handleFieldsChange = event => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle tab changes\n  const handleMainTabChange = (event, newValue) => {\n    setMainTab(newValue);\n  };\n  const handleExperimentTabChange = (event, newValue) => {\n    setExperimentTab(newValue);\n  };\n  const handleDebugTabChange = (event, newValue) => {\n    setDebugTab(newValue);\n  };\n\n  // Submit the search query\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query\");\n      return;\n    }\n    if (!Object.values(sources).some(val => val)) {\n      setError(\"Please select at least one search source\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n\n      // Always include these fields for proper display\n      const selectedFields = [...Object.keys(fields).filter(key => fields[key]), 'abstract',\n      // Always include abstract\n      'citation_count' // Always include citation_count\n      ];\n\n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields\n      };\n      if (DEBUG) {\n        console.log('Making search request:', requestBody);\n      }\n      const response = await searchService.compareSearchResults(requestBody);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setResults(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(`Failed to fetch results: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run boost experiment\n  const handleRunBoostExperiment = async () => {\n    if (!boostConfig.query.trim()) {\n      setError(\"Please enter a query for the boost experiment\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      if (DEBUG) {\n        console.log('Running boost experiment with config:', boostConfig);\n      }\n      const response = await experimentService.runBoostExperiment(boostConfig);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'boost',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('Boost experiment error:', err);\n      setError(`Failed to run boost experiment: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run A/B test\n  const handleRunAbTest = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for the A/B test\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      const selectedFields = Object.keys(fields).filter(key => fields[key]);\n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: selectedFields\n      };\n      if (DEBUG) {\n        console.log('Running A/B test with config:', requestBody, 'Variation:', abTestVariation);\n      }\n      const response = await experimentService.runAbTest(requestBody, abTestVariation);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'abTest',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('A/B test error:', err);\n      setError(`Failed to run A/B test: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // List sources for debug\n  const handleListSources = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await debugService.listSources();\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setSourcesList(response);\n      }\n    } catch (err) {\n      console.error('List sources error:', err);\n      setError(`Failed to list sources: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ping source for debug\n  const handlePingSource = async source => {\n    setLoading(true);\n    setError(null);\n    try {\n      setPingResults({\n        ...pingResults,\n        [source]: {\n          loading: true\n        }\n      });\n      const response = await debugService.pingSource(source);\n      if (response.error) {\n        setPingResults({\n          ...pingResults,\n          [source]: {\n            error: response.message\n          }\n        });\n      } else {\n        setPingResults({\n          ...pingResults,\n          [source]: response\n        });\n      }\n    } catch (err) {\n      console.error(`Ping source ${source} error:`, err);\n      setPingResults({\n        ...pingResults,\n        [source]: {\n          error: err.message\n        }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Test search for debug\n  const handleTestSearch = async source => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for testing\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await debugService.testSearch(source, query);\n      if (response.error) {\n        setError(response.message);\n      } else {\n        setTestSearchResults(response);\n      }\n    } catch (err) {\n      console.error('Test search error:', err);\n      setError(`Failed to test search: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format source name for display\n  const formatSourceName = source => {\n    switch (source) {\n      case 'ads':\n        return 'ADS/SciX';\n      case 'scholar':\n        return 'Google Scholar';\n      case 'webOfScience':\n        return 'Web of Science';\n      case 'semanticScholar':\n        return 'Semantic Scholar';\n      default:\n        return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n  };\n\n  // Format metric name for display\n  const formatMetricName = metric => {\n    switch (metric) {\n      case 'jaccard':\n        return 'Jaccard Similarity';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap';\n      case 'cosine':\n        return 'Cosine Similarity';\n      case 'euclidean':\n        return 'Euclidean Distance';\n      default:\n        return metric.replace(/_/g, ' ').split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    }\n  };\n\n  // Helper function to get metric description\n  const getMetricDescription = metric => {\n    switch (metric) {\n      case 'jaccard':\n        return 'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';\n      case 'cosine':\n        return 'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';\n      case 'euclidean':\n        return 'Measures the straight-line distance between two points in Euclidean space.';\n      default:\n        return 'No description available for this metric.';\n    }\n  };\n\n  // Add a function to handle running a new search with custom field weights\n  const handleRunNewSearchWithWeights = async (transformedQuery, boostConfig) => {\n    if (!transformedQuery || !transformedQuery.trim()) {\n      setError(\"Please enter a search query\");\n      return Promise.reject(new Error(\"Empty query\"));\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      // Get selected sources\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      if (selectedSources.length === 0) {\n        throw new Error('Please select at least one source');\n      }\n\n      // Get selected metrics\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n\n      // Always include these fields for proper display\n      const selectedFields = [...Object.keys(fields).filter(key => fields[key]), 'abstract',\n      // Always include abstract\n      'citation_count',\n      // Always include citation_count\n      'doctype',\n      // Include doctype for boost features\n      'property',\n      // Include property for refereed status\n      'year' // Include year for recency boost\n      ];\n\n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      const requestBody = {\n        query: transformedQuery,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields,\n        originalQuery: query,\n        // Include the original query for reference\n        max_results: 1000,\n        // Request up to 1000 results for boosting\n        useTransformedQuery: true // Flag to indicate this is a transformed query\n      };\n      console.log('Making search request with transformed query:', requestBody);\n      const response = await fetch(`${API_URL}/api/search/compare`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n      const data = await response.json();\n\n      // Store the full results\n      setResults(data);\n\n      // For the boost experiment tab, we need data from the first source\n      const primarySource = selectedSources[0];\n\n      // Set the active tab to the boost experiment tab\n      setMainTab(1); // Switch to the relevant tab where BoostExperiment is rendered\n\n      return Promise.resolve(data);\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(err.message || 'An error occurred while searching');\n      return Promise.reject(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Search Comparison Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), (environmentInfo === null || environmentInfo === void 0 ? void 0 : environmentInfo.version) && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `v${environmentInfo.version}`,\n          size: \"small\",\n          sx: {\n            mr: 2,\n            bgcolor: 'primary.dark'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 4,\n        mb: 4,\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Query\",\n              variant: \"outlined\",\n              value: query,\n              onChange: e => setQuery(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  handleSearch();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSearch,\n              disabled: loading,\n              sx: {\n                height: '100%',\n                width: '100%'\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 28\n              }, this) : 'Search'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: mainTab,\n          onChange: handleMainTabChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Results\",\n            disabled: !results.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Compare\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Boost Experiment\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"A/B Test\",\n            disabled: !Object.keys(results.results || {}).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Debug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), mainTab === 0 && /*#__PURE__*/_jsxDEV(SearchConfig, {\n          sources: sources,\n          metrics: metrics,\n          fields: fields,\n          onSourceChange: handleSourceChange,\n          onMetricsChange: handleMetricsChange,\n          onFieldsChange: handleFieldsChange,\n          formatSourceName: formatSourceName,\n          formatMetricName: formatMetricName,\n          getMetricDescription: getMetricDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this), mainTab === 1 && /*#__PURE__*/_jsxDEV(ResultsView, {\n          results: results,\n          source: selectedSource,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), mainTab === 2 && /*#__PURE__*/_jsxDEV(CompareView, {\n          compareResults: results,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), mainTab === 3 && /*#__PURE__*/_jsxDEV(BoostExperiment, {\n          originalResults: ((_results$results = results.results) === null || _results$results === void 0 ? void 0 : _results$results[Object.keys(results.results)[0]]) || [],\n          query: query,\n          API_URL: API_URL,\n          onRunNewSearch: handleRunNewSearchWithWeights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), mainTab === 4 && /*#__PURE__*/_jsxDEV(ABTest, {\n          compareResults: results,\n          formatSourceName: formatSourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this), mainTab === 5 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            value: debugTab,\n            onChange: handleDebugTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Ping Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"Test Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), debugTab === 0 && /*#__PURE__*/_jsxDEV(EnvironmentInfo, {\n            environmentInfo: environmentInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 17\n          }, this), debugTab === 1 && /*#__PURE__*/_jsxDEV(SourcesList, {\n            sources: sourcesList,\n            onRefresh: handleListSources\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 17\n          }, this), debugTab === 2 && /*#__PURE__*/_jsxDEV(PingSource, {\n            sources: sources,\n            pingResults: pingResults,\n            onPing: handlePingSource,\n            formatSourceName: formatSourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this), debugTab === 3 && /*#__PURE__*/_jsxDEV(TestSearch, {\n            sources: sources,\n            testResults: testSearchResults,\n            onTest: handleTestSearch,\n            formatSourceName: formatSourceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error !== null,\n      autoHideDuration: 6000,\n      onClose: () => setError(null),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setError(null),\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"footer\",\n      sx: {\n        p: 2,\n        bgcolor: 'background.paper',\n        mt: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"Search Comparison Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7X/q1mL+zDHmzO3i4Mudbo40qLA=\");\n_c9 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"SearchConfig\");\n$RefreshReg$(_c2, \"ResultsView\");\n$RefreshReg$(_c3, \"CompareView\");\n$RefreshReg$(_c4, \"ABTest\");\n$RefreshReg$(_c5, \"EnvironmentInfo\");\n$RefreshReg$(_c6, \"SourcesList\");\n$RefreshReg$(_c7, \"PingSource\");\n$RefreshReg$(_c8, \"TestSearch\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","TextField","Button","Checkbox","FormControlLabel","FormGroup","Grid","CircularProgress","Paper","Tabs","Tab","Divider","Alert","IconButton","AppBar","Toolbar","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","Chip","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Avatar","Tooltip","Snackbar","InfoIcon","BugReportIcon","ScienceIcon","SearchIcon","GitHubIcon","LaunchIcon","NetworkCheckIcon","CheckIcon","BoostExperiment","searchService","experimentService","debugService","jsxDEV","_jsxDEV","SearchConfig","sources","metrics","fields","onSourceChange","onMetricsChange","onFieldsChange","formatSourceName","formatMetricName","getMetricDescription","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","_c","ResultsView","results","source","_c2","CompareView","compareResults","_c3","ABTest","_c4","EnvironmentInfo","environmentInfo","JSON","stringify","_c5","SourcesList","onRefresh","onClick","_c6","PingSource","pingResults","onPing","_c7","TestSearch","testResults","onTest","_c8","API_URL","process","env","REACT_APP_API_URL","APP_VERSION","DEBUG","REACT_APP_DEBUG","App","_s","_results$results","query","setQuery","loading","setLoading","setResults","error","setError","mainTab","setMainTab","experimentTab","setExperimentTab","debugTab","setDebugTab","setEnvironmentInfo","setSources","ads","scholar","semanticScholar","webOfScience","setMetrics","jaccard","rankBiased","cosine","euclidean","setFields","title","abstract","authors","doi","year","citation_count","boostConfig","setBoostConfig","boost_fields","boost_weights","max_boost","abTestVariation","setAbTestVariation","sourcesList","setSourcesList","setPingResults","testSearchResults","setTestSearchResults","resultTab","setResultTab","filterText","setFilterText","selectedSource","setSelectedSource","fetchEnvironmentInfo","envInfo","getEnvironmentInfo","console","handleSourceChange","event","target","name","checked","handleMetricsChange","handleFieldsChange","handleMainTabChange","newValue","handleExperimentTabChange","handleDebugTabChange","handleSearch","trim","Object","values","some","val","selectedSources","keys","filter","key","selectedMetrics","selectedFields","uniqueFields","Array","from","Set","requestBody","log","response","compareSearchResults","message","err","handleRunBoostExperiment","runBoostExperiment","type","handleRunAbTest","runAbTest","handleListSources","listSources","handlePingSource","pingSource","handleTestSearch","testSearch","charAt","toUpperCase","slice","metric","replace","split","map","word","join","handleRunNewSearchWithWeights","transformedQuery","Promise","reject","Error","length","originalQuery","max_results","useTransformedQuery","fetch","method","headers","body","ok","errorText","text","status","statusText","data","json","primarySource","resolve","display","flexDirection","height","position","component","flexGrow","version","label","size","mr","bgcolor","maxWidth","mt","mb","container","spacing","item","xs","md","fullWidth","value","onChange","e","onKeyDown","color","disabled","width","originalResults","onRunNewSearch","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","align","_c9","$RefreshReg$"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, Box, Typography, TextField, Button, \n  Checkbox, FormControlLabel, FormGroup, Grid, \n  CircularProgress, Paper, Tabs, Tab, Divider, Alert,\n  IconButton, AppBar, Toolbar, TableContainer, Table,\n  TableHead, TableBody, TableRow, TableCell, Chip,\n  List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction,\n  Avatar, Tooltip, Snackbar\n} from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport CheckIcon from '@mui/icons-material/Check';\n\n// Import BoostExperiment component\nimport BoostExperiment from './components/BoostExperiment';\n\nimport { searchService, experimentService, debugService } from './services/api';\n\n// Add stub components for the missing components\n// In a real application, these would be imported from proper files\nconst SearchConfig = ({ sources, metrics, fields, onSourceChange, onMetricsChange, onFieldsChange, formatSourceName, formatMetricName, getMetricDescription }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Search Configuration</Typography>\n    <Alert severity=\"info\">This is a stub component for SearchConfig.</Alert>\n  </Box>\n);\n\nconst ResultsView = ({ results, source, formatSourceName }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Results View</Typography>\n    <Alert severity=\"info\">This is a stub component for ResultsView.</Alert>\n  </Box>\n);\n\nconst CompareView = ({ compareResults, formatSourceName }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Compare View</Typography>\n    <Alert severity=\"info\">This is a stub component for CompareView.</Alert>\n  </Box>\n);\n\nconst ABTest = ({ compareResults, formatSourceName }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">A/B Testing</Typography>\n    <Alert severity=\"info\">This is a stub component for ABTest.</Alert>\n  </Box>\n);\n\nconst EnvironmentInfo = ({ environmentInfo }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Environment Information</Typography>\n    <pre>{JSON.stringify(environmentInfo, null, 2)}</pre>\n  </Box>\n);\n\nconst SourcesList = ({ sources, onRefresh }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Sources List</Typography>\n    <Button variant=\"contained\" onClick={onRefresh}>Refresh Sources</Button>\n    <Alert severity=\"info\">This is a stub component for SourcesList.</Alert>\n  </Box>\n);\n\nconst PingSource = ({ sources, pingResults, onPing, formatSourceName }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Ping Source</Typography>\n    <Alert severity=\"info\">This is a stub component for PingSource.</Alert>\n  </Box>\n);\n\nconst TestSearch = ({ sources, testResults, onTest, formatSourceName }) => (\n  <Box sx={{ p: 2 }}>\n    <Typography variant=\"h6\">Test Search</Typography>\n    <Alert severity=\"info\">This is a stub component for TestSearch.</Alert>\n  </Box>\n);\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APP_VERSION = \"1.0.0\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\n\nfunction App() {\n  // State for search query and options\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState({results: {}}); // Initialize with empty results object\n  const [error, setError] = useState(null);\n  const [mainTab, setMainTab] = useState(0);\n  const [experimentTab, setExperimentTab] = useState(0);\n  const [debugTab, setDebugTab] = useState(0);\n  const [environmentInfo, setEnvironmentInfo] = useState(null);\n  \n  // State for source selection\n  const [sources, setSources] = useState({\n    ads: true,\n    scholar: true,\n    semanticScholar: false,\n    webOfScience: true\n  });\n  \n  // State for similarity metrics selection\n  const [metrics, setMetrics] = useState({\n    jaccard: true,\n    rankBiased: true,\n    cosine: false,\n    euclidean: false\n  });\n  \n  // State for metadata fields to compare\n  const [fields, setFields] = useState({\n    title: true,\n    abstract: true,\n    authors: false,\n    doi: true,\n    year: false,\n    citation_count: true\n  });\n\n  // Boost experiment state\n  const [boostConfig, setBoostConfig] = useState({\n    query: '',\n    boost_fields: ['citation_count', 'year'],\n    boost_weights: {\n      citation_count: 0.2,\n      year: 0.4\n    },\n    max_boost: 1.5\n  });\n  \n  // A/B test state\n  const [abTestVariation, setAbTestVariation] = useState('B');\n\n  // Debug state\n  const [sourcesList, setSourcesList] = useState(null);\n  const [pingResults, setPingResults] = useState({});\n  const [testSearchResults, setTestSearchResults] = useState(null);\n\n  // Result tab state\n  const [resultTab, setResultTab] = useState(0);\n  const [filterText, setFilterText] = useState('');\n\n  // Add missing state variable\n  const [selectedSource, setSelectedSource] = useState('ads');\n\n  // Load environment info on startup\n  useEffect(() => {\n    const fetchEnvironmentInfo = async () => {\n      try {\n        const envInfo = await debugService.getEnvironmentInfo();\n        if (!envInfo.error) {\n          setEnvironmentInfo(envInfo);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch environment info:\", error);\n      }\n    };\n\n    if (DEBUG) {\n      fetchEnvironmentInfo();\n    }\n  }, []);\n\n  // Handle source selection changes\n  const handleSourceChange = (event) => {\n    setSources({\n      ...sources,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle metrics selection changes\n  const handleMetricsChange = (event) => {\n    setMetrics({\n      ...metrics,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle fields selection changes\n  const handleFieldsChange = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle tab changes\n  const handleMainTabChange = (event, newValue) => {\n    setMainTab(newValue);\n  };\n\n  const handleExperimentTabChange = (event, newValue) => {\n    setExperimentTab(newValue);\n  };\n\n  const handleDebugTabChange = (event, newValue) => {\n    setDebugTab(newValue);\n  };\n\n  // Submit the search query\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query\");\n      return;\n    }\n    \n    if (!Object.values(sources).some(val => val)) {\n      setError(\"Please select at least one search source\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count'  // Always include citation_count\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields\n      };\n\n      if (DEBUG) {\n        console.log('Making search request:', requestBody);\n      }\n      \n      const response = await searchService.compareSearchResults(requestBody);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setResults(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(`Failed to fetch results: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run boost experiment\n  const handleRunBoostExperiment = async () => {\n    if (!boostConfig.query.trim()) {\n      setError(\"Please enter a query for the boost experiment\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (DEBUG) {\n        console.log('Running boost experiment with config:', boostConfig);\n      }\n      \n      const response = await experimentService.runBoostExperiment(boostConfig);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'boost',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('Boost experiment error:', err);\n      setError(`Failed to run boost experiment: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run A/B test\n  const handleRunAbTest = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for the A/B test\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      const selectedFields = Object.keys(fields).filter(key => fields[key]);\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: selectedFields\n      };\n\n      if (DEBUG) {\n        console.log('Running A/B test with config:', requestBody, 'Variation:', abTestVariation);\n      }\n      \n      const response = await experimentService.runAbTest(requestBody, abTestVariation);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'abTest',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('A/B test error:', err);\n      setError(`Failed to run A/B test: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // List sources for debug\n  const handleListSources = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.listSources();\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setSourcesList(response);\n      }\n    } catch (err) {\n      console.error('List sources error:', err);\n      setError(`Failed to list sources: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ping source for debug\n  const handlePingSource = async (source) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      setPingResults({\n        ...pingResults,\n        [source]: { loading: true }\n      });\n      \n      const response = await debugService.pingSource(source);\n      \n      if (response.error) {\n        setPingResults({\n          ...pingResults,\n          [source]: { error: response.message }\n        });\n      } else {\n        setPingResults({\n          ...pingResults,\n          [source]: response\n        });\n      }\n    } catch (err) {\n      console.error(`Ping source ${source} error:`, err);\n      setPingResults({\n        ...pingResults,\n        [source]: { error: err.message }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Test search for debug\n  const handleTestSearch = async (source) => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for testing\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.testSearch(source, query);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setTestSearchResults(response);\n      }\n    } catch (err) {\n      console.error('Test search error:', err);\n      setError(`Failed to test search: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format source name for display\n  const formatSourceName = (source) => {\n    switch(source) {\n      case 'ads':\n        return 'ADS/SciX';\n      case 'scholar':\n        return 'Google Scholar';\n      case 'webOfScience':\n        return 'Web of Science';\n      case 'semanticScholar':\n        return 'Semantic Scholar';\n      default:\n        return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n  };\n\n  // Format metric name for display\n  const formatMetricName = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Jaccard Similarity';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap';\n      case 'cosine':\n        return 'Cosine Similarity';\n      case 'euclidean':\n        return 'Euclidean Distance';\n      default:\n        return metric.replace(/_/g, ' ').split(' ').map(word => \n          word.charAt(0).toUpperCase() + word.slice(1)\n        ).join(' ');\n    }\n  };\n\n  // Helper function to get metric description\n  const getMetricDescription = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';\n      case 'cosine':\n        return 'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';\n      case 'euclidean':\n        return 'Measures the straight-line distance between two points in Euclidean space.';\n      default:\n        return 'No description available for this metric.';\n    }\n  };\n\n  // Add a function to handle running a new search with custom field weights\n  const handleRunNewSearchWithWeights = async (transformedQuery, boostConfig) => {\n    if (!transformedQuery || !transformedQuery.trim()) {\n      setError(\"Please enter a search query\");\n      return Promise.reject(new Error(\"Empty query\"));\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Get selected sources\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      \n      if (selectedSources.length === 0) {\n        throw new Error('Please select at least one source');\n      }\n      \n      // Get selected metrics\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count',  // Always include citation_count\n        'doctype',   // Include doctype for boost features\n        'property',  // Include property for refereed status\n        'year'       // Include year for recency boost\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query: transformedQuery,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields,\n        originalQuery: query, // Include the original query for reference\n        max_results: 1000,    // Request up to 1000 results for boosting\n        useTransformedQuery: true // Flag to indicate this is a transformed query\n      };\n      \n      console.log('Making search request with transformed query:', requestBody);\n      \n      const response = await fetch(`${API_URL}/api/search/compare`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      // Store the full results\n      setResults(data);\n      \n      // For the boost experiment tab, we need data from the first source\n      const primarySource = selectedSources[0];\n      \n      // Set the active tab to the boost experiment tab\n      setMainTab(1); // Switch to the relevant tab where BoostExperiment is rendered\n      \n      return Promise.resolve(data);\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(err.message || 'An error occurred while searching');\n      return Promise.reject(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Search Comparison Tool\n          </Typography>\n          {environmentInfo?.version && (\n            <Chip\n              label={`v${environmentInfo.version}`}\n              size=\"small\"\n              sx={{ mr: 2, bgcolor: 'primary.dark' }}\n            />\n          )}\n        </Toolbar>\n      </AppBar>\n      \n      <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4, flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <Paper sx={{ p: 2, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={8}>\n              <TextField\n                fullWidth\n                label=\"Search Query\"\n                variant=\"outlined\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    handleSearch();\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSearch}\n                disabled={loading}\n                sx={{ height: '100%', width: '100%' }}\n              >\n                {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Search'}\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        \n        <Box sx={{ width: '100%', flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n          <Tabs value={mainTab} onChange={handleMainTabChange}>\n            <Tab label=\"Search\" />\n            <Tab label=\"Results\" disabled={!results.length} />\n            <Tab label=\"Compare\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"Boost Experiment\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"A/B Test\" disabled={!Object.keys(results.results || {}).length} />\n            <Tab label=\"Debug\" />\n          </Tabs>\n          \n          {/* Search Tab */}\n          {mainTab === 0 && (\n            <SearchConfig\n              sources={sources}\n              metrics={metrics}\n              fields={fields}\n              onSourceChange={handleSourceChange}\n              onMetricsChange={handleMetricsChange}\n              onFieldsChange={handleFieldsChange}\n              formatSourceName={formatSourceName}\n              formatMetricName={formatMetricName}\n              getMetricDescription={getMetricDescription}\n            />\n          )}\n          \n          {/* Results Tab */}\n          {mainTab === 1 && (\n            <ResultsView\n              results={results}\n              source={selectedSource}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Compare Tab */}\n          {mainTab === 2 && (\n            <CompareView\n              compareResults={results}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Boost Experiment Tab */}\n          {mainTab === 3 && (\n            <BoostExperiment\n              originalResults={results.results?.[Object.keys(results.results)[0]] || []}\n              query={query}\n              API_URL={API_URL}\n              onRunNewSearch={handleRunNewSearchWithWeights}\n            />\n          )}\n          \n          {/* A/B Test Tab */}\n          {mainTab === 4 && (\n            <ABTest\n              compareResults={results}\n              formatSourceName={formatSourceName}\n            />\n          )}\n          \n          {/* Debug Tab */}\n          {mainTab === 5 && (\n            <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', mt: 2 }}>\n              <Tabs value={debugTab} onChange={handleDebugTabChange}>\n                <Tab label=\"Environment\" />\n                <Tab label=\"Sources\" />\n                <Tab label=\"Ping Source\" />\n                <Tab label=\"Test Search\" />\n              </Tabs>\n              \n              {debugTab === 0 && (\n                <EnvironmentInfo environmentInfo={environmentInfo} />\n              )}\n              \n              {debugTab === 1 && (\n                <SourcesList sources={sourcesList} onRefresh={handleListSources} />\n              )}\n              \n              {debugTab === 2 && (\n                <PingSource\n                  sources={sources}\n                  pingResults={pingResults}\n                  onPing={handlePingSource}\n                  formatSourceName={formatSourceName}\n                />\n              )}\n              \n              {debugTab === 3 && (\n                <TestSearch\n                  sources={sources}\n                  testResults={testSearchResults}\n                  onTest={handleTestSearch}\n                  formatSourceName={formatSourceName}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n      </Container>\n      \n      <Snackbar\n        open={error !== null}\n        autoHideDuration={6000}\n        onClose={() => setError(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setError(null)} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n      \n      <Box component=\"footer\" sx={{ p: 2, bgcolor: 'background.paper', mt: 'auto' }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          Search Comparison Tool\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}