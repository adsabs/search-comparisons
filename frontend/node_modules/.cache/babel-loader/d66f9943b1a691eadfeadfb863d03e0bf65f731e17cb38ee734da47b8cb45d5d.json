{"ast":null,"code":"var _jsxFileName = \"/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/components/BoostExperiment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Paper, Grid, Button, Slider, FormControlLabel, Switch, Typography, FormControl, InputLabel, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Divider, CircularProgress, Alert, Tooltip, IconButton, Collapse, List, ListItem, ListItemText } from '@mui/material';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ArrowUpward from '@mui/icons-material/ArrowUpward';\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\nimport SearchIcon from '@mui/icons-material/Search';\n\n/**\n * Component for experimenting with different boost factors and their impact on ranking\n * \n * @param {Object} props - Component props\n * @param {Array} props.originalResults - The original search results to re-rank\n * @param {string} props.query - The search query used to retrieve results\n * @param {function} props.onRunNewSearch - Callback function when user wants to run a new search\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoostExperiment = ({\n  originalResults,\n  query,\n  API_URL = 'http://localhost:8000',\n  onRunNewSearch\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [boostedResults, setBoostedResults] = useState(null);\n  const [debugMode, setDebugMode] = useState(false);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  // Boost configuration state\n  const [boostConfig, setBoostConfig] = useState({\n    // Citation boost\n    enableCiteBoost: true,\n    citeBoostWeight: 1.0,\n    // Recency boost\n    enableRecencyBoost: true,\n    recencyBoostWeight: 1.0,\n    recencyFunction: \"exponential\",\n    // Changed to match backend default\n    recencyMultiplier: 0.01,\n    // Changed to match backend default\n    recencyMidpoint: 36,\n    // Document type boost\n    enableDoctypeBoost: true,\n    doctypeBoostWeight: 1.0,\n    // Refereed boost\n    enableRefereedBoost: true,\n    refereedBoostWeight: 1.0,\n    // Combination method\n    combinationMethod: \"sum\",\n    // Field-specific query boosts (new addition)\n    enableFieldBoosts: true,\n    fieldBoosts: {\n      title: 2.0,\n      abstract: 3.0,\n      author: 1.5,\n      year: 0.5\n    },\n    // Query transformation options (new addition)\n    queryTransformation: {\n      enableTermSplitting: true,\n      enablePhrasePreservation: true\n    }\n  });\n\n  // Function to transform the query based on the field boosts\n  const transformQuery = useCallback(originalQuery => {\n    if (!boostConfig.enableFieldBoosts) {\n      return originalQuery;\n    }\n\n    // Clean the original query\n    const cleanQuery = originalQuery.trim();\n    if (!cleanQuery) return \"\";\n    console.log(\"Transforming query:\", cleanQuery, \"with config:\", boostConfig.queryTransformation);\n\n    // Extract terms and phrases based on configuration\n    let terms = [];\n    let phrases = [];\n\n    // First, extract any quoted phrases from the query\n    if (boostConfig.queryTransformation.enablePhrasePreservation) {\n      const phraseRegex = /\"([^\"]+)\"/g;\n      let match;\n      let remainingText = cleanQuery;\n\n      // Extract explicitly quoted phrases\n      while ((match = phraseRegex.exec(cleanQuery)) !== null) {\n        phrases.push(match[1]);\n        remainingText = remainingText.replace(match[0], ' ');\n      }\n      console.log(\"Extracted explicit phrases:\", phrases);\n\n      // If no explicit phrases but the query has multiple words,\n      // treat the whole query as an implicit phrase\n      if (phrases.length === 0 && remainingText.includes(' ')) {\n        phrases.push(remainingText.trim());\n        console.log(\"Added implicit phrase:\", remainingText.trim());\n      }\n\n      // If term splitting is enabled, also add individual terms\n      if (boostConfig.queryTransformation.enableTermSplitting) {\n        // Split the remaining text into individual terms\n        const individualTerms = remainingText.split(/\\s+/).filter(term => term.length > 0);\n        terms.push(...individualTerms);\n        console.log(\"Added individual terms:\", terms);\n      }\n    } else if (boostConfig.queryTransformation.enableTermSplitting) {\n      // If phrase preservation is disabled but term splitting is enabled,\n      // just split the query into individual terms\n      terms = cleanQuery.split(/\\s+/).filter(term => term.length > 0);\n      console.log(\"Split query into terms only:\", terms);\n    } else {\n      // If both phrase preservation and term splitting are disabled,\n      // use the entire query as a single term\n      terms.push(cleanQuery);\n      console.log(\"Using entire query as a single term:\", cleanQuery);\n    }\n\n    // Create a simplified query structure that works better with search APIs\n    let parts = [];\n\n    // Add field-specific boosts for individual terms\n    terms.forEach(term => {\n      if (term && term.trim()) {\n        Object.entries(boostConfig.fieldBoosts).forEach(([field, boost]) => {\n          // Format the boost with one decimal place for readability\n          const formattedBoost = parseFloat(boost).toFixed(1);\n          parts.push(`(${field}:${term})^${formattedBoost}`);\n        });\n      }\n    });\n\n    // Add field-specific boosts for phrases\n    phrases.forEach(phrase => {\n      if (phrase && phrase.trim()) {\n        Object.entries(boostConfig.fieldBoosts).forEach(([field, boost]) => {\n          // Format the boost with one decimal place for readability\n          const formattedBoost = parseFloat(boost).toFixed(1);\n          parts.push(`(${field}:\"${phrase}\")^${formattedBoost}`);\n        });\n      }\n    });\n\n    // Join all parts with OR operators\n    const result = parts.join(\" OR \");\n    console.log(\"Final transformed query:\", result);\n    return result;\n  }, [boostConfig]);\n\n  // Debug logging\n  useEffect(() => {\n    console.log('BoostExperiment mounted with:', {\n      originalResultsLength: originalResults === null || originalResults === void 0 ? void 0 : originalResults.length,\n      query,\n      boostConfig\n    });\n\n    // Log the transformed query for debugging\n    if (query) {\n      const transformedQuery = transformQuery(query);\n      console.log('Transformed query:', transformedQuery);\n    }\n    if ((originalResults === null || originalResults === void 0 ? void 0 : originalResults.length) > 0) {\n      // COMPREHENSIVE LOGGING: Log the entire first result to see the complete structure\n      console.log(\"CRITICAL: Complete structure of first result:\", JSON.stringify(originalResults[0], null, 2));\n\n      // Log much more detailed information about the original search results\n      const yearTypes = originalResults.map(r => typeof r.year).filter((v, i, a) => a.indexOf(v) === i);\n      const sampleYears = originalResults.slice(0, 5).map(r => r.year);\n      const hasArrayYears = originalResults.some(r => Array.isArray(r.year));\n      const yearStructure = {\n        types_present: yearTypes,\n        sample_values: sampleYears,\n        any_arrays: hasArrayYears,\n        original_display: originalResults.slice(0, 5).map(r => ({\n          title: truncateText(r.title, 30),\n          year_display: r.year,\n          year_type: typeof r.year,\n          year_json: JSON.stringify(r.year)\n        }))\n      };\n      console.log(\"CRITICAL DEBUGGING - Years in original results:\", yearStructure);\n\n      // Check for alternative fields that might contain year information\n      const alternativeFields = originalResults.slice(0, 3).map(r => ({\n        title: truncateText(r.title, 30),\n        pub_year: r.pub_year,\n        date: r.date,\n        pubdate: r.pubdate,\n        publication_year: r.publication_year,\n        year_of_publication: r.year_of_publication\n      }));\n      console.log(\"CHECKING ALTERNATIVE YEAR FIELDS:\", alternativeFields);\n      console.log(\"Sample result metadata:\", {\n        citation: originalResults[0].citation_count,\n        year: originalResults[0].year,\n        year_type: typeof originalResults[0].year,\n        doctype: originalResults[0].doctype,\n        properties: originalResults[0].property\n      });\n    }\n  }, [originalResults, query, boostConfig]);\n\n  // Apply the boost experiment\n  const applyBoosts = useCallback(async () => {\n    if (!originalResults || originalResults.length === 0) {\n      setError('No original results to modify');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setDebugInfo(null);\n    try {\n      // CRITICAL DEBUG: Log what we're actually receiving\n      console.log(\"CRITICAL DEBUG - Starting boost process with:\", {\n        result_count: originalResults.length,\n        all_years: originalResults.slice(0, 5).map(r => r.year),\n        all_year_types: originalResults.slice(0, 5).map(r => typeof r.year),\n        sample_full_results: originalResults.slice(0, 3),\n        has_undefined_years: originalResults.some(r => r.year === undefined),\n        has_null_years: originalResults.some(r => r.year === null)\n      });\n\n      // Generate the transformed query\n      const transformedQuery = transformQuery(query);\n      console.log(\"Using transformed query:\", transformedQuery);\n\n      // Log boost configuration values to verify they're being sent correctly\n      console.log(\"CRITICAL DEBUG - Sending boost config:\", {\n        enableCiteBoost: boostConfig.enableCiteBoost,\n        citeBoostWeight: boostConfig.citeBoostWeight,\n        enableRecencyBoost: boostConfig.enableRecencyBoost,\n        recencyBoostWeight: boostConfig.recencyBoostWeight,\n        enableDoctypeBoost: boostConfig.enableDoctypeBoost,\n        doctypeBoostWeight: boostConfig.doctypeBoostWeight,\n        enableRefereedBoost: boostConfig.enableRefereedBoost,\n        refereedBoostWeight: boostConfig.refereedBoostWeight,\n        combinationMethod: boostConfig.combinationMethod,\n        fieldBoosts: boostConfig.fieldBoosts\n      });\n\n      // Ensure all weight values are properly converted to numbers\n      const normalizedBoostConfig = {\n        ...boostConfig,\n        citeBoostWeight: Number(boostConfig.citeBoostWeight),\n        recencyBoostWeight: Number(boostConfig.recencyBoostWeight),\n        doctypeBoostWeight: Number(boostConfig.doctypeBoostWeight),\n        refereedBoostWeight: Number(boostConfig.refereedBoostWeight),\n        fieldBoosts: {\n          title: Number(boostConfig.fieldBoosts.title),\n          abstract: Number(boostConfig.fieldBoosts.abstract),\n          author: Number(boostConfig.fieldBoosts.author),\n          year: Number(boostConfig.fieldBoosts.year)\n        }\n      };\n      console.log(\"Normalized boost config with number values:\", normalizedBoostConfig);\n\n      // Extensive logging to debug the metadata fields\n      if (originalResults.length > 0) {\n        console.log(\"DEBUGGING METADATA FIELDS - First 3 results:\", originalResults.slice(0, 3).map(result => ({\n          title: truncateText(result.title, 30),\n          year_type: typeof result.year,\n          year_value: result.year,\n          year_stringified: JSON.stringify(result.year),\n          doctype_type: typeof result.doctype,\n          doctype_value: result.doctype,\n          property_type: typeof result.property,\n          property_value: result.property,\n          property_is_array: Array.isArray(result.property)\n        })));\n      }\n\n      // CRITICAL FIX: Extract year from bibcode if available and year is null\n      const processedResults = originalResults.map(result => {\n        // For debugging, log the first few results\n        if (result.rank && result.rank <= 5) {\n          console.log(`Processing result rank ${result.rank} - RAW DATA:`, result);\n        }\n\n        // Extract year from bibcode if possible and year is missing\n        let extractedYear = null;\n        if ((result.year === null || result.year === undefined) && result.bibcode) {\n          // ADS bibcodes typically have year as the first 4 digits\n          const yearMatch = result.bibcode.match(/^(\\d{4})/);\n          if (yearMatch && yearMatch[1]) {\n            extractedYear = parseInt(yearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from bibcode ${result.bibcode} for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n\n        // Extract year from the URL if we still don't have a year\n        if (extractedYear === null && result.url) {\n          const urlYearMatch = result.url.match(/\\/abs\\/(\\d{4})/);\n          if (urlYearMatch && urlYearMatch[1]) {\n            extractedYear = parseInt(urlYearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from URL ${result.url} for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n\n        // Check if year is embedded in the title (sometimes in parentheses at the end)\n        if (extractedYear === null && result.title) {\n          const titleYearMatch = result.title.match(/\\((\\d{4})\\)/);\n          if (titleYearMatch && titleYearMatch[1]) {\n            extractedYear = parseInt(titleYearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from title for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n\n        // Last fallback - use a reasonable default if still needed\n        if (extractedYear === null) {\n          // Use current year minus 3 as a more reasonable default (not too recent, not too old)\n          extractedYear = new Date().getFullYear() - 3;\n          console.log(`Using fallback year ${extractedYear} for \"${truncateText(result.title, 30)}\"`);\n        }\n        return {\n          ...result,\n          citation_count: typeof result.citation_count === 'number' ? result.citation_count : 0,\n          // IMPORTANT: Use extracted year if original is null, preserving original otherwise\n          year: result.year === null || result.year === undefined ? extractedYear : result.year,\n          doctype: result.doctype || '',\n          property: Array.isArray(result.property) ? result.property : result.property ? [result.property] : []\n        };\n      });\n      console.log('Sending boost experiment request with the first 3 results:', {\n        first_three_processed: processedResults.slice(0, 3).map(r => {\n          var _originalResults$find;\n          return {\n            title: truncateText(r.title, 30),\n            original_year: (_originalResults$find = originalResults.find(or => or.title === r.title)) === null || _originalResults$find === void 0 ? void 0 : _originalResults$find.year,\n            processed_year: r.year\n          };\n        })\n      });\n      const response = await fetch(`${API_URL}/api/boost-experiment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query,\n          transformedQuery,\n          results: processedResults,\n          boostConfig: normalizedBoostConfig\n        })\n      });\n      console.log('Boost experiment response status:', response.status);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Boost experiment error:', errorText);\n        throw new Error(`Failed to apply boosts: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Received boosted results:', data);\n      setBoostedResults(data);\n\n      // Store debug info about the first result for debugging panel\n      if (data.results && data.results.length > 0) {\n        var _firstResult$boostFac, _firstResult$boostFac2, _firstResult$boostFac3, _firstResult$boostFac4;\n        const firstResult = data.results[0];\n        setDebugInfo({\n          firstResult,\n          citationFields: {\n            citations: firstResult.citations,\n            citation_count: firstResult.citation_count,\n            citationCount: firstResult.citationCount\n          },\n          boostFields: {\n            boostFactors: firstResult.boostFactors,\n            citeBoost: firstResult.citeBoost || ((_firstResult$boostFac = firstResult.boostFactors) === null || _firstResult$boostFac === void 0 ? void 0 : _firstResult$boostFac.citeBoost) || 0,\n            recencyBoost: firstResult.recencyBoost || ((_firstResult$boostFac2 = firstResult.boostFactors) === null || _firstResult$boostFac2 === void 0 ? void 0 : _firstResult$boostFac2.recencyBoost) || 0,\n            doctypeBoost: firstResult.doctypeBoost || ((_firstResult$boostFac3 = firstResult.boostFactors) === null || _firstResult$boostFac3 === void 0 ? void 0 : _firstResult$boostFac3.doctypeBoost) || 0,\n            refereedBoost: firstResult.refereedBoost || ((_firstResult$boostFac4 = firstResult.boostFactors) === null || _firstResult$boostFac4 === void 0 ? void 0 : _firstResult$boostFac4.refereedBoost) || 0,\n            totalBoost: firstResult.totalBoost,\n            finalBoost: firstResult.finalBoost\n          },\n          metadataFields: {\n            year: firstResult.year,\n            doctype: firstResult.doctype,\n            property: firstResult.property\n          }\n        });\n      }\n    } catch (err) {\n      console.error('Error in boost experiment:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL, boostConfig, originalResults, query]);\n\n  // Function to run a completely new search with current field weights\n  const runNewSearch = useCallback(() => {\n    if (!query) {\n      setError('No query to search with');\n      return;\n    }\n\n    // Show loading indicator\n    setSearchLoading(true);\n\n    // Generate the transformed query with current field weights\n    const transformedQuery = transformQuery(query);\n    console.log(\"Running new search with transformed query:\", transformedQuery);\n\n    // Call the parent component's onRunNewSearch function if provided\n    if (onRunNewSearch && typeof onRunNewSearch === 'function') {\n      // Pass the transformed query and current boost configuration to the parent\n      onRunNewSearch(transformedQuery, boostConfig).then(() => {\n        setSearchLoading(false);\n      }).catch(err => {\n        console.error(\"Error running new search:\", err);\n        setError(\"Failed to run new search: \" + (err.message || 'Unknown error'));\n        setSearchLoading(false);\n      });\n    } else {\n      console.error(\"No onRunNewSearch function provided\");\n      setError(\"Cannot run new search - feature not implemented by parent component\");\n      setSearchLoading(false);\n    }\n  }, [query, transformQuery, boostConfig, onRunNewSearch]);\n\n  // Helper functions\n  const truncateText = (text, maxLength) => {\n    if (!text) return '';\n    return text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;\n  };\n  const formatAuthors = authors => {\n    if (!authors) return 'Unknown';\n    if (typeof authors === 'string') {\n      return authors;\n    }\n    if (Array.isArray(authors)) {\n      return authors.slice(0, 3).join(', ') + (authors.length > 3 ? ', et al.' : '');\n    }\n    return 'Unknown';\n  };\n\n  // Format rank change display\n  const formatRankChange = change => {\n    if (change > 0) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          color: 'success.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), change]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this);\n    } else if (change < 0) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          color: 'error.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), Math.abs(change)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this);\n    } else {\n      return '—';\n    }\n  };\n\n  // Format boost factor display\n  const formatBoostFactor = value => {\n    if (value === undefined || value === null) return '—';\n    return value.toFixed(2);\n  };\n\n  // Reset to default boost configuration\n  const resetDefaults = () => {\n    setBoostConfig({\n      enableCiteBoost: true,\n      citeBoostWeight: 1.0,\n      enableRecencyBoost: true,\n      recencyBoostWeight: 1.0,\n      recencyFunction: \"exponential\",\n      recencyMultiplier: 0.01,\n      recencyMidpoint: 36,\n      enableDoctypeBoost: true,\n      doctypeBoostWeight: 1.0,\n      enableRefereedBoost: true,\n      refereedBoostWeight: 1.0,\n      combinationMethod: \"sum\",\n      enableFieldBoosts: true,\n      fieldBoosts: {\n        title: 2.0,\n        abstract: 3.0,\n        author: 1.5,\n        year: 0.5\n      },\n      queryTransformation: {\n        enableTermSplitting: true,\n        enablePhrasePreservation: true\n      }\n    });\n  };\n\n  // Apply boosts whenever configuration changes\n  useEffect(() => {\n    if (originalResults && originalResults.length > 0) {\n      applyBoosts();\n    } else {\n      console.log('No original results to boost');\n    }\n  }, [boostConfig, originalResults, applyBoosts]);\n\n  // Enhanced debug component to inspect fields and values\n  const renderDebugPanel = () => {\n    if (!debugInfo) return null;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        mb: 2,\n        border: 1,\n        borderColor: 'warning.light',\n        p: 2,\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"warning.main\",\n        gutterBottom: true,\n        children: \"Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Metadata Fields (Required for Boosts)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        variant: \"outlined\",\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Field Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"citation_count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.citation_count !== undefined ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.citation_count !== undefined ? String(debugInfo.firstResult.citation_count) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.year !== undefined ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.year !== undefined ? String(debugInfo.firstResult.year) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"doctype\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.doctype !== undefined ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.doctype !== undefined ? String(debugInfo.firstResult.doctype) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"property\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.property !== undefined ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: debugInfo.firstResult.property !== undefined ? Array.isArray(debugInfo.firstResult.property) ? debugInfo.firstResult.property.join(', ') : String(debugInfo.firstResult.property) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Citation Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        variant: \"outlined\",\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Field Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Object.entries(debugInfo.citationFields).map(([field, value]) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: value !== undefined && value !== null ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: value !== undefined && value !== null ? String(value) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this)]\n            }, field, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Boost Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        variant: \"outlined\",\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Field Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Object.entries(debugInfo.boostFields).map(([field, value]) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: value !== undefined && value !== null ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Yes\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"No\",\n                  size: \"small\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: field === 'boostFactors' && typeof value === 'object' ? /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  component: \"pre\",\n                  sx: {\n                    maxHeight: 100,\n                    overflow: 'auto'\n                  },\n                  children: JSON.stringify(value, null, 2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this) : value !== undefined && value !== null ? String(value) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this)]\n            }, field, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"First Result Raw Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"pre\",\n        sx: {\n          maxHeight: 200,\n          overflow: 'auto',\n          fontSize: '0.75rem',\n          bgcolor: 'grey.100',\n          p: 1,\n          borderRadius: 1\n        },\n        children: JSON.stringify(debugInfo.firstResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this);\n  };\n  if (!originalResults || originalResults.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      children: \"No results available for boost experiment. Please perform a search first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this);\n  }\n  const handleConfigChange = (field, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // New handler for field boost changes\n  const handleFieldBoostChange = (field, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      fieldBoosts: {\n        ...prev.fieldBoosts,\n        [field]: value\n      }\n    }));\n  };\n\n  // New handler for query transformation options\n  const handleQueryTransformationChange = (option, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      queryTransformation: {\n        ...prev.queryTransformation,\n        [option]: value\n      }\n    }));\n  };\n\n  // New handler for text input changes - allow much higher values now\n  const handleTextInputChange = (field, event) => {\n    const value = parseFloat(event.target.value);\n    if (!isNaN(value) && value >= 0) {\n      console.log(`Updating ${field} to ${value}`);\n      handleConfigChange(field, value);\n    }\n  };\n\n  // New handler for field boost text input changes - allow much higher values now\n  const handleFieldBoostTextInputChange = (field, event) => {\n    const value = parseFloat(event.target.value);\n    if (!isNaN(value) && value >= 0) {\n      console.log(`Updating field boost ${field} to ${value}`);\n      handleFieldBoostChange(field, value);\n    }\n  };\n\n  // Render the boost controls section\n  const renderBoostControls = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        border: '1px solid #e0e0e0',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Boost Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: runNewSearch,\n          disabled: searchLoading,\n          sx: {\n            ml: 2\n          },\n          children: searchLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 30\n          }, this) : 'Apply Changes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Field Boost Weights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Title Weight: \", boostConfig.fieldBoosts.title.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: boostConfig.fieldBoosts.title,\n              onChange: (e, value) => handleFieldBoostChange('title', value),\n              min: 0,\n              max: 20,\n              step: 0.1,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Abstract Weight: \", boostConfig.fieldBoosts.abstract.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: boostConfig.fieldBoosts.abstract,\n              onChange: (e, value) => handleFieldBoostChange('abstract', value),\n              min: 0,\n              max: 20,\n              step: 0.1,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Author Weight: \", boostConfig.fieldBoosts.author.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: boostConfig.fieldBoosts.author,\n              onChange: (e, value) => handleFieldBoostChange('author', value),\n              min: 0,\n              max: 20,\n              step: 0.1,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Citation & Recency Boost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Citation Boost: \", boostConfig.citeBoostWeight.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: boostConfig.citeBoostWeight,\n              onChange: (e, value) => handleTextInputChange('citeBoostWeight', e),\n              min: 0,\n              max: 5,\n              step: 0.1,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Recency Boost: \", boostConfig.recencyBoostWeight.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              value: boostConfig.recencyBoostWeight,\n              onChange: (e, value) => handleTextInputChange('recencyBoostWeight', e),\n              min: 0,\n              max: 5,\n              step: 0.1,\n              valueLabelDisplay: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: boostConfig.enableRecencyBoost,\n                onChange: e => handleConfigChange('enableRecencyBoost', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 19\n              }, this),\n              label: \"Enable Recency Boost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      p: 2\n    },\n    children: !originalResults || originalResults.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      children: \"No results available for boost experiment. Please perform a search first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: renderBoostControls()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                flexGrow: 1\n              },\n              children: \"Ranking Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 17\n            }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              sx: {\n                ml: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(BugReportIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 30\n              }, this),\n              variant: \"outlined\",\n              size: \"small\",\n              color: \"warning\",\n              onClick: () => setDebugMode(!debugMode),\n              sx: {\n                ml: 2\n              },\n              children: debugMode ? 'Hide Debug' : 'Debug Mode'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mb: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 17\n          }, this), searchLoading && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mb: 2\n            },\n            children: \"Fetching new results with updated field weights...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: debugMode,\n            children: renderDebugPanel()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 15\n          }, this), boostedResults && boostedResults.results ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '50%',\n                  pr: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    bgcolor: 'grey.100',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    align: \"center\",\n                    fontWeight: \"bold\",\n                    children: \"Original Results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    align: \"center\",\n                    display: \"block\",\n                    color: \"text.secondary\",\n                    children: \"Default ranking without boosts\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '50%',\n                  pl: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    bgcolor: 'primary.light',\n                    color: 'primary.contrastText',\n                    borderRadius: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    align: \"center\",\n                    fontWeight: \"bold\",\n                    children: \"Boosted Results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    align: \"center\",\n                    display: \"block\",\n                    sx: {\n                      color: 'rgba(255,255,255,0.8)'\n                    },\n                    children: \"Re-ranked based on current boost settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 912,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  px: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  fontStyle: \"italic\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 25\n                  }, this), \" Items with significant rank changes have colored borders and indicators.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '50%',\n                  pr: 1,\n                  height: '65vh',\n                  overflow: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  sx: {\n                    bgcolor: 'background.paper',\n                    border: '1px solid',\n                    borderColor: 'divider',\n                    borderRadius: 1\n                  },\n                  children: originalResults.map((result, index) => {\n                    // Find matching boosted result to determine rank change\n                    const boostedIndex = boostedResults.results.findIndex(r => r.bibcode === result.bibcode || r.title === result.title);\n                    const rankChange = boostedIndex !== -1 ? index - boostedIndex : 0;\n                    return /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: /*#__PURE__*/_jsxDEV(Box, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          children: result.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 943,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Authors:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 945,\n                            columnNumber: 37\n                          }, this), \" \", formatAuthors(result.author)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 944,\n                          columnNumber: 35\n                        }, this), result.abstract && /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Abstract:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 949,\n                            columnNumber: 39\n                          }, this), \" \", truncateText(result.abstract, 200)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 948,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 942,\n                        columnNumber: 33\n                      }, this),\n                      placement: \"left\",\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        divider: true,\n                        sx: {\n                          px: 2,\n                          py: 1,\n                          position: 'relative'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              alignItems: 'flex-start'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body2\",\n                              component: \"span\",\n                              sx: {\n                                minWidth: '24px',\n                                fontWeight: 'bold',\n                                mr: 1\n                              },\n                              children: index + 1\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 968,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Box, {\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"body2\",\n                                sx: {\n                                  fontWeight: 'medium'\n                                },\n                                children: truncateText(result.title, 60)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 980,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  display: 'flex',\n                                  flexWrap: 'wrap',\n                                  gap: 0.5,\n                                  mt: 0.5\n                                },\n                                children: [result.year && /*#__PURE__*/_jsxDEV(Chip, {\n                                  label: `${result.year}`,\n                                  size: \"small\",\n                                  variant: \"outlined\",\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 985,\n                                  columnNumber: 45\n                                }, this), result.citation_count !== undefined && /*#__PURE__*/_jsxDEV(Chip, {\n                                  label: `Citations: ${result.citation_count}`,\n                                  size: \"small\",\n                                  variant: \"outlined\",\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 993,\n                                  columnNumber: 45\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 983,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 979,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 967,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 965,\n                          columnNumber: 33\n                        }, this)\n                      }, result.bibcode || result.title, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 31\n                      }, this)\n                    }, result.bibcode || index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '50%',\n                  pl: 1,\n                  height: '65vh',\n                  overflow: 'auto'\n                },\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  sx: {\n                    bgcolor: 'background.paper',\n                    border: '1px solid',\n                    borderColor: 'primary.light',\n                    borderRadius: 1\n                  },\n                  children: boostedResults.results.map((result, index) => {\n                    // Find matching original result to determine rank change\n                    const originalIndex = originalResults.findIndex(r => r.bibcode === result.bibcode || r.title === result.title);\n                    const rankChange = originalIndex !== -1 ? originalIndex - index : 0;\n\n                    // Get boost factors for this result\n                    const boostFactors = {};\n                    if (result.boostFactors) {\n                      Object.entries(result.boostFactors).forEach(([key, value]) => {\n                        boostFactors[key] = value;\n                      });\n                    }\n                    return /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: /*#__PURE__*/_jsxDEV(Box, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          children: result.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1035,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Authors:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1037,\n                            columnNumber: 37\n                          }, this), \" \", formatAuthors(result.author)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1036,\n                          columnNumber: 35\n                        }, this), result.abstract && /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Abstract:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1041,\n                            columnNumber: 39\n                          }, this), \" \", truncateText(result.abstract, 200)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1040,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                          sx: {\n                            my: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1044,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Original Rank:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1046,\n                            columnNumber: 37\n                          }, this), \" \", originalIndex + 1]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1045,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Rank Change:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1049,\n                            columnNumber: 37\n                          }, this), \" \", rankChange > 0 ? '+' : '', rankChange]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1048,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Boost Score:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1052,\n                            columnNumber: 37\n                          }, this), \" \", result.finalBoost ? result.finalBoost.toFixed(2) : 'N/A']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1051,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Applied Boosts:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1055,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1054,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          component: \"ul\",\n                          sx: {\n                            mt: 0.5,\n                            pl: 2\n                          },\n                          children: Object.entries(boostFactors).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n                            component: \"li\",\n                            variant: \"caption\",\n                            children: [key, \": \", value && value.toFixed ? value.toFixed(2) : value]\n                          }, key, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1059,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1057,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1034,\n                        columnNumber: 33\n                      }, this),\n                      placement: \"right\",\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        divider: true,\n                        sx: {\n                          px: 2,\n                          py: 1,\n                          position: 'relative',\n                          borderLeft: rankChange !== 0 ? '4px solid' : 'none',\n                          borderLeftColor: rankChange > 0 ? 'success.main' : rankChange < 0 ? 'error.main' : 'transparent'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              display: 'flex',\n                              alignItems: 'flex-start'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body2\",\n                              component: \"span\",\n                              sx: {\n                                minWidth: '24px',\n                                fontWeight: 'bold',\n                                mr: 1\n                              },\n                              children: index + 1\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1082,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Box, {\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"body2\",\n                                sx: {\n                                  fontWeight: 'medium'\n                                },\n                                children: truncateText(result.title, 60)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1094,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  display: 'flex',\n                                  flexWrap: 'wrap',\n                                  gap: 0.5,\n                                  mt: 0.5\n                                },\n                                children: [result.year && /*#__PURE__*/_jsxDEV(Chip, {\n                                  label: `${result.year}`,\n                                  size: \"small\",\n                                  variant: \"outlined\",\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1099,\n                                  columnNumber: 45\n                                }, this), result.citation_count !== undefined && /*#__PURE__*/_jsxDEV(Chip, {\n                                  label: `Citations: ${result.citation_count}`,\n                                  size: \"small\",\n                                  variant: \"outlined\",\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1107,\n                                  columnNumber: 45\n                                }, this), rankChange !== 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                                  icon: rankChange > 0 ? /*#__PURE__*/_jsxDEV(ArrowUpward, {\n                                    fontSize: \"small\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1116,\n                                    columnNumber: 70\n                                  }, this) : /*#__PURE__*/_jsxDEV(ArrowDownward, {\n                                    fontSize: \"small\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1116,\n                                    columnNumber: 105\n                                  }, this),\n                                  label: `${rankChange > 0 ? '+' : ''}${rankChange}`,\n                                  size: \"small\",\n                                  color: rankChange > 0 ? 'success' : 'error',\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    }\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1115,\n                                  columnNumber: 45\n                                }, this), result.finalBoost !== undefined && /*#__PURE__*/_jsxDEV(Chip, {\n                                  label: `Boost: ${result.finalBoost.toFixed(1)}`,\n                                  size: \"small\",\n                                  color: \"primary\",\n                                  sx: {\n                                    height: 20,\n                                    '& .MuiChip-label': {\n                                      px: 1,\n                                      fontSize: '0.7rem'\n                                    },\n                                    fontWeight: 'bold',\n                                    bgcolor: `rgba(25, 118, 210, ${Math.min(result.finalBoost / 20, 1)})`\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1124,\n                                  columnNumber: 45\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1097,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1093,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1081,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1079,\n                          columnNumber: 33\n                        }, this)\n                      }, result.bibcode || result.title, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1068,\n                        columnNumber: 31\n                      }, this)\n                    }, result.bibcode || index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1031,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1014,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            children: \"Configure and apply boost factors to see how they affect the ranking.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 845,\n    columnNumber: 5\n  }, this);\n};\n_s(BoostExperiment, \"49VT+HFOsf8MlM6HEMv0e8kEnLY=\");\n_c = BoostExperiment;\nexport default BoostExperiment;\nvar _c;\n$RefreshReg$(_c, \"BoostExperiment\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Paper","Grid","Button","Slider","FormControlLabel","Switch","Typography","FormControl","InputLabel","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Divider","CircularProgress","Alert","Tooltip","IconButton","Collapse","List","ListItem","ListItemText","ArrowUpwardIcon","ArrowDownwardIcon","ReplayIcon","HelpOutlineIcon","BugReportIcon","ArrowUpward","ArrowDownward","SearchIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","BoostExperiment","originalResults","query","API_URL","onRunNewSearch","_s","loading","setLoading","error","setError","boostedResults","setBoostedResults","debugMode","setDebugMode","debugInfo","setDebugInfo","searchLoading","setSearchLoading","boostConfig","setBoostConfig","enableCiteBoost","citeBoostWeight","enableRecencyBoost","recencyBoostWeight","recencyFunction","recencyMultiplier","recencyMidpoint","enableDoctypeBoost","doctypeBoostWeight","enableRefereedBoost","refereedBoostWeight","combinationMethod","enableFieldBoosts","fieldBoosts","title","abstract","author","year","queryTransformation","enableTermSplitting","enablePhrasePreservation","transformQuery","originalQuery","cleanQuery","trim","console","log","terms","phrases","phraseRegex","match","remainingText","exec","push","replace","length","includes","individualTerms","split","filter","term","parts","forEach","Object","entries","field","boost","formattedBoost","parseFloat","toFixed","phrase","result","join","originalResultsLength","transformedQuery","JSON","stringify","yearTypes","map","r","v","i","a","indexOf","sampleYears","slice","hasArrayYears","some","Array","isArray","yearStructure","types_present","sample_values","any_arrays","original_display","truncateText","year_display","year_type","year_json","alternativeFields","pub_year","date","pubdate","publication_year","year_of_publication","citation","citation_count","doctype","properties","property","applyBoosts","result_count","all_years","all_year_types","sample_full_results","has_undefined_years","undefined","has_null_years","normalizedBoostConfig","Number","year_value","year_stringified","doctype_type","doctype_value","property_type","property_value","property_is_array","processedResults","rank","extractedYear","bibcode","yearMatch","parseInt","url","urlYearMatch","titleYearMatch","Date","getFullYear","first_three_processed","_originalResults$find","original_year","find","or","processed_year","response","fetch","method","headers","body","results","status","ok","errorText","text","Error","data","json","_firstResult$boostFac","_firstResult$boostFac2","_firstResult$boostFac3","_firstResult$boostFac4","firstResult","citationFields","citations","citationCount","boostFields","boostFactors","citeBoost","recencyBoost","doctypeBoost","refereedBoost","totalBoost","finalBoost","metadataFields","err","message","runNewSearch","then","catch","maxLength","substring","formatAuthors","authors","formatRankChange","change","sx","display","alignItems","color","children","fontSize","mr","fileName","_jsxFileName","lineNumber","columnNumber","Math","abs","formatBoostFactor","value","resetDefaults","renderDebugPanel","mt","mb","border","borderColor","p","borderRadius","variant","gutterBottom","component","size","label","String","maxHeight","overflow","bgcolor","severity","handleConfigChange","prev","handleFieldBoostChange","handleQueryTransformationChange","option","handleTextInputChange","event","target","isNaN","handleFieldBoostTextInputChange","renderBoostControls","justifyContent","onClick","disabled","ml","container","spacing","item","xs","md","onChange","e","min","max","step","valueLabelDisplay","control","checked","width","flexGrow","startIcon","in","pr","align","fontWeight","pl","px","fontStyle","height","index","boostedIndex","findIndex","rankChange","placement","divider","py","position","primary","minWidth","flexWrap","gap","originalIndex","key","my","borderLeft","borderLeftColor","icon","_c","$RefreshReg$"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/components/BoostExperiment.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box, Paper, Grid, Button,\n  Slider, FormControlLabel, Switch, Typography, FormControl,\n  InputLabel, Select, MenuItem, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, Chip, Divider,\n  CircularProgress, Alert, Tooltip, IconButton, Collapse, List, ListItem, ListItemText\n} from '@mui/material';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ArrowUpward from '@mui/icons-material/ArrowUpward';\nimport ArrowDownward from '@mui/icons-material/ArrowDownward';\nimport SearchIcon from '@mui/icons-material/Search';\n\n/**\n * Component for experimenting with different boost factors and their impact on ranking\n * \n * @param {Object} props - Component props\n * @param {Array} props.originalResults - The original search results to re-rank\n * @param {string} props.query - The search query used to retrieve results\n * @param {function} props.onRunNewSearch - Callback function when user wants to run a new search\n */\nconst BoostExperiment = ({ originalResults, query, API_URL = 'http://localhost:8000', onRunNewSearch }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [boostedResults, setBoostedResults] = useState(null);\n  const [debugMode, setDebugMode] = useState(false);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [searchLoading, setSearchLoading] = useState(false);\n  \n  // Boost configuration state\n  const [boostConfig, setBoostConfig] = useState({\n    // Citation boost\n    enableCiteBoost: true,\n    citeBoostWeight: 1.0,\n    \n    // Recency boost\n    enableRecencyBoost: true,\n    recencyBoostWeight: 1.0,\n    recencyFunction: \"exponential\", // Changed to match backend default\n    recencyMultiplier: 0.01, // Changed to match backend default\n    recencyMidpoint: 36,\n    \n    // Document type boost\n    enableDoctypeBoost: true,\n    doctypeBoostWeight: 1.0,\n    \n    // Refereed boost\n    enableRefereedBoost: true,\n    refereedBoostWeight: 1.0,\n    \n    // Combination method\n    combinationMethod: \"sum\",\n    \n    // Field-specific query boosts (new addition)\n    enableFieldBoosts: true,\n    fieldBoosts: {\n      title: 2.0,\n      abstract: 3.0,\n      author: 1.5,\n      year: 0.5,\n    },\n    \n    // Query transformation options (new addition)\n    queryTransformation: {\n      enableTermSplitting: true,\n      enablePhrasePreservation: true,\n    }\n  });\n  \n  // Function to transform the query based on the field boosts\n  const transformQuery = useCallback((originalQuery) => {\n    if (!boostConfig.enableFieldBoosts) {\n      return originalQuery;\n    }\n    \n    // Clean the original query\n    const cleanQuery = originalQuery.trim();\n    if (!cleanQuery) return \"\";\n    \n    console.log(\"Transforming query:\", cleanQuery, \"with config:\", boostConfig.queryTransformation);\n    \n    // Extract terms and phrases based on configuration\n    let terms = [];\n    let phrases = [];\n    \n    // First, extract any quoted phrases from the query\n    if (boostConfig.queryTransformation.enablePhrasePreservation) {\n      const phraseRegex = /\"([^\"]+)\"/g;\n      let match;\n      let remainingText = cleanQuery;\n      \n      // Extract explicitly quoted phrases\n      while ((match = phraseRegex.exec(cleanQuery)) !== null) {\n        phrases.push(match[1]);\n        remainingText = remainingText.replace(match[0], ' ');\n      }\n      \n      console.log(\"Extracted explicit phrases:\", phrases);\n      \n      // If no explicit phrases but the query has multiple words,\n      // treat the whole query as an implicit phrase\n      if (phrases.length === 0 && remainingText.includes(' ')) {\n        phrases.push(remainingText.trim());\n        console.log(\"Added implicit phrase:\", remainingText.trim());\n      }\n      \n      // If term splitting is enabled, also add individual terms\n      if (boostConfig.queryTransformation.enableTermSplitting) {\n        // Split the remaining text into individual terms\n        const individualTerms = remainingText.split(/\\s+/).filter(term => term.length > 0);\n        terms.push(...individualTerms);\n        console.log(\"Added individual terms:\", terms);\n      }\n    } else if (boostConfig.queryTransformation.enableTermSplitting) {\n      // If phrase preservation is disabled but term splitting is enabled,\n      // just split the query into individual terms\n      terms = cleanQuery.split(/\\s+/).filter(term => term.length > 0);\n      console.log(\"Split query into terms only:\", terms);\n    } else {\n      // If both phrase preservation and term splitting are disabled,\n      // use the entire query as a single term\n      terms.push(cleanQuery);\n      console.log(\"Using entire query as a single term:\", cleanQuery);\n    }\n    \n    // Create a simplified query structure that works better with search APIs\n    let parts = [];\n    \n    // Add field-specific boosts for individual terms\n    terms.forEach(term => {\n      if (term && term.trim()) {\n        Object.entries(boostConfig.fieldBoosts).forEach(([field, boost]) => {\n          // Format the boost with one decimal place for readability\n          const formattedBoost = parseFloat(boost).toFixed(1);\n          parts.push(`(${field}:${term})^${formattedBoost}`);\n        });\n      }\n    });\n    \n    // Add field-specific boosts for phrases\n    phrases.forEach(phrase => {\n      if (phrase && phrase.trim()) {\n        Object.entries(boostConfig.fieldBoosts).forEach(([field, boost]) => {\n          // Format the boost with one decimal place for readability\n          const formattedBoost = parseFloat(boost).toFixed(1);\n          parts.push(`(${field}:\"${phrase}\")^${formattedBoost}`);\n        });\n      }\n    });\n    \n    // Join all parts with OR operators\n    const result = parts.join(\" OR \");\n    console.log(\"Final transformed query:\", result);\n    return result;\n  }, [boostConfig]);\n  \n  // Debug logging\n  useEffect(() => {\n    console.log('BoostExperiment mounted with:', {\n      originalResultsLength: originalResults?.length,\n      query,\n      boostConfig\n    });\n    \n    // Log the transformed query for debugging\n    if (query) {\n      const transformedQuery = transformQuery(query);\n      console.log('Transformed query:', transformedQuery);\n    }\n    \n    if (originalResults?.length > 0) {\n      // COMPREHENSIVE LOGGING: Log the entire first result to see the complete structure\n      console.log(\"CRITICAL: Complete structure of first result:\", JSON.stringify(originalResults[0], null, 2));\n      \n      // Log much more detailed information about the original search results\n      const yearTypes = originalResults.map(r => typeof r.year).filter((v, i, a) => a.indexOf(v) === i);\n      const sampleYears = originalResults.slice(0, 5).map(r => r.year);\n      const hasArrayYears = originalResults.some(r => Array.isArray(r.year));\n      const yearStructure = {\n        types_present: yearTypes,\n        sample_values: sampleYears,\n        any_arrays: hasArrayYears,\n        original_display: originalResults.slice(0, 5).map(r => ({\n          title: truncateText(r.title, 30),\n          year_display: r.year,\n          year_type: typeof r.year,\n          year_json: JSON.stringify(r.year)\n        }))\n      };\n      \n      console.log(\"CRITICAL DEBUGGING - Years in original results:\", yearStructure);\n      \n      // Check for alternative fields that might contain year information\n      const alternativeFields = originalResults.slice(0, 3).map(r => ({\n        title: truncateText(r.title, 30),\n        pub_year: r.pub_year,\n        date: r.date,\n        pubdate: r.pubdate,\n        publication_year: r.publication_year,\n        year_of_publication: r.year_of_publication\n      }));\n      console.log(\"CHECKING ALTERNATIVE YEAR FIELDS:\", alternativeFields);\n      \n      console.log(\"Sample result metadata:\", {\n        citation: originalResults[0].citation_count,\n        year: originalResults[0].year,\n        year_type: typeof originalResults[0].year,\n        doctype: originalResults[0].doctype,\n        properties: originalResults[0].property\n      });\n    }\n  }, [originalResults, query, boostConfig]);\n  \n  // Apply the boost experiment\n  const applyBoosts = useCallback(async () => {\n    if (!originalResults || originalResults.length === 0) {\n      setError('No original results to modify');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    setDebugInfo(null);\n    \n    try {\n      // CRITICAL DEBUG: Log what we're actually receiving\n      console.log(\"CRITICAL DEBUG - Starting boost process with:\", {\n        result_count: originalResults.length,\n        all_years: originalResults.slice(0, 5).map(r => r.year),\n        all_year_types: originalResults.slice(0, 5).map(r => typeof r.year),\n        sample_full_results: originalResults.slice(0, 3),\n        has_undefined_years: originalResults.some(r => r.year === undefined),\n        has_null_years: originalResults.some(r => r.year === null),\n      });\n      \n      // Generate the transformed query\n      const transformedQuery = transformQuery(query);\n      console.log(\"Using transformed query:\", transformedQuery);\n      \n      // Log boost configuration values to verify they're being sent correctly\n      console.log(\"CRITICAL DEBUG - Sending boost config:\", {\n        enableCiteBoost: boostConfig.enableCiteBoost,\n        citeBoostWeight: boostConfig.citeBoostWeight,\n        enableRecencyBoost: boostConfig.enableRecencyBoost,\n        recencyBoostWeight: boostConfig.recencyBoostWeight,\n        enableDoctypeBoost: boostConfig.enableDoctypeBoost,\n        doctypeBoostWeight: boostConfig.doctypeBoostWeight,\n        enableRefereedBoost: boostConfig.enableRefereedBoost,\n        refereedBoostWeight: boostConfig.refereedBoostWeight,\n        combinationMethod: boostConfig.combinationMethod,\n        fieldBoosts: boostConfig.fieldBoosts\n      });\n      \n      // Ensure all weight values are properly converted to numbers\n      const normalizedBoostConfig = {\n        ...boostConfig,\n        citeBoostWeight: Number(boostConfig.citeBoostWeight),\n        recencyBoostWeight: Number(boostConfig.recencyBoostWeight),\n        doctypeBoostWeight: Number(boostConfig.doctypeBoostWeight),\n        refereedBoostWeight: Number(boostConfig.refereedBoostWeight),\n        fieldBoosts: {\n          title: Number(boostConfig.fieldBoosts.title),\n          abstract: Number(boostConfig.fieldBoosts.abstract),\n          author: Number(boostConfig.fieldBoosts.author),\n          year: Number(boostConfig.fieldBoosts.year)\n        }\n      };\n      \n      console.log(\"Normalized boost config with number values:\", normalizedBoostConfig);\n      \n      // Extensive logging to debug the metadata fields\n      if (originalResults.length > 0) {\n        console.log(\"DEBUGGING METADATA FIELDS - First 3 results:\", originalResults.slice(0, 3).map(result => ({\n          title: truncateText(result.title, 30),\n          year_type: typeof result.year,\n          year_value: result.year,\n          year_stringified: JSON.stringify(result.year),\n          doctype_type: typeof result.doctype,\n          doctype_value: result.doctype,\n          property_type: typeof result.property,\n          property_value: result.property,\n          property_is_array: Array.isArray(result.property),\n        })));\n      }\n      \n      // CRITICAL FIX: Extract year from bibcode if available and year is null\n      const processedResults = originalResults.map(result => {\n        // For debugging, log the first few results\n        if (result.rank && result.rank <= 5) {\n          console.log(`Processing result rank ${result.rank} - RAW DATA:`, result);\n        }\n        \n        // Extract year from bibcode if possible and year is missing\n        let extractedYear = null;\n        if ((result.year === null || result.year === undefined) && result.bibcode) {\n          // ADS bibcodes typically have year as the first 4 digits\n          const yearMatch = result.bibcode.match(/^(\\d{4})/);\n          if (yearMatch && yearMatch[1]) {\n            extractedYear = parseInt(yearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from bibcode ${result.bibcode} for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n        \n        // Extract year from the URL if we still don't have a year\n        if (extractedYear === null && result.url) {\n          const urlYearMatch = result.url.match(/\\/abs\\/(\\d{4})/);\n          if (urlYearMatch && urlYearMatch[1]) {\n            extractedYear = parseInt(urlYearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from URL ${result.url} for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n        \n        // Check if year is embedded in the title (sometimes in parentheses at the end)\n        if (extractedYear === null && result.title) {\n          const titleYearMatch = result.title.match(/\\((\\d{4})\\)/);\n          if (titleYearMatch && titleYearMatch[1]) {\n            extractedYear = parseInt(titleYearMatch[1], 10);\n            console.log(`Successfully extracted year ${extractedYear} from title for \"${truncateText(result.title, 30)}\"`);\n          }\n        }\n        \n        // Last fallback - use a reasonable default if still needed\n        if (extractedYear === null) {\n          // Use current year minus 3 as a more reasonable default (not too recent, not too old)\n          extractedYear = new Date().getFullYear() - 3;\n          console.log(`Using fallback year ${extractedYear} for \"${truncateText(result.title, 30)}\"`);\n        }\n        \n        return {\n          ...result,\n          citation_count: typeof result.citation_count === 'number' ? result.citation_count : 0,\n          // IMPORTANT: Use extracted year if original is null, preserving original otherwise\n          year: (result.year === null || result.year === undefined) ? extractedYear : result.year,\n          doctype: result.doctype || '',\n          property: Array.isArray(result.property) ? result.property : \n                  (result.property ? [result.property] : [])\n        };\n      });\n      \n      console.log('Sending boost experiment request with the first 3 results:', {\n        first_three_processed: processedResults.slice(0, 3).map(r => ({\n          title: truncateText(r.title, 30),\n          original_year: originalResults.find(or => or.title === r.title)?.year,\n          processed_year: r.year\n        }))\n      });\n      \n      const response = await fetch(`${API_URL}/api/boost-experiment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query,\n          transformedQuery,\n          results: processedResults,\n          boostConfig: normalizedBoostConfig\n        })\n      });\n      \n      console.log('Boost experiment response status:', response.status);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Boost experiment error:', errorText);\n        throw new Error(`Failed to apply boosts: ${errorText}`);\n      }\n      \n      const data = await response.json();\n      console.log('Received boosted results:', data);\n      setBoostedResults(data);\n      \n      // Store debug info about the first result for debugging panel\n      if (data.results && data.results.length > 0) {\n        const firstResult = data.results[0];\n        setDebugInfo({\n          firstResult,\n          citationFields: {\n            citations: firstResult.citations,\n            citation_count: firstResult.citation_count,\n            citationCount: firstResult.citationCount,\n          },\n          boostFields: {\n            boostFactors: firstResult.boostFactors,\n            citeBoost: firstResult.citeBoost || firstResult.boostFactors?.citeBoost || 0,\n            recencyBoost: firstResult.recencyBoost || firstResult.boostFactors?.recencyBoost || 0,\n            doctypeBoost: firstResult.doctypeBoost || firstResult.boostFactors?.doctypeBoost || 0,\n            refereedBoost: firstResult.refereedBoost || firstResult.boostFactors?.refereedBoost || 0,\n            totalBoost: firstResult.totalBoost,\n            finalBoost: firstResult.finalBoost,\n          },\n          metadataFields: {\n            year: firstResult.year,\n            doctype: firstResult.doctype,\n            property: firstResult.property,\n          }\n        });\n      }\n      \n    } catch (err) {\n      console.error('Error in boost experiment:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL, boostConfig, originalResults, query]);\n  \n  // Function to run a completely new search with current field weights\n  const runNewSearch = useCallback(() => {\n    if (!query) {\n      setError('No query to search with');\n      return;\n    }\n    \n    // Show loading indicator\n    setSearchLoading(true);\n    \n    // Generate the transformed query with current field weights\n    const transformedQuery = transformQuery(query);\n    console.log(\"Running new search with transformed query:\", transformedQuery);\n    \n    // Call the parent component's onRunNewSearch function if provided\n    if (onRunNewSearch && typeof onRunNewSearch === 'function') {\n      // Pass the transformed query and current boost configuration to the parent\n      onRunNewSearch(transformedQuery, boostConfig)\n        .then(() => {\n          setSearchLoading(false);\n        })\n        .catch(err => {\n          console.error(\"Error running new search:\", err);\n          setError(\"Failed to run new search: \" + (err.message || 'Unknown error'));\n          setSearchLoading(false);\n        });\n    } else {\n      console.error(\"No onRunNewSearch function provided\");\n      setError(\"Cannot run new search - feature not implemented by parent component\");\n      setSearchLoading(false);\n    }\n  }, [query, transformQuery, boostConfig, onRunNewSearch]);\n  \n  // Helper functions\n  const truncateText = (text, maxLength) => {\n    if (!text) return '';\n    return text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;\n  };\n\n  const formatAuthors = (authors) => {\n    if (!authors) return 'Unknown';\n    \n    if (typeof authors === 'string') {\n      return authors;\n    }\n    \n    if (Array.isArray(authors)) {\n      return authors.slice(0, 3).join(', ') + (authors.length > 3 ? ', et al.' : '');\n    }\n    \n    return 'Unknown';\n  };\n  \n  // Format rank change display\n  const formatRankChange = (change) => {\n    if (change > 0) {\n      return (\n        <Box sx={{ display: 'flex', alignItems: 'center', color: 'success.main' }}>\n          <ArrowUpwardIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n          {change}\n        </Box>\n      );\n    } else if (change < 0) {\n      return (\n        <Box sx={{ display: 'flex', alignItems: 'center', color: 'error.main' }}>\n          <ArrowDownwardIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n          {Math.abs(change)}\n        </Box>\n      );\n    } else {\n      return '—';\n    }\n  };\n  \n  // Format boost factor display\n  const formatBoostFactor = (value) => {\n    if (value === undefined || value === null) return '—';\n    return value.toFixed(2);\n  };\n  \n  // Reset to default boost configuration\n  const resetDefaults = () => {\n    setBoostConfig({\n      enableCiteBoost: true,\n      citeBoostWeight: 1.0,\n      enableRecencyBoost: true,\n      recencyBoostWeight: 1.0,\n      recencyFunction: \"exponential\", \n      recencyMultiplier: 0.01, \n      recencyMidpoint: 36,\n      enableDoctypeBoost: true,\n      doctypeBoostWeight: 1.0,\n      enableRefereedBoost: true,\n      refereedBoostWeight: 1.0,\n      combinationMethod: \"sum\",\n      enableFieldBoosts: true,\n      fieldBoosts: {\n        title: 2.0,\n        abstract: 3.0,\n        author: 1.5,\n        year: 0.5,\n      },\n      queryTransformation: {\n        enableTermSplitting: true,\n        enablePhrasePreservation: true,\n      }\n    });\n  };\n  \n  // Apply boosts whenever configuration changes\n  useEffect(() => {\n    if (originalResults && originalResults.length > 0) {\n      applyBoosts();\n    } else {\n      console.log('No original results to boost');\n    }\n  }, [boostConfig, originalResults, applyBoosts]);\n  \n  // Enhanced debug component to inspect fields and values\n  const renderDebugPanel = () => {\n    if (!debugInfo) return null;\n    \n    return (\n      <Box sx={{ mt: 2, mb: 2, border: 1, borderColor: 'warning.light', p: 2, borderRadius: 1 }}>\n        <Typography variant=\"h6\" color=\"warning.main\" gutterBottom>\n          Debug Information\n        </Typography>\n        \n        <Typography variant=\"subtitle2\" gutterBottom>Metadata Fields (Required for Boosts)</Typography>\n        <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Field Name</TableCell>\n                <TableCell>Present</TableCell>\n                <TableCell>Value</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>citation_count</TableCell>\n                <TableCell>\n                  {debugInfo.firstResult.citation_count !== undefined ? (\n                    <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                  ) : (\n                    <Chip label=\"No\" size=\"small\" color=\"error\" />\n                  )}\n                </TableCell>\n                <TableCell>{debugInfo.firstResult.citation_count !== undefined ? String(debugInfo.firstResult.citation_count) : 'N/A'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>year</TableCell>\n                <TableCell>\n                  {debugInfo.firstResult.year !== undefined ? (\n                    <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                  ) : (\n                    <Chip label=\"No\" size=\"small\" color=\"error\" />\n                  )}\n                </TableCell>\n                <TableCell>{debugInfo.firstResult.year !== undefined ? String(debugInfo.firstResult.year) : 'N/A'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>doctype</TableCell>\n                <TableCell>\n                  {debugInfo.firstResult.doctype !== undefined ? (\n                    <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                  ) : (\n                    <Chip label=\"No\" size=\"small\" color=\"error\" />\n                  )}\n                </TableCell>\n                <TableCell>{debugInfo.firstResult.doctype !== undefined ? String(debugInfo.firstResult.doctype) : 'N/A'}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>property</TableCell>\n                <TableCell>\n                  {debugInfo.firstResult.property !== undefined ? (\n                    <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                  ) : (\n                    <Chip label=\"No\" size=\"small\" color=\"error\" />\n                  )}\n                </TableCell>\n                <TableCell>{debugInfo.firstResult.property !== undefined ? \n                  (Array.isArray(debugInfo.firstResult.property) ? \n                    debugInfo.firstResult.property.join(', ') : \n                    String(debugInfo.firstResult.property)) : \n                  'N/A'}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Typography variant=\"subtitle2\" gutterBottom>Citation Fields</Typography>\n        <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Field Name</TableCell>\n                <TableCell>Present</TableCell>\n                <TableCell>Value</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.entries(debugInfo.citationFields).map(([field, value]) => (\n                <TableRow key={field}>\n                  <TableCell>{field}</TableCell>\n                  <TableCell>\n                    {value !== undefined && value !== null ? (\n                      <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                    ) : (\n                      <Chip label=\"No\" size=\"small\" color=\"error\" />\n                    )}\n                  </TableCell>\n                  <TableCell>{value !== undefined && value !== null ? String(value) : 'N/A'}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        \n        <Typography variant=\"subtitle2\" gutterBottom>Boost Fields</Typography>\n        <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Field Name</TableCell>\n                <TableCell>Present</TableCell>\n                <TableCell>Value</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.entries(debugInfo.boostFields).map(([field, value]) => (\n                <TableRow key={field}>\n                  <TableCell>{field}</TableCell>\n                  <TableCell>\n                    {value !== undefined && value !== null ? (\n                      <Chip label=\"Yes\" size=\"small\" color=\"success\" />\n                    ) : (\n                      <Chip label=\"No\" size=\"small\" color=\"error\" />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {field === 'boostFactors' && typeof value === 'object' ? (\n                      <Typography variant=\"caption\" component=\"pre\" sx={{ maxHeight: 100, overflow: 'auto' }}>\n                        {JSON.stringify(value, null, 2)}\n                      </Typography>\n                    ) : (\n                      value !== undefined && value !== null ? String(value) : 'N/A'\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        \n        <Typography variant=\"subtitle2\" gutterBottom>First Result Raw Data</Typography>\n        <Box \n          component=\"pre\" \n          sx={{ \n            maxHeight: 200, \n            overflow: 'auto', \n            fontSize: '0.75rem', \n            bgcolor: 'grey.100', \n            p: 1, \n            borderRadius: 1 \n          }}\n        >\n          {JSON.stringify(debugInfo.firstResult, null, 2)}\n        </Box>\n      </Box>\n    );\n  };\n  \n  if (!originalResults || originalResults.length === 0) {\n    return (\n      <Alert severity=\"warning\">\n        No results available for boost experiment. Please perform a search first.\n      </Alert>\n    );\n  }\n  \n  const handleConfigChange = (field, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  \n  // New handler for field boost changes\n  const handleFieldBoostChange = (field, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      fieldBoosts: {\n        ...prev.fieldBoosts,\n        [field]: value\n      }\n    }));\n  };\n  \n  // New handler for query transformation options\n  const handleQueryTransformationChange = (option, value) => {\n    setBoostConfig(prev => ({\n      ...prev,\n      queryTransformation: {\n        ...prev.queryTransformation,\n        [option]: value\n      }\n    }));\n  };\n  \n  // New handler for text input changes - allow much higher values now\n  const handleTextInputChange = (field, event) => {\n    const value = parseFloat(event.target.value);\n    if (!isNaN(value) && value >= 0) {\n      console.log(`Updating ${field} to ${value}`);\n      handleConfigChange(field, value);\n    }\n  };\n  \n  // New handler for field boost text input changes - allow much higher values now\n  const handleFieldBoostTextInputChange = (field, event) => {\n    const value = parseFloat(event.target.value);\n    if (!isNaN(value) && value >= 0) {\n      console.log(`Updating field boost ${field} to ${value}`);\n      handleFieldBoostChange(field, value);\n    }\n  };\n  \n  // Render the boost controls section\n  const renderBoostControls = () => {\n    return (\n      <Box sx={{ mb: 3, p: 2, border: '1px solid #e0e0e0', borderRadius: 1 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\">Boost Configuration</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={runNewSearch}\n            disabled={searchLoading}\n            sx={{ ml: 2 }}\n          >\n            {searchLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Apply Changes'}\n          </Button>\n        </Box>\n        \n        <Grid container spacing={2}>\n          {/* Field Boost Controls */}\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subtitle1\" gutterBottom>Field Boost Weights</Typography>\n            \n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>Title Weight: {boostConfig.fieldBoosts.title.toFixed(1)}</Typography>\n              <Slider\n                value={boostConfig.fieldBoosts.title}\n                onChange={(e, value) => handleFieldBoostChange('title', value)}\n                min={0}\n                max={20}\n                step={0.1}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n            \n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>Abstract Weight: {boostConfig.fieldBoosts.abstract.toFixed(1)}</Typography>\n              <Slider\n                value={boostConfig.fieldBoosts.abstract}\n                onChange={(e, value) => handleFieldBoostChange('abstract', value)}\n                min={0}\n                max={20}\n                step={0.1}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n            \n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>Author Weight: {boostConfig.fieldBoosts.author.toFixed(1)}</Typography>\n              <Slider\n                value={boostConfig.fieldBoosts.author}\n                onChange={(e, value) => handleFieldBoostChange('author', value)}\n                min={0}\n                max={20}\n                step={0.1}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n          </Grid>\n          \n          {/* Other Boost Controls */}\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subtitle1\" gutterBottom>Citation & Recency Boost</Typography>\n            \n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>Citation Boost: {boostConfig.citeBoostWeight.toFixed(1)}</Typography>\n              <Slider\n                value={boostConfig.citeBoostWeight}\n                onChange={(e, value) => handleTextInputChange('citeBoostWeight', e)}\n                min={0}\n                max={5}\n                step={0.1}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n            \n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"body2\" gutterBottom>Recency Boost: {boostConfig.recencyBoostWeight.toFixed(1)}</Typography>\n              <Slider\n                value={boostConfig.recencyBoostWeight}\n                onChange={(e, value) => handleTextInputChange('recencyBoostWeight', e)}\n                min={0}\n                max={5}\n                step={0.1}\n                valueLabelDisplay=\"auto\"\n              />\n            </Box>\n            \n            <Box sx={{ mb: 2 }}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={boostConfig.enableRecencyBoost}\n                    onChange={(e) => handleConfigChange('enableRecencyBoost', e.target.checked)}\n                  />\n                }\n                label=\"Enable Recency Boost\"\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  };\n  \n  return (\n    <Box sx={{ width: '100%', p: 2 }}>\n      {!originalResults || originalResults.length === 0 ? (\n        <Alert severity=\"warning\">\n          No results available for boost experiment. Please perform a search first.\n        </Alert>\n      ) : (\n        <Grid container spacing={2}>\n          {/* Boost Controls */}\n          <Grid item xs={12} md={4}>\n            {renderBoostControls()}\n          </Grid>\n\n          {/* Results Panel */}\n          <Grid item xs={12} md={8}>\n            <Paper sx={{ p: 2 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n                  Ranking Results\n                </Typography>\n                {loading && <CircularProgress size={24} sx={{ ml: 2 }} />}\n                <Button\n                  startIcon={<BugReportIcon />}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color=\"warning\"\n                  onClick={() => setDebugMode(!debugMode)}\n                  sx={{ ml: 2 }}\n                >\n                  {debugMode ? 'Hide Debug' : 'Debug Mode'}\n                </Button>\n              </Box>\n\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                  {error}\n                </Alert>\n              )}\n\n              {searchLoading && (\n                <Alert severity=\"info\" sx={{ mb: 2 }}>\n                  Fetching new results with updated field weights...\n                </Alert>\n              )}\n\n              <Collapse in={debugMode}>\n                {renderDebugPanel()}\n              </Collapse>\n\n              {boostedResults && boostedResults.results ? (\n                <>\n                  <Box sx={{ display: 'flex', mb: 2 }}>\n                    {/* Title Headers */}\n                    <Box sx={{ width: '50%', pr: 1 }}>\n                      <Paper sx={{ p: 1, bgcolor: 'grey.100', borderRadius: 1 }}>\n                        <Typography variant=\"subtitle1\" align=\"center\" fontWeight=\"bold\">\n                          Original Results\n                        </Typography>\n                        <Typography variant=\"caption\" align=\"center\" display=\"block\" color=\"text.secondary\">\n                          Default ranking without boosts\n                        </Typography>\n                      </Paper>\n                    </Box>\n                    <Box sx={{ width: '50%', pl: 1 }}>\n                      <Paper sx={{ p: 1, bgcolor: 'primary.light', color: 'primary.contrastText', borderRadius: 1 }}>\n                        <Typography variant=\"subtitle1\" align=\"center\" fontWeight=\"bold\">\n                          Boosted Results\n                        </Typography>\n                        <Typography variant=\"caption\" align=\"center\" display=\"block\" sx={{ color: 'rgba(255,255,255,0.8)' }}>\n                          Re-ranked based on current boost settings\n                        </Typography>\n                      </Paper>\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', px: 1 }}>\n                      <Typography variant=\"caption\" fontStyle=\"italic\">\n                        <strong>Note:</strong> Items with significant rank changes have colored borders and indicators.\n                      </Typography>\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={{ display: 'flex' }}>\n                    {/* Original Results */}\n                    <Box sx={{ width: '50%', pr: 1, height: '65vh', overflow: 'auto' }}>\n                      <List sx={{ bgcolor: 'background.paper', border: '1px solid', borderColor: 'divider', borderRadius: 1 }}>\n                        {originalResults.map((result, index) => {\n                          // Find matching boosted result to determine rank change\n                          const boostedIndex = boostedResults.results.findIndex(\n                            r => r.bibcode === result.bibcode || r.title === result.title\n                          );\n                          const rankChange = boostedIndex !== -1 ? index - boostedIndex : 0;\n                          \n                          return (\n                            <Tooltip\n                              key={result.bibcode || index}\n                              title={\n                                <Box>\n                                  <Typography variant=\"subtitle2\">{result.title}</Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Authors:</strong> {formatAuthors(result.author)}\n                                  </Typography>\n                                  {result.abstract && (\n                                    <Typography variant=\"body2\">\n                                      <strong>Abstract:</strong> {truncateText(result.abstract, 200)}\n                                    </Typography>\n                                  )}\n                                </Box>\n                              }\n                              placement=\"left\"\n                            >\n                              <ListItem \n                                key={result.bibcode || result.title} \n                                divider\n                                sx={{ \n                                  px: 2, \n                                  py: 1,\n                                  position: 'relative'\n                                }}\n                              >\n                                <ListItemText\n                                  primary={\n                                    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n                                      <Typography \n                                        variant=\"body2\" \n                                        component=\"span\"\n                                        sx={{ \n                                          minWidth: '24px',\n                                          fontWeight: 'bold',\n                                          mr: 1\n                                        }}\n                                      >\n                                        {index + 1}\n                                      </Typography>\n                                      <Box>\n                                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                                          {truncateText(result.title, 60)}\n                                        </Typography>\n                                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\n                                          {result.year && (\n                                            <Chip \n                                              label={`${result.year}`} \n                                              size=\"small\" \n                                              variant=\"outlined\"\n                                              sx={{ height: 20, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                                            />\n                                          )}\n                                          {result.citation_count !== undefined && (\n                                            <Chip \n                                              label={`Citations: ${result.citation_count}`} \n                                              size=\"small\"\n                                              variant=\"outlined\"\n                                              sx={{ height: 20, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                                            />\n                                          )}\n                                        </Box>\n                                      </Box>\n                                    </Box>\n                                  }\n                                />\n                              </ListItem>\n                            </Tooltip>\n                          );\n                        })}\n                      </List>\n                    </Box>\n                    \n                    {/* Boosted Results */}\n                    <Box sx={{ width: '50%', pl: 1, height: '65vh', overflow: 'auto' }}>\n                      <List sx={{ bgcolor: 'background.paper', border: '1px solid', borderColor: 'primary.light', borderRadius: 1 }}>\n                        {boostedResults.results.map((result, index) => {\n                          // Find matching original result to determine rank change\n                          const originalIndex = originalResults.findIndex(\n                            r => r.bibcode === result.bibcode || r.title === result.title\n                          );\n                          const rankChange = originalIndex !== -1 ? originalIndex - index : 0;\n                          \n                          // Get boost factors for this result\n                          const boostFactors = {};\n                          if (result.boostFactors) {\n                            Object.entries(result.boostFactors).forEach(([key, value]) => {\n                              boostFactors[key] = value;\n                            });\n                          }\n                          \n                          return (\n                            <Tooltip\n                              key={result.bibcode || index}\n                              title={\n                                <Box>\n                                  <Typography variant=\"subtitle2\">{result.title}</Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Authors:</strong> {formatAuthors(result.author)}\n                                  </Typography>\n                                  {result.abstract && (\n                                    <Typography variant=\"body2\">\n                                      <strong>Abstract:</strong> {truncateText(result.abstract, 200)}\n                                    </Typography>\n                                  )}\n                                  <Divider sx={{ my: 1 }} />\n                                  <Typography variant=\"body2\">\n                                    <strong>Original Rank:</strong> {originalIndex + 1}\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Rank Change:</strong> {rankChange > 0 ? '+' : ''}{rankChange}\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Boost Score:</strong> {result.finalBoost ? result.finalBoost.toFixed(2) : 'N/A'}\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Applied Boosts:</strong>\n                                  </Typography>\n                                  <Box component=\"ul\" sx={{ mt: 0.5, pl: 2 }}>\n                                    {Object.entries(boostFactors).map(([key, value]) => (\n                                      <Typography component=\"li\" variant=\"caption\" key={key}>\n                                        {key}: {value && value.toFixed ? value.toFixed(2) : value}\n                                      </Typography>\n                                    ))}\n                                  </Box>\n                                </Box>\n                              }\n                              placement=\"right\"\n                            >\n                              <ListItem \n                                key={result.bibcode || result.title} \n                                divider\n                                sx={{ \n                                  px: 2, \n                                  py: 1,\n                                  position: 'relative',\n                                  borderLeft: rankChange !== 0 ? '4px solid' : 'none',\n                                  borderLeftColor: rankChange > 0 ? 'success.main' : rankChange < 0 ? 'error.main' : 'transparent'\n                                }}\n                              >\n                                <ListItemText\n                                  primary={\n                                    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n                                      <Typography \n                                        variant=\"body2\" \n                                        component=\"span\"\n                                        sx={{ \n                                          minWidth: '24px',\n                                          fontWeight: 'bold',\n                                          mr: 1\n                                        }}\n                                      >\n                                        {index + 1}\n                                      </Typography>\n                                      <Box>\n                                        <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                                          {truncateText(result.title, 60)}\n                                        </Typography>\n                                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\n                                          {result.year && (\n                                            <Chip \n                                              label={`${result.year}`} \n                                              size=\"small\" \n                                              variant=\"outlined\"\n                                              sx={{ height: 20, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                                            />\n                                          )}\n                                          {result.citation_count !== undefined && (\n                                            <Chip \n                                              label={`Citations: ${result.citation_count}`} \n                                              size=\"small\"\n                                              variant=\"outlined\"\n                                              sx={{ height: 20, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                                            />\n                                          )}\n                                          {rankChange !== 0 && (\n                                            <Chip \n                                              icon={rankChange > 0 ? <ArrowUpward fontSize=\"small\" /> : <ArrowDownward fontSize=\"small\" />}\n                                              label={`${rankChange > 0 ? '+' : ''}${rankChange}`}\n                                              size=\"small\"\n                                              color={rankChange > 0 ? 'success' : 'error'}\n                                              sx={{ height: 20, '& .MuiChip-label': { px: 1, fontSize: '0.7rem' } }}\n                                            />\n                                          )}\n                                          {result.finalBoost !== undefined && (\n                                            <Chip \n                                              label={`Boost: ${result.finalBoost.toFixed(1)}`} \n                                              size=\"small\"\n                                              color=\"primary\"\n                                              sx={{ \n                                                height: 20, \n                                                '& .MuiChip-label': { px: 1, fontSize: '0.7rem' },\n                                                fontWeight: 'bold', \n                                                bgcolor: `rgba(25, 118, 210, ${Math.min(result.finalBoost / 20, 1)})`\n                                              }}\n                                            />\n                                          )}\n                                        </Box>\n                                      </Box>\n                                    </Box>\n                                  }\n                                />\n                              </ListItem>\n                            </Tooltip>\n                          );\n                        })}\n                      </List>\n                    </Box>\n                  </Box>\n                </>\n              ) : (\n                <Alert severity=\"info\">\n                  Configure and apply boost factors to see how they affect the ranking.\n                </Alert>\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default BoostExperiment; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}