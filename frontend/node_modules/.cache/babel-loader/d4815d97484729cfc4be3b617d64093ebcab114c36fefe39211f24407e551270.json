{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Box,Typography,TextField,Button,Checkbox,FormControlLabel,FormGroup,Grid,CircularProgress,Paper,Tabs,Tab,Divider,Alert,IconButton,AppBar,Toolbar,TableContainer,Table,TableHead,TableBody,TableRow,TableCell,Chip,List,ListItem,ListItemAvatar,ListItemText,ListItemSecondaryAction,Avatar,Tooltip,Accordion,AccordionSummary,AccordionDetails}from'@mui/material';import InfoIcon from'@mui/icons-material/Info';import BugReportIcon from'@mui/icons-material/BugReport';import ScienceIcon from'@mui/icons-material/Science';import SearchIcon from'@mui/icons-material/Search';import GitHubIcon from'@mui/icons-material/GitHub';import LaunchIcon from'@mui/icons-material/Launch';import NetworkCheckIcon from'@mui/icons-material/NetworkCheck';import CheckIcon from'@mui/icons-material/Check';import AssessmentIcon from'@mui/icons-material/Assessment';import{searchService,experimentService,debugService}from'./services/api';import BoostExperiment from'./components/BoostExperiment';import QuepidEvaluation from'./components/QuepidEvaluation';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const APP_VERSION=\"1.0.0\";const DEBUG=process.env.REACT_APP_DEBUG==='true';function App(){// State for search query and options\nconst[query,setQuery]=useState('');const[loading,setLoading]=useState(false);const[results,setResults]=useState(null);const[error,setError]=useState(null);const[mainTab,setMainTab]=useState(0);const[experimentTab,setExperimentTab]=useState(0);const[debugTab,setDebugTab]=useState(0);const[environmentInfo,setEnvironmentInfo]=useState(null);// State for source selection\nconst[sources,setSources]=useState({ads:true,scholar:true,semanticScholar:true,webOfScience:true});// State for similarity metrics selection\nconst[metrics,setMetrics]=useState({jaccard:true,rankBiased:true,cosine:false,euclidean:false});// State for metadata fields to compare\nconst[fields,setFields]=useState({title:true,abstract:true,authors:false,doi:true,year:false,citation_count:true});// Boost experiment state\nconst[boostConfig,setBoostConfig]=useState({query:'',boost_fields:['citation_count','year'],boost_weights:{citation_count:0.2,year:0.4},max_boost:1.5});// A/B test state\nconst[abTestVariation,setAbTestVariation]=useState('B');// Debug state\nconst[sourcesList,setSourcesList]=useState(null);const[pingResults,setPingResults]=useState({});const[testSearchResults,setTestSearchResults]=useState(null);// Result tab state\nconst[resultTab,setResultTab]=useState(0);const[filterText,setFilterText]=useState('');// Active source for detailed results\nconst[activeSource,setActiveSource]=useState(null);// Load environment info on startup\nuseEffect(()=>{const fetchEnvironmentInfo=async()=>{try{const envInfo=await debugService.getEnvironmentInfo();if(!envInfo.error){setEnvironmentInfo(envInfo);}}catch(error){console.error(\"Failed to fetch environment info:\",error);}};if(DEBUG){fetchEnvironmentInfo();}},[]);// Handle source selection changes\nconst handleSourceChange=event=>{setSources({...sources,[event.target.name]:event.target.checked});};// Handle metrics selection changes\nconst handleMetricsChange=event=>{setMetrics({...metrics,[event.target.name]:event.target.checked});};// Handle fields selection changes\nconst handleFieldsChange=event=>{setFields({...fields,[event.target.name]:event.target.checked});};// Handle tab changes\nconst handleMainTabChange=(event,newValue)=>{setMainTab(newValue);};const handleExperimentTabChange=(event,newValue)=>{setExperimentTab(newValue);};const handleDebugTabChange=(event,newValue)=>{setDebugTab(newValue);};// Submit the search query\nconst handleSearch=async()=>{if(!query.trim()){setError(\"Please enter a search query\");return;}if(!Object.values(sources).some(val=>val)){setError(\"Please select at least one search source\");return;}setLoading(true);setError(null);try{const selectedSources=Object.keys(sources).filter(key=>sources[key]);const selectedMetrics=Object.keys(metrics).filter(key=>metrics[key]);// Always include these fields for proper display\nconst selectedFields=[...Object.keys(fields).filter(key=>fields[key]),'abstract',// Always include abstract\n'citation_count'// Always include citation_count\n];// Remove duplicates\nconst uniqueFields=Array.from(new Set(selectedFields));const requestBody={query,sources:selectedSources,metrics:selectedMetrics,fields:uniqueFields};if(DEBUG){console.log('Making search request:',requestBody);}const response=await searchService.compareSearchResults(requestBody);if(response.error){setError(response.message);}else{setResults(response);}}catch(err){console.error('Search error:',err);setError(`Failed to fetch results: ${err.message}`);}finally{setLoading(false);}};// Run boost experiment\nconst handleRunBoostExperiment=async()=>{if(!boostConfig.query.trim()){setError(\"Please enter a query for the boost experiment\");return;}setLoading(true);setError(null);try{if(DEBUG){console.log('Running boost experiment with config:',boostConfig);}const response=await experimentService.runBoostExperiment(boostConfig);if(response.error){setError(response.message);}else{// Set results in a format that can be displayed\nsetResults({type:'boost',...response});}}catch(err){console.error('Boost experiment error:',err);setError(`Failed to run boost experiment: ${err.message}`);}finally{setLoading(false);}};// Run A/B test\nconst handleRunAbTest=async()=>{if(!query.trim()){setError(\"Please enter a search query for the A/B test\");return;}setLoading(true);setError(null);try{const selectedSources=Object.keys(sources).filter(key=>sources[key]);const selectedMetrics=Object.keys(metrics).filter(key=>metrics[key]);const selectedFields=Object.keys(fields).filter(key=>fields[key]);const requestBody={query,sources:selectedSources,metrics:selectedMetrics,fields:selectedFields};if(DEBUG){console.log('Running A/B test with config:',requestBody,'Variation:',abTestVariation);}const response=await experimentService.runAbTest(requestBody,abTestVariation);if(response.error){setError(response.message);}else{// Set results in a format that can be displayed\nsetResults({type:'abTest',...response});}}catch(err){console.error('A/B test error:',err);setError(`Failed to run A/B test: ${err.message}`);}finally{setLoading(false);}};// List sources for debug\nconst handleListSources=async()=>{setLoading(true);setError(null);try{const response=await debugService.listSources();if(response.error){setError(response.message);}else{setSourcesList(response);}}catch(err){console.error('List sources error:',err);setError(`Failed to list sources: ${err.message}`);}finally{setLoading(false);}};// Ping source for debug\nconst handlePingSource=async source=>{setLoading(true);setError(null);try{setPingResults({...pingResults,[source]:{loading:true}});const response=await debugService.pingSource(source);if(response.error){setPingResults({...pingResults,[source]:{error:response.message}});}else{setPingResults({...pingResults,[source]:response});}}catch(err){console.error(`Ping source ${source} error:`,err);setPingResults({...pingResults,[source]:{error:err.message}});}finally{setLoading(false);}};// Test search for debug\nconst handleTestSearch=async source=>{if(!query.trim()){setError(\"Please enter a search query for testing\");return;}setLoading(true);setError(null);try{const response=await debugService.testSearch(source,query);if(response.error){setError(response.message);}else{setTestSearchResults(response);}}catch(err){console.error('Test search error:',err);setError(`Failed to test search: ${err.message}`);}finally{setLoading(false);}};// Format source name for display\nconst formatSourceName=source=>{switch(source){case'ads':return'ADS/SciX';case'scholar':return'Google Scholar';case'webOfScience':return'Web of Science';case'semanticScholar':return'Semantic Scholar';default:return source.charAt(0).toUpperCase()+source.slice(1);}};// Format metric name for display\nconst formatMetricName=metric=>{switch(metric){case'jaccard':return'Jaccard Similarity';case'rankBiased':case'rank_biased':return'Rank-Biased Overlap';case'cosine':return'Cosine Similarity';case'euclidean':return'Euclidean Distance';default:return metric.replace(/_/g,' ').split(' ').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');}};// Helper function to get metric description\nconst getMetricDescription=metric=>{switch(metric){case'jaccard':return'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';case'rankBiased':case'rank_biased':return'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';case'cosine':return'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';case'euclidean':return'Measures the straight-line distance between two points in Euclidean space.';default:return'No description available for this metric.';}};// Add a new function to handle running a new search with custom weights\nconst handleRunNewSearchWithWeights=async(transformedQuery,boostConfig)=>{if(!transformedQuery.trim()){setError(\"Please enter a search query\");return Promise.reject(new Error(\"Empty query\"));}setLoading(true);setError(null);try{const selectedSources=Object.keys(sources).filter(key=>sources[key]);const selectedMetrics=Object.keys(metrics).filter(key=>metrics[key]);// Always include these fields for proper display\nconst selectedFields=[...Object.keys(fields).filter(key=>fields[key]),'abstract',// Always include abstract\n'citation_count'// Always include citation_count\n];// Remove duplicates\nconst uniqueFields=Array.from(new Set(selectedFields));const requestBody={query:transformedQuery,// Use the transformed query with field weights\nsources:selectedSources,metrics:selectedMetrics,fields:uniqueFields,originalQuery:query,// Include the original query for reference\nuseTransformedQuery:true// Flag to indicate this is a transformed query\n};if(DEBUG){console.log('Making search request with transformed query:',requestBody);}const response=await searchService.compareSearchResults(requestBody);if(response.error){setError(response.message);return Promise.reject(new Error(response.message));}else{setResults(response);return Promise.resolve(response);}}catch(err){console.error('Search error:',err);const errorMessage=`Failed to fetch results: ${err.message}`;setError(errorMessage);return Promise.reject(new Error(errorMessage));}finally{setLoading(false);}};// Experiment Tabs rendering\nconst renderExperimentTabs=()=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:2},children:/*#__PURE__*/_jsxs(Tabs,{value:experimentTab,onChange:handleExperimentTabChange,\"aria-label\":\"experiment tabs\",centered:true,children:[/*#__PURE__*/_jsx(Tab,{label:\"Boost Experiment\"}),/*#__PURE__*/_jsx(Tab,{label:\"A/B Testing\"}),/*#__PURE__*/_jsx(Tab,{label:\"Quepid Evaluation\"})]})}),experimentTab===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Boost Experiment\"}),/*#__PURE__*/_jsx(Typography,{paragraph:true,children:\"Apply configurable boost factors to search results based on citation count, publication year, document type, and more. See how different boost configurations affect the ranking of results.\"}),/*#__PURE__*/_jsx(BoostExperiment,{originalResults:results&&results.results?Object.values(results.results)[0]||[]:[],query:results?results.query:'',API_URL:API_URL,onRunNewSearch:handleRunNewSearchWithWeights})]}),experimentTab===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"A/B Testing\"}),/*#__PURE__*/_jsx(Typography,{paragraph:true,children:\"Run A/B tests to compare search result quality between different algorithms.\"})]}),experimentTab===2&&/*#__PURE__*/_jsx(QuepidEvaluation,{})]});};return/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsxs(AppBar,{position:\"static\",children:[/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(SearchIcon,{sx:{mr:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",sx:{flexGrow:1},children:\"Academic Search Engine Comparisons\"}),environmentInfo&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",component:\"div\",sx:{mr:2},children:[environmentInfo.environment,\" v\",APP_VERSION]}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",href:\"https://github.com/adsabs/search-comparisons\",target:\"_blank\",\"aria-label\":\"GitHub repository\",children:/*#__PURE__*/_jsx(GitHubIcon,{})})]}),/*#__PURE__*/_jsxs(Tabs,{value:mainTab,onChange:handleMainTabChange,variant:\"fullWidth\",textColor:\"inherit\",indicatorColor:\"secondary\",children:[/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(SearchIcon,{}),label:\"SEARCH\",id:\"tab-0\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(ScienceIcon,{}),label:\"EXPERIMENTS\",id:\"tab-1\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(BugReportIcon,{}),label:\"DEBUG\",id:\"tab-2\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(InfoIcon,{}),label:\"ABOUT\",id:\"tab-3\"})]})]}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},onClose:()=>setError(null),children:error}),mainTab===0&&/*#__PURE__*/_jsxs(Box,{my:4,children:[/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{p:3,mb:4},children:/*#__PURE__*/_jsx(Box,{component:\"form\",noValidate:true,autoComplete:\"off\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Search Query\",variant:\"outlined\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Enter your academic search query\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Search Sources\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:sources.ads,onChange:handleSourceChange,name:\"ads\"}),label:\"ADS/SciX\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:sources.scholar,onChange:handleSourceChange,name:\"scholar\"}),label:\"Google Scholar\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:sources.semanticScholar,onChange:handleSourceChange,name:\"semanticScholar\"}),label:\"Semantic Scholar\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:sources.webOfScience,onChange:handleSourceChange,name:\"webOfScience\"}),label:\"Web of Science\"})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Similarity Metrics\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:metrics.jaccard,onChange:handleMetricsChange,name:\"jaccard\"}),label:\"Jaccard Similarity\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:metrics.rankBiased,onChange:handleMetricsChange,name:\"rankBiased\"}),label:\"Rank-Biased Overlap\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:metrics.cosine,onChange:handleMetricsChange,name:\"cosine\"}),label:\"Cosine Similarity\"})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Metadata Fields\"}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.title,onChange:handleFieldsChange,name:\"title\"}),label:\"Title\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.abstract,onChange:handleFieldsChange,name:\"abstract\"}),label:\"Abstract\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.authors,onChange:handleFieldsChange,name:\"authors\"}),label:\"Authors\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.doi,onChange:handleFieldsChange,name:\"doi\"}),label:\"DOI\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.year,onChange:handleFieldsChange,name:\"year\"}),label:\"Publication Year\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:fields.citation_count,onChange:handleFieldsChange,name:\"citation_count\"}),label:\"Citation Count\"})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleSearch,disabled:loading,fullWidth:true,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):\"Compare Search Results\"})})]})})}),results&&results.type!=='boost'&&results.type!=='abTest'&&/*#__PURE__*/_jsxs(Box,{mt:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Search Results\"}),Object.keys(results.results).length>0&&/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{mb:3},children:[/*#__PURE__*/_jsxs(Tabs,{value:resultTab||0,onChange:(e,newValue)=>setResultTab(newValue),variant:\"fullWidth\",textColor:\"primary\",indicatorColor:\"primary\",children:[/*#__PURE__*/_jsx(Tab,{label:\"Comparison\",id:\"result-tab-0\"}),/*#__PURE__*/_jsx(Tab,{label:\"Results by Source\",id:\"result-tab-1\"}),/*#__PURE__*/_jsx(Tab,{label:\"Visualization\",id:\"result-tab-2\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[resultTab===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Results Comparison\"}),results.comparison&&results.comparison.similarity&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Similarity Metrics\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3,p:2,bgcolor:'background.paper',borderRadius:1,border:'1px solid #eee'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Understanding the Metrics:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Overlap:\"}),\" Records are matched by DOI (when available) or by title. The total shows unique matching papers.\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Same Rank:\"}),\" Papers that appear at the same rank position in both source results (e.g., paper appears as #3 in both sources).\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Jaccard Similarity:\"}),\" Measures overlap regardless of ranking - number of shared records divided by total unique records from both sources.\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rank-Biased Overlap:\"}),\" Measures similarity considering the ranking of results, giving more weight to matches at higher positions.\"]})]}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Sources\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Total Overlap\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Breakdown\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Same Rank\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Tooltip,{title:getMetricDescription('jaccard'),children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",display:\"inline\",sx:{cursor:'help',textDecoration:'underline',textDecorationStyle:'dotted'},children:\"Jaccard Similarity\"})})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Tooltip,{title:getMetricDescription('rankBiased'),children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",display:\"inline\",sx:{cursor:'help',textDecoration:'underline',textDecorationStyle:'dotted'},children:\"Rank-Biased Overlap\"})})})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries(results.comparison.overlap).map(_ref=>{var _results$comparison$s,_results$comparison$s2,_results$comparison$s3,_results$comparison$s4,_stats$matching_dois,_stats$all_matching_t;let[key,stats]=_ref;const[source1,source2]=key.split('_vs_');const sourceNames=[formatSourceName(source1),formatSourceName(source2)];const comparisonLabel=`${sourceNames[0]} vs ${sourceNames[1]}`;// Calculate metrics\nconst jaccardValue=(_results$comparison$s=results.comparison.similarity)===null||_results$comparison$s===void 0?void 0:(_results$comparison$s2=_results$comparison$s.jaccard)===null||_results$comparison$s2===void 0?void 0:_results$comparison$s2[key];const rankBiasedValue=(_results$comparison$s3=results.comparison.similarity)===null||_results$comparison$s3===void 0?void 0:(_results$comparison$s4=_results$comparison$s3.rankBiased)===null||_results$comparison$s4===void 0?void 0:_results$comparison$s4[key];const doiMatches=((_stats$matching_dois=stats.matching_dois)===null||_stats$matching_dois===void 0?void 0:_stats$matching_dois.length)||0;const titleMatches=((_stats$all_matching_t=stats.all_matching_titles)===null||_stats$all_matching_t===void 0?void 0:_stats$all_matching_t.length)||0;const sameRankCount=stats.same_rank_count||0;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:comparisonLabel}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(Chip,{label:stats.overlap,size:\"small\",color:\"success\",sx:{fontWeight:'bold'}})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[doiMatches,\" by DOI, \",titleMatches,\" by title\"]})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(Tooltip,{title:\"Papers that appear at the same rank position in both sources\",children:/*#__PURE__*/_jsx(Chip,{label:sameRankCount,size:\"small\",color:\"info\",sx:{fontWeight:'bold'}})})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(\"strong\",{children:jaccardValue!==undefined?jaccardValue.toFixed(4):'0.0000'})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(\"strong\",{children:rankBiasedValue!==undefined?rankBiasedValue.toFixed(4):'0.0000'})})]},key);})})]})})]})]}),resultTab===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Results by Source\"}),Object.keys(results.results).length>0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:2,display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[\"Showing results for: \",/*#__PURE__*/_jsx(\"strong\",{children:results.query})]}),/*#__PURE__*/_jsx(TextField,{size:\"small\",variant:\"outlined\",placeholder:\"Filter results...\",value:filterText,onChange:e=>setFilterText(e.target.value),sx:{width:250}})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:Object.keys(results.results).map(source=>{const sourceResults=results.results[source];const filteredResults=filterText?sourceResults.filter(result=>result.title.toLowerCase().includes(filterText.toLowerCase())||result.abstract&&result.abstract.toLowerCase().includes(filterText.toLowerCase())||result.authors&&result.authors.some(author=>author&&author.toLowerCase().includes(filterText.toLowerCase()))):sourceResults;return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,lg:3,children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{height:{xs:400,sm:500,md:550,lg:600},display:'flex',flexDirection:'column',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(Box,{sx:{p:1,bgcolor:source==='ads'?'primary.main':source==='scholar'?'error.main':source==='semanticScholar'?'warning.main':'success.main',color:'white',borderTopLeftRadius:4,borderTopRightRadius:4,display:'flex',justifyContent:'space-between',alignItems:'center',position:'sticky',top:0,zIndex:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",sx:{fontWeight:'bold'},children:formatSourceName(source)}),/*#__PURE__*/_jsx(Chip,{label:`${filteredResults.length} results`,size:\"small\",sx:{bgcolor:'rgba(255,255,255,0.2)',color:'white','& .MuiChip-label':{fontWeight:'bold'}}})]}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,overflow:'auto',maxHeight:{xs:'calc(400px - 48px)',sm:'calc(500px - 48px)',md:'calc(550px - 48px)',lg:'calc(600px - 48px)'}},children:/*#__PURE__*/_jsx(List,{disablePadding:true,children:filteredResults.map((result,idx)=>/*#__PURE__*/_jsx(Tooltip,{title:/*#__PURE__*/_jsxs(Box,{sx:{p:1,maxWidth:400},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:result.title}),/*#__PURE__*/_jsx(Divider,{sx:{my:1}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mb:1},children:[result.year&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Year: ${result.year}`,sx:{fontSize:'0.7rem'}}),result.citation_count!==undefined&&result.citation_count!==null&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Citations: ${result.citation_count}`,sx:{fontSize:'0.7rem'}}),result.doi&&/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`DOI: ${result.doi.substring(0,15)}...`,sx:{fontSize:'0.7rem'}})]}),result.authors&&result.authors.length>0&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{display:'block',mb:1},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Authors:\"}),\" \",Array.isArray(result.authors)?result.authors.slice(0,3).join(', ')+(result.authors.length>3?', et al.':''):result.authors]}),result.abstract&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{display:'block'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Abstract:\"}),\" \",result.abstract.length>300?`${result.abstract.substring(0,300)}...`:result.abstract]})]}),arrow:true,placement:\"right\",componentsProps:{tooltip:{sx:{bgcolor:'background.paper',color:'text.primary',boxShadow:3}}},children:/*#__PURE__*/_jsx(ListItem,{divider:true,sx:{'&:hover':{bgcolor:'action.hover'},px:2,py:1,minHeight:80,maxHeight:110},secondaryAction:result.url&&/*#__PURE__*/_jsx(IconButton,{size:\"small\",href:result.url,target:\"_blank\",\"aria-label\":\"View source\",sx:{ml:1},children:/*#__PURE__*/_jsx(LaunchIcon,{fontSize:\"small\"})}),children:/*#__PURE__*/_jsx(ListItemText,{disableTypography:true,primary:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Chip,{label:result.rank,size:\"small\",sx:{mr:1,minWidth:28,height:20,bgcolor:source==='ads'?'primary.light':source==='scholar'?'error.light':source==='semanticScholar'?'warning.light':'success.light'}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:'medium',display:'-webkit-box',WebkitLineClamp:2,WebkitBoxOrient:'vertical',overflow:'hidden',lineHeight:1.2,mb:0.5},children:result.title})]}),secondary:/*#__PURE__*/_jsxs(Box,{sx:{mt:0.5},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{display:'block',color:'text.secondary',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis'},children:[Array.isArray(result.authors)?result.authors.slice(0,2).join(', ')+(result.authors.length>2?', et al.':''):result.authors,result.year?` (${result.year})`:'']}),result.abstract&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{display:'-webkit-box',WebkitLineClamp:1,WebkitBoxOrient:'vertical',overflow:'hidden',color:'text.secondary',lineHeight:1.2,mt:0.5},children:result.abstract}),result.citation_count!==undefined&&result.citation_count!==null&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mt:0.5},children:/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Cited: ${result.citation_count}`,sx:{height:16,fontSize:'0.6rem','& .MuiChip-label':{px:0.8}}})})]})})})},idx))})})]})},source);})})]})]}),resultTab===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Visualization\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"Visual representation of search result similarity across different sources.\"}),results.comparison&&results.comparison.similarity&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Similarity Metrics Visualization\"}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"About this visualization:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"These bar charts show the Jaccard similarity and Rank-Biased Overlap (RBO) metrics between ADS/SciX and other search engines. Higher values indicate greater similarity between result sets.\"}),/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mt:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{fontWeight:'medium'},children:[\"Current Query: \",/*#__PURE__*/_jsx(\"strong\",{children:results.query})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mt:0.5,fontStyle:'italic'},children:\"In future versions, multiple queries will be displayed with different patterns to identify trends in search engine behavior across query types.\"})]})]}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,color:\"primary\",children:\"Jaccard Similarity\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"Jaccard similarity measures the proportion of shared results regardless of ranking position.\"}),/*#__PURE__*/_jsxs(Box,{sx:{height:300,position:'relative',border:'1px solid #eee',borderRadius:1,p:2,mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',left:0,top:0,bottom:0,width:50,display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-end',pr:1,borderRight:'1px solid #eee'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"1.0\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.8\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.6\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.2\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.0\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',left:50,right:0,bottom:0,height:20,display:'flex',justifyContent:'space-around',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Google Scholar\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Semantic Scholar\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Web of Science\"})]}),/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',left:50,right:0,top:0,bottom:20,display:'flex',alignItems:'flex-end',justifyContent:'space-around'},children:(()=>{// Define the comparison pairs we want to show\nconst comparisonPairs=[{key:'ads_vs_scholar',label:'ADS vs Google Scholar',color:'error.main'},{key:'ads_vs_semanticScholar',label:'ADS vs Semantic Scholar',color:'warning.main'},{key:'ads_vs_webOfScience',label:'ADS vs Web of Science',color:'success.main'}];return comparisonPairs.map(pair=>{var _results$comparison$s5,_results$comparison$s6;// Handle both directions (ads_vs_x or x_vs_ads)\nconst alt1=pair.key;const alt2=pair.key.split('_vs_').reverse().join('_vs_');// Get value from either direction\nconst value=((_results$comparison$s5=results.comparison.similarity.jaccard)===null||_results$comparison$s5===void 0?void 0:_results$comparison$s5[alt1])||((_results$comparison$s6=results.comparison.similarity.jaccard)===null||_results$comparison$s6===void 0?void 0:_results$comparison$s6[alt2])||0;// Calculate bar height based on value\nconst barHeight=`${value*100}%`;return/*#__PURE__*/_jsx(Tooltip,{title:`${pair.label}: ${value.toFixed(4)} (Query: \"${results.query}\")`,placement:\"top\",children:/*#__PURE__*/_jsx(Box,{sx:{width:'20%',height:barHeight,bgcolor:pair.color,borderRadius:'4px 4px 0 0',transition:'transform 0.2s',cursor:'pointer','&:hover':{transform:'scaleY(1.05)',filter:'brightness(1.1)'}}})},pair.key);});})()})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:2,justifyContent:'center',mt:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'error.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Google Scholar\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'warning.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Semantic Scholar\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'success.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Web of Science\"})]})]})]}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,color:\"primary\",children:\"Rank-Biased Overlap\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"Rank-Biased Overlap considers the order of results, giving higher weight to matches at the top of result lists.\"}),/*#__PURE__*/_jsxs(Box,{sx:{height:300,position:'relative',border:'1px solid #eee',borderRadius:1,p:2,mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',left:0,top:0,bottom:0,width:50,display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-end',pr:1,borderRight:'1px solid #eee'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"1.0\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.8\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.6\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.2\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"0.0\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',left:50,right:0,bottom:0,height:20,display:'flex',justifyContent:'space-around',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Google Scholar\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Semantic Scholar\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Web of Science\"})]}),/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',left:50,right:0,top:0,bottom:20,display:'flex',flexDirection:'column',justifyContent:'space-between'},children:[0,0.2,0.4,0.6,0.8,1].map(line=>/*#__PURE__*/_jsx(Box,{sx:{borderBottom:line<1?'1px dashed #ddd':'none',width:'100%',height:0}},line))}),/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',left:50,right:0,top:0,bottom:20,display:'flex',alignItems:'flex-end',justifyContent:'space-around'},children:(()=>{// Define the comparison pairs we want to show\nconst comparisonPairs=[{key:'ads_vs_scholar',label:'ADS vs Google Scholar',color:'error.main'},{key:'ads_vs_semanticScholar',label:'ADS vs Semantic Scholar',color:'warning.main'},{key:'ads_vs_webOfScience',label:'ADS vs Web of Science',color:'success.main'}];return comparisonPairs.map(pair=>{var _results$comparison$s7,_results$comparison$s8;// Handle both directions (ads_vs_x or x_vs_ads)\nconst alt1=pair.key;const alt2=pair.key.split('_vs_').reverse().join('_vs_');// Get value from either direction\nconst value=((_results$comparison$s7=results.comparison.similarity.rankBiased)===null||_results$comparison$s7===void 0?void 0:_results$comparison$s7[alt1])||((_results$comparison$s8=results.comparison.similarity.rankBiased)===null||_results$comparison$s8===void 0?void 0:_results$comparison$s8[alt2])||0;// Calculate bar height based on value\nconst barHeight=`${value*100}%`;return/*#__PURE__*/_jsx(Tooltip,{title:`${pair.label}: ${value.toFixed(4)} (Query: \"${results.query}\")`,placement:\"top\",children:/*#__PURE__*/_jsx(Box,{sx:{width:'20%',height:barHeight,bgcolor:pair.color,borderRadius:'4px 4px 0 0',transition:'transform 0.2s',cursor:'pointer','&:hover':{transform:'scaleY(1.05)',filter:'brightness(1.1)'}}})},pair.key);});})()})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:2,justifyContent:'center',mt:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'error.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Google Scholar\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'warning.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Semantic Scholar\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:16,height:10,bgcolor:'success.main',mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"ADS vs Web of Science\"})]})]})]})]}),(!results.comparison||!results.comparison.similarity)&&/*#__PURE__*/_jsxs(Box,{sx:{height:300,display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",gutterBottom:true,children:\"No data to visualize\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Run a search across multiple sources to see similarity metrics visualized here.\"})]})]})]})]})}),Object.keys(results.results).length===0&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:\"No results found for the given query and sources.\"})]})]}),mainTab===1&&/*#__PURE__*/_jsx(Box,{my:4,children:/*#__PURE__*/_jsx(Paper,{elevation:3,sx:{p:3,mb:4},children:renderExperimentTabs()})}),mainTab===2&&/*#__PURE__*/_jsx(Box,{my:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,mb:4},children:[/*#__PURE__*/_jsxs(Tabs,{value:debugTab,onChange:handleDebugTabChange,variant:\"fullWidth\",textColor:\"primary\",indicatorColor:\"primary\",children:[/*#__PURE__*/_jsx(Tab,{label:\"Environment\",id:\"debug-tab-0\"}),/*#__PURE__*/_jsx(Tab,{label:\"Sources\",id:\"debug-tab-1\"}),/*#__PURE__*/_jsx(Tab,{label:\"Test Search\",id:\"debug-tab-2\"})]}),debugTab===0&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:async()=>{setLoading(true);try{const response=await debugService.getEnvironmentInfo();if(response.error){setError(response.message);}else{setEnvironmentInfo(response);}}catch(err){setError(`Failed to get environment info: ${err.message}`);}finally{setLoading(false);}},disabled:loading,sx:{mb:2},children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):\"Refresh Environment Info\"}),environmentInfo&&/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Environment Information\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"System\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsx(Table,{size:\"small\",children:/*#__PURE__*/_jsxs(TableBody,{children:[/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Python Version\"})}),/*#__PURE__*/_jsx(TableCell,{children:environmentInfo.python_version||'N/A'})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"OS Platform\"})}),/*#__PURE__*/_jsx(TableCell,{children:environmentInfo.platform||'N/A'})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Environment\"})}),/*#__PURE__*/_jsx(TableCell,{children:environmentInfo.environment||'development'})]}),/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Debug Mode\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:environmentInfo.debug?'Enabled':'Disabled',color:environmentInfo.debug?'warning':'default',size:\"small\"})})]})]})})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"API Configuration\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsx(Table,{size:\"small\",children:/*#__PURE__*/_jsx(TableBody,{children:Object.entries(environmentInfo.api_keys||{}).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"strong\",{children:key})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:value?'Configured':'Missing',color:value?'success':'error',size:\"small\"})})]},key);})})})})]})}),environmentInfo.dependencies&&Object.keys(environmentInfo.dependencies).length>0&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Dependencies\"}),/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:300},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",stickyHeader:true,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Package\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Version\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries(environmentInfo.dependencies).map(_ref3=>{let[pkg,version]=_ref3;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:pkg}),/*#__PURE__*/_jsx(TableCell,{children:version})]},pkg);})})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(InfoIcon,{}),children:/*#__PURE__*/_jsx(Typography,{children:\"View Raw Environment Data\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(\"pre\",{style:{maxHeight:'300px',overflow:'auto'},children:JSON.stringify(environmentInfo,null,2)})})]})})]})]})]}),debugTab===1&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleListSources,disabled:loading,sx:{mb:2,mr:2},children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):\"List Sources\"}),sourcesList&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Available Search Sources\"}),/*#__PURE__*/_jsx(List,{children:sourcesList.map(source=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:source.id==='ads'?'primary.main':source.id==='scholar'?'error.main':source.id==='semanticScholar'?'warning.main':'success.main'},children:/*#__PURE__*/_jsx(SearchIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:formatSourceName(source.id),secondary:`Status: ${source.status}, Max Results: ${source.max_results}`}),/*#__PURE__*/_jsxs(ListItemSecondaryAction,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handlePingSource(source.id),startIcon:/*#__PURE__*/_jsx(NetworkCheckIcon,{}),children:\"Ping\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleTestSearch(source.id),disabled:!query.trim(),startIcon:/*#__PURE__*/_jsx(CheckIcon,{}),sx:{ml:1},children:\"Test Search\"})]})]},source.id))})]})}),Object.keys(pingResults).length>0&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Ping Results\"}),/*#__PURE__*/_jsx(List,{children:Object.entries(pingResults).map(_ref4=>{let[sourceId,result]=_ref4;return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:sourceId==='ads'?'primary.main':sourceId==='scholar'?'error.main':sourceId==='semanticScholar'?'warning.main':'success.main'},children:/*#__PURE__*/_jsx(SearchIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:formatSourceName(sourceId),secondary:result.loading?'Pinging...':result.error?`Error: ${result.error}`:`Response time: ${result.response_time_ms}ms, Status: ${result.status}`})]},sourceId);})})]})})]}),debugTab===2&&/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Test Search Query\",variant:\"outlined\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Enter query for testing\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Select Source to Test\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexWrap:\"wrap\",gap:2,mt:1,children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>handleTestSearch('ads'),disabled:loading,children:\"Test ADS/SciX\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>handleTestSearch('scholar'),disabled:loading,children:\"Test Google Scholar\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>handleTestSearch('semanticScholar'),disabled:loading,children:\"Test Semantic Scholar\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>handleTestSearch('webOfScience'),disabled:loading,children:\"Test Web of Science\"})]})]})]}),testSearchResults&&/*#__PURE__*/_jsxs(Box,{mt:4,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",gutterBottom:true,children:[\"Test Search Results for \",testSearchResults.source]}),/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[\"Query: \",testSearchResults.query,\" | Results: \",testSearchResults.count,\" | Time: \",testSearchResults.response_time_ms,\"ms\"]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(testSearchResults.results,null,2)})]})]})]})]})}),mainTab===3&&/*#__PURE__*/_jsx(Box,{my:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"About Search Comparisons\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",paragraph:true,children:\"This application allows you to compare search results across multiple academic search engines, including ADS/SciX, Google Scholar, Semantic Scholar, and Web of Science.\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",paragraph:true,children:\"Features include:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Compare results across multiple sources\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Analyze similarity between result sets\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Experiment with boosting factors to improve rankings\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Perform A/B testing of different search algorithms\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Debug tools for API testing and diagnostics\"})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",paragraph:true,children:[\"Version: \",APP_VERSION]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Backend API: \",API_URL]}),environmentInfo&&environmentInfo.environment&&/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Environment: \",environmentInfo.environment]})]})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","TextField","Button","Checkbox","FormControlLabel","FormGroup","Grid","CircularProgress","Paper","Tabs","Tab","Divider","Alert","IconButton","AppBar","Toolbar","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","Chip","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Avatar","Tooltip","Accordion","AccordionSummary","AccordionDetails","InfoIcon","BugReportIcon","ScienceIcon","SearchIcon","GitHubIcon","LaunchIcon","NetworkCheckIcon","CheckIcon","AssessmentIcon","searchService","experimentService","debugService","BoostExperiment","QuepidEvaluation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","APP_VERSION","DEBUG","REACT_APP_DEBUG","App","query","setQuery","loading","setLoading","results","setResults","error","setError","mainTab","setMainTab","experimentTab","setExperimentTab","debugTab","setDebugTab","environmentInfo","setEnvironmentInfo","sources","setSources","ads","scholar","semanticScholar","webOfScience","metrics","setMetrics","jaccard","rankBiased","cosine","euclidean","fields","setFields","title","abstract","authors","doi","year","citation_count","boostConfig","setBoostConfig","boost_fields","boost_weights","max_boost","abTestVariation","setAbTestVariation","sourcesList","setSourcesList","pingResults","setPingResults","testSearchResults","setTestSearchResults","resultTab","setResultTab","filterText","setFilterText","activeSource","setActiveSource","fetchEnvironmentInfo","envInfo","getEnvironmentInfo","console","handleSourceChange","event","target","name","checked","handleMetricsChange","handleFieldsChange","handleMainTabChange","newValue","handleExperimentTabChange","handleDebugTabChange","handleSearch","trim","Object","values","some","val","selectedSources","keys","filter","key","selectedMetrics","selectedFields","uniqueFields","Array","from","Set","requestBody","log","response","compareSearchResults","message","err","handleRunBoostExperiment","runBoostExperiment","type","handleRunAbTest","runAbTest","handleListSources","listSources","handlePingSource","source","pingSource","handleTestSearch","testSearch","formatSourceName","charAt","toUpperCase","slice","formatMetricName","metric","replace","split","map","word","join","getMetricDescription","handleRunNewSearchWithWeights","transformedQuery","Promise","reject","Error","originalQuery","useTransformedQuery","resolve","errorMessage","renderExperimentTabs","children","sx","borderBottom","borderColor","mb","value","onChange","centered","label","variant","gutterBottom","paragraph","originalResults","onRunNewSearch","flexGrow","position","mr","component","environment","color","href","textColor","indicatorColor","icon","id","maxWidth","severity","mt","onClose","my","elevation","p","noValidate","autoComplete","container","spacing","item","xs","fullWidth","e","placeholder","sm","control","onClick","disabled","size","length","comparison","similarity","bgcolor","borderRadius","border","align","display","cursor","textDecoration","textDecorationStyle","entries","overlap","_ref","_results$comparison$s","_results$comparison$s2","_results$comparison$s3","_results$comparison$s4","_stats$matching_dois","_stats$all_matching_t","stats","source1","source2","sourceNames","comparisonLabel","jaccardValue","rankBiasedValue","doiMatches","matching_dois","titleMatches","all_matching_titles","sameRankCount","same_rank_count","fontWeight","undefined","toFixed","justifyContent","alignItems","width","sourceResults","filteredResults","result","toLowerCase","includes","author","md","lg","height","flexDirection","overflow","borderTopLeftRadius","borderTopRightRadius","top","zIndex","maxHeight","disablePadding","idx","flexWrap","gap","fontSize","substring","isArray","arrow","placement","componentsProps","tooltip","boxShadow","divider","px","py","minHeight","secondaryAction","url","ml","disableTypography","primary","rank","minWidth","WebkitLineClamp","WebkitBoxOrient","lineHeight","secondary","whiteSpace","textOverflow","fontStyle","left","bottom","pr","borderRight","right","comparisonPairs","pair","_results$comparison$s5","_results$comparison$s6","alt1","alt2","reverse","barHeight","transition","transform","line","_results$comparison$s7","_results$comparison$s8","python_version","platform","debug","api_keys","_ref2","dependencies","stickyHeader","_ref3","pkg","version","expandIcon","style","JSON","stringify","status","max_results","startIcon","_ref4","sourceId","response_time_ms","count"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, Box, Typography, TextField, Button, \n  Checkbox, FormControlLabel, FormGroup, Grid, \n  CircularProgress, Paper, Tabs, Tab, Divider, Alert,\n  IconButton, AppBar, Toolbar, TableContainer, Table,\n  TableHead, TableBody, TableRow, TableCell, Chip,\n  List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction,\n  Avatar, Tooltip, Accordion, AccordionSummary, AccordionDetails\n} from '@mui/material';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport SearchIcon from '@mui/icons-material/Search';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport CheckIcon from '@mui/icons-material/Check';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\n\nimport { searchService, experimentService, debugService } from './services/api';\nimport BoostExperiment from './components/BoostExperiment';\nimport QuepidEvaluation from './components/QuepidEvaluation';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APP_VERSION = \"1.0.0\";\nconst DEBUG = process.env.REACT_APP_DEBUG === 'true';\n\nfunction App() {\n  // State for search query and options\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [mainTab, setMainTab] = useState(0);\n  const [experimentTab, setExperimentTab] = useState(0);\n  const [debugTab, setDebugTab] = useState(0);\n  const [environmentInfo, setEnvironmentInfo] = useState(null);\n  \n  // State for source selection\n  const [sources, setSources] = useState({\n    ads: true,\n    scholar: true,\n    semanticScholar: true,\n    webOfScience: true\n  });\n  \n  // State for similarity metrics selection\n  const [metrics, setMetrics] = useState({\n    jaccard: true,\n    rankBiased: true,\n    cosine: false,\n    euclidean: false\n  });\n  \n  // State for metadata fields to compare\n  const [fields, setFields] = useState({\n    title: true,\n    abstract: true,\n    authors: false,\n    doi: true,\n    year: false,\n    citation_count: true\n  });\n\n  // Boost experiment state\n  const [boostConfig, setBoostConfig] = useState({\n    query: '',\n    boost_fields: ['citation_count', 'year'],\n    boost_weights: {\n      citation_count: 0.2,\n      year: 0.4\n    },\n    max_boost: 1.5\n  });\n  \n  // A/B test state\n  const [abTestVariation, setAbTestVariation] = useState('B');\n\n  // Debug state\n  const [sourcesList, setSourcesList] = useState(null);\n  const [pingResults, setPingResults] = useState({});\n  const [testSearchResults, setTestSearchResults] = useState(null);\n\n  // Result tab state\n  const [resultTab, setResultTab] = useState(0);\n  const [filterText, setFilterText] = useState('');\n\n  // Active source for detailed results\n  const [activeSource, setActiveSource] = useState(null);\n\n  // Load environment info on startup\n  useEffect(() => {\n    const fetchEnvironmentInfo = async () => {\n      try {\n        const envInfo = await debugService.getEnvironmentInfo();\n        if (!envInfo.error) {\n          setEnvironmentInfo(envInfo);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch environment info:\", error);\n      }\n    };\n\n    if (DEBUG) {\n      fetchEnvironmentInfo();\n    }\n  }, []);\n\n  // Handle source selection changes\n  const handleSourceChange = (event) => {\n    setSources({\n      ...sources,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle metrics selection changes\n  const handleMetricsChange = (event) => {\n    setMetrics({\n      ...metrics,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle fields selection changes\n  const handleFieldsChange = (event) => {\n    setFields({\n      ...fields,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  // Handle tab changes\n  const handleMainTabChange = (event, newValue) => {\n    setMainTab(newValue);\n  };\n\n  const handleExperimentTabChange = (event, newValue) => {\n    setExperimentTab(newValue);\n  };\n\n  const handleDebugTabChange = (event, newValue) => {\n    setDebugTab(newValue);\n  };\n\n  // Submit the search query\n  const handleSearch = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query\");\n      return;\n    }\n    \n    if (!Object.values(sources).some(val => val)) {\n      setError(\"Please select at least one search source\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count'  // Always include citation_count\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields\n      };\n\n      if (DEBUG) {\n        console.log('Making search request:', requestBody);\n      }\n      \n      const response = await searchService.compareSearchResults(requestBody);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setResults(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(`Failed to fetch results: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run boost experiment\n  const handleRunBoostExperiment = async () => {\n    if (!boostConfig.query.trim()) {\n      setError(\"Please enter a query for the boost experiment\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (DEBUG) {\n        console.log('Running boost experiment with config:', boostConfig);\n      }\n      \n      const response = await experimentService.runBoostExperiment(boostConfig);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'boost',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('Boost experiment error:', err);\n      setError(`Failed to run boost experiment: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Run A/B test\n  const handleRunAbTest = async () => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for the A/B test\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      const selectedFields = Object.keys(fields).filter(key => fields[key]);\n      \n      const requestBody = {\n        query,\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: selectedFields\n      };\n\n      if (DEBUG) {\n        console.log('Running A/B test with config:', requestBody, 'Variation:', abTestVariation);\n      }\n      \n      const response = await experimentService.runAbTest(requestBody, abTestVariation);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        // Set results in a format that can be displayed\n        setResults({\n          type: 'abTest',\n          ...response\n        });\n      }\n    } catch (err) {\n      console.error('A/B test error:', err);\n      setError(`Failed to run A/B test: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // List sources for debug\n  const handleListSources = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.listSources();\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setSourcesList(response);\n      }\n    } catch (err) {\n      console.error('List sources error:', err);\n      setError(`Failed to list sources: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ping source for debug\n  const handlePingSource = async (source) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      setPingResults({\n        ...pingResults,\n        [source]: { loading: true }\n      });\n      \n      const response = await debugService.pingSource(source);\n      \n      if (response.error) {\n        setPingResults({\n          ...pingResults,\n          [source]: { error: response.message }\n        });\n      } else {\n        setPingResults({\n          ...pingResults,\n          [source]: response\n        });\n      }\n    } catch (err) {\n      console.error(`Ping source ${source} error:`, err);\n      setPingResults({\n        ...pingResults,\n        [source]: { error: err.message }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Test search for debug\n  const handleTestSearch = async (source) => {\n    if (!query.trim()) {\n      setError(\"Please enter a search query for testing\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await debugService.testSearch(source, query);\n      \n      if (response.error) {\n        setError(response.message);\n      } else {\n        setTestSearchResults(response);\n      }\n    } catch (err) {\n      console.error('Test search error:', err);\n      setError(`Failed to test search: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format source name for display\n  const formatSourceName = (source) => {\n    switch(source) {\n      case 'ads':\n        return 'ADS/SciX';\n      case 'scholar':\n        return 'Google Scholar';\n      case 'webOfScience':\n        return 'Web of Science';\n      case 'semanticScholar':\n        return 'Semantic Scholar';\n      default:\n        return source.charAt(0).toUpperCase() + source.slice(1);\n    }\n  };\n\n  // Format metric name for display\n  const formatMetricName = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Jaccard Similarity';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap';\n      case 'cosine':\n        return 'Cosine Similarity';\n      case 'euclidean':\n        return 'Euclidean Distance';\n      default:\n        return metric.replace(/_/g, ' ').split(' ').map(word => \n          word.charAt(0).toUpperCase() + word.slice(1)\n        ).join(' ');\n    }\n  };\n\n  // Helper function to get metric description\n  const getMetricDescription = (metric) => {\n    switch(metric) {\n      case 'jaccard':\n        return 'Measures the similarity between finite sample sets, and is defined as the size of the intersection divided by the size of the union of the sample sets.';\n      case 'rankBiased':\n      case 'rank_biased':\n        return 'Rank-Biased Overlap (RBO) measures the similarity between two ranked lists, weighting items towards the top of the lists more heavily.';\n      case 'cosine':\n        return 'Measures the cosine of the angle between two vectors, representing how similar the two vectors are irrespective of their size.';\n      case 'euclidean':\n        return 'Measures the straight-line distance between two points in Euclidean space.';\n      default:\n        return 'No description available for this metric.';\n    }\n  };\n\n  // Add a new function to handle running a new search with custom weights\n  const handleRunNewSearchWithWeights = async (transformedQuery, boostConfig) => {\n    if (!transformedQuery.trim()) {\n      setError(\"Please enter a search query\");\n      return Promise.reject(new Error(\"Empty query\"));\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const selectedSources = Object.keys(sources).filter(key => sources[key]);\n      const selectedMetrics = Object.keys(metrics).filter(key => metrics[key]);\n      \n      // Always include these fields for proper display\n      const selectedFields = [\n        ...Object.keys(fields).filter(key => fields[key]),\n        'abstract',  // Always include abstract\n        'citation_count'  // Always include citation_count\n      ];\n      \n      // Remove duplicates\n      const uniqueFields = Array.from(new Set(selectedFields));\n      \n      const requestBody = {\n        query: transformedQuery, // Use the transformed query with field weights\n        sources: selectedSources,\n        metrics: selectedMetrics,\n        fields: uniqueFields,\n        originalQuery: query, // Include the original query for reference\n        useTransformedQuery: true // Flag to indicate this is a transformed query\n      };\n\n      if (DEBUG) {\n        console.log('Making search request with transformed query:', requestBody);\n      }\n      \n      const response = await searchService.compareSearchResults(requestBody);\n      \n      if (response.error) {\n        setError(response.message);\n        return Promise.reject(new Error(response.message));\n      } else {\n        setResults(response);\n        return Promise.resolve(response);\n      }\n    } catch (err) {\n      console.error('Search error:', err);\n      const errorMessage = `Failed to fetch results: ${err.message}`;\n      setError(errorMessage);\n      return Promise.reject(new Error(errorMessage));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Experiment Tabs rendering\n  const renderExperimentTabs = () => {\n    return (\n      <>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n          <Tabs\n            value={experimentTab}\n            onChange={handleExperimentTabChange}\n            aria-label=\"experiment tabs\"\n            centered\n          >\n            <Tab label=\"Boost Experiment\" />\n            <Tab label=\"A/B Testing\" />\n            <Tab label=\"Quepid Evaluation\" />\n          </Tabs>\n        </Box>\n        \n        {experimentTab === 0 && (\n          <Box>\n            <Typography variant=\"h5\" gutterBottom>\n              Boost Experiment\n            </Typography>\n            <Typography paragraph>\n              Apply configurable boost factors to search results based on citation count, publication year, document type, and more.\n              See how different boost configurations affect the ranking of results.\n            </Typography>\n            <BoostExperiment \n              originalResults={results && results.results ? Object.values(results.results)[0] || [] : []}\n              query={results ? results.query : ''}\n              API_URL={API_URL}\n              onRunNewSearch={handleRunNewSearchWithWeights}\n            />\n          </Box>\n        )}\n        \n        {experimentTab === 1 && (\n          <Box>\n            <Typography variant=\"h5\" gutterBottom>\n              A/B Testing\n            </Typography>\n            <Typography paragraph>\n              Run A/B tests to compare search result quality between different algorithms.\n            </Typography>\n            {/* A/B Testing UI here */}\n          </Box>\n        )}\n        \n        {experimentTab === 2 && (\n          <QuepidEvaluation />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <SearchIcon sx={{ mr: 2 }} />\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Academic Search Engine Comparisons\n          </Typography>\n          {environmentInfo && (\n            <Typography variant=\"caption\" component=\"div\" sx={{ mr: 2 }}>\n              {environmentInfo.environment} v{APP_VERSION}\n            </Typography>\n          )}\n          <IconButton \n            color=\"inherit\" \n            href=\"https://github.com/adsabs/search-comparisons\" \n            target=\"_blank\"\n            aria-label=\"GitHub repository\"\n          >\n            <GitHubIcon />\n          </IconButton>\n        </Toolbar>\n        <Tabs \n          value={mainTab} \n          onChange={handleMainTabChange}\n          variant=\"fullWidth\"\n          textColor=\"inherit\"\n          indicatorColor=\"secondary\"\n        >\n          <Tab icon={<SearchIcon />} label=\"SEARCH\" id=\"tab-0\" />\n          <Tab icon={<ScienceIcon />} label=\"EXPERIMENTS\" id=\"tab-1\" />\n          <Tab icon={<BugReportIcon />} label=\"DEBUG\" id=\"tab-2\" />\n          <Tab icon={<InfoIcon />} label=\"ABOUT\" id=\"tab-3\" />\n        </Tabs>\n      </AppBar>\n\n      <Container maxWidth=\"lg\">\n        {/* Alert for errors */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }} onClose={() => setError(null)}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Search Tab */}\n        {mainTab === 0 && (\n          <Box my={4}>\n            <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n              <Box component=\"form\" noValidate autoComplete=\"off\">\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Search Query\"\n                      variant=\"outlined\"\n                      value={query}\n                      onChange={(e) => setQuery(e.target.value)}\n                      placeholder=\"Enter your academic search query\"\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <Typography variant=\"subtitle1\">Search Sources</Typography>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox checked={sources.ads} onChange={handleSourceChange} name=\"ads\" />}\n                        label=\"ADS/SciX\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={sources.scholar} onChange={handleSourceChange} name=\"scholar\" />}\n                        label=\"Google Scholar\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={sources.semanticScholar} onChange={handleSourceChange} name=\"semanticScholar\" />}\n                        label=\"Semantic Scholar\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={sources.webOfScience} onChange={handleSourceChange} name=\"webOfScience\" />}\n                        label=\"Web of Science\"\n                      />\n                    </FormGroup>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <Typography variant=\"subtitle1\">Similarity Metrics</Typography>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox checked={metrics.jaccard} onChange={handleMetricsChange} name=\"jaccard\" />}\n                        label=\"Jaccard Similarity\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={metrics.rankBiased} onChange={handleMetricsChange} name=\"rankBiased\" />}\n                        label=\"Rank-Biased Overlap\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={metrics.cosine} onChange={handleMetricsChange} name=\"cosine\" />}\n                        label=\"Cosine Similarity\"\n                      />\n                    </FormGroup>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={4}>\n                    <Typography variant=\"subtitle1\">Metadata Fields</Typography>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.title} onChange={handleFieldsChange} name=\"title\" />}\n                        label=\"Title\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.abstract} onChange={handleFieldsChange} name=\"abstract\" />}\n                        label=\"Abstract\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.authors} onChange={handleFieldsChange} name=\"authors\" />}\n                        label=\"Authors\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.doi} onChange={handleFieldsChange} name=\"doi\" />}\n                        label=\"DOI\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.year} onChange={handleFieldsChange} name=\"year\" />}\n                        label=\"Publication Year\"\n                      />\n                      <FormControlLabel\n                        control={<Checkbox checked={fields.citation_count} onChange={handleFieldsChange} name=\"citation_count\" />}\n                        label=\"Citation Count\"\n                      />\n                    </FormGroup>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleSearch}\n                      disabled={loading}\n                      fullWidth\n                    >\n                      {loading ? <CircularProgress size={24} /> : \"Compare Search Results\"}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Paper>\n\n            {/* Display search results if available */}\n            {results && results.type !== 'boost' && results.type !== 'abTest' && (\n              <Box mt={4}>\n                <Typography variant=\"h5\" gutterBottom>\n                  Search Results\n                </Typography>\n                \n                {Object.keys(results.results).length > 0 && (\n                  <Box>\n                    <Paper elevation={3} sx={{ mb: 3 }}>\n                      <Tabs \n                        value={resultTab || 0} \n                        onChange={(e, newValue) => setResultTab(newValue)}\n                        variant=\"fullWidth\"\n                        textColor=\"primary\"\n                        indicatorColor=\"primary\"\n                      >\n                        <Tab label=\"Comparison\" id=\"result-tab-0\" />\n                        <Tab label=\"Results by Source\" id=\"result-tab-1\" />\n                        <Tab label=\"Visualization\" id=\"result-tab-2\" />\n                      </Tabs>\n                      \n                      <Box sx={{ p: 2 }}>\n                        {/* Results Comparison Tab */}\n                        {resultTab === 0 && (\n                          <Box>\n                            <Typography variant=\"h6\" gutterBottom>\n                              Results Comparison\n                            </Typography>\n                            {/* Display the similarity metrics */}\n                            {results.comparison && results.comparison.similarity && (\n                              <Box>\n                                <Typography variant=\"h6\" gutterBottom>\n                                  Similarity Metrics\n                                </Typography>\n                                \n                                {/* Metrics explanation */}\n                                <Box sx={{ mb: 3, p: 2, bgcolor: 'background.paper', borderRadius: 1, border: '1px solid #eee' }}>\n                                  <Typography variant=\"subtitle2\" gutterBottom>\n                                    Understanding the Metrics:\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Overlap:</strong> Records are matched by DOI (when available) or by title. The total shows unique matching papers.\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Same Rank:</strong> Papers that appear at the same rank position in both source results (e.g., paper appears as #3 in both sources).\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Jaccard Similarity:</strong> Measures overlap regardless of ranking - number of shared records divided by total unique records from both sources.\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    <strong>Rank-Biased Overlap:</strong> Measures similarity considering the ranking of results, giving more weight to matches at higher positions.\n                                  </Typography>\n                                </Box>\n                                \n                                <TableContainer>\n                                  <Table size=\"small\">\n                                    <TableHead>\n                                      <TableRow>\n                                        <TableCell>Sources</TableCell>\n                                        <TableCell align=\"center\">Total Overlap</TableCell>\n                                        <TableCell align=\"center\">Breakdown</TableCell>\n                                        <TableCell align=\"center\">Same Rank</TableCell>\n                                        <TableCell align=\"right\">\n                                          <Tooltip title={getMetricDescription('jaccard')}>\n                                            <Typography variant=\"body2\" display=\"inline\" sx={{ cursor: 'help', textDecoration: 'underline', textDecorationStyle: 'dotted' }}>\n                                              Jaccard Similarity\n                                            </Typography>\n                                          </Tooltip>\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                          <Tooltip title={getMetricDescription('rankBiased')}>\n                                            <Typography variant=\"body2\" display=\"inline\" sx={{ cursor: 'help', textDecoration: 'underline', textDecorationStyle: 'dotted' }}>\n                                              Rank-Biased Overlap\n                                            </Typography>\n                                          </Tooltip>\n                                        </TableCell>\n                                      </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                      {Object.entries(results.comparison.overlap).map(([key, stats]) => {\n                                        const [source1, source2] = key.split('_vs_');\n                                        const sourceNames = [formatSourceName(source1), formatSourceName(source2)];\n                                        const comparisonLabel = `${sourceNames[0]} vs ${sourceNames[1]}`;\n                                        \n                                        // Calculate metrics\n                                        const jaccardValue = results.comparison.similarity?.jaccard?.[key];\n                                        const rankBiasedValue = results.comparison.similarity?.rankBiased?.[key];\n                                        \n                                        const doiMatches = stats.matching_dois?.length || 0;\n                                        const titleMatches = stats.all_matching_titles?.length || 0;\n                                        const sameRankCount = stats.same_rank_count || 0;\n                                        \n                                        return (\n                                          <TableRow key={key}>\n                                            <TableCell>{comparisonLabel}</TableCell>\n                                            <TableCell align=\"center\">\n                                              <Chip \n                                                label={stats.overlap}\n                                                size=\"small\" \n                                                color=\"success\"\n                                                sx={{ fontWeight: 'bold' }}\n                                              />\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                              <Typography variant=\"caption\">\n                                                {doiMatches} by DOI, {titleMatches} by title\n                                              </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                              <Tooltip title=\"Papers that appear at the same rank position in both sources\">\n                                                <Chip \n                                                  label={sameRankCount}\n                                                  size=\"small\" \n                                                  color=\"info\"\n                                                  sx={{ fontWeight: 'bold' }}\n                                                />\n                                              </Tooltip>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                              <strong>{jaccardValue !== undefined ? jaccardValue.toFixed(4) : '0.0000'}</strong>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                              <strong>{rankBiasedValue !== undefined ? rankBiasedValue.toFixed(4) : '0.0000'}</strong>\n                                            </TableCell>\n                                          </TableRow>\n                                        );\n                                      })}\n                                    </TableBody>\n                                  </Table>\n                                </TableContainer>\n                              </Box>\n                            )}\n                          </Box>\n                        )}\n                        \n                        {/* Results by Source Tab */}\n                        {resultTab === 1 && (\n                          <Box>\n                            <Typography variant=\"h6\" gutterBottom>\n                              Results by Source\n                            </Typography>\n                            {/* Source-specific results... */}\n                            {Object.keys(results.results).length > 0 && (\n                              <Box>\n                                <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                  <Typography variant=\"subtitle1\">\n                                    Showing results for: <strong>{results.query}</strong>\n                                  </Typography>\n                                  <TextField\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    placeholder=\"Filter results...\"\n                                    value={filterText}\n                                    onChange={(e) => setFilterText(e.target.value)}\n                                    sx={{ width: 250 }}\n                                  />\n                                </Box>\n                                \n                                {/* Side by Side Grid Layout */}\n                                <Grid container spacing={2}>\n                                  {Object.keys(results.results).map(source => {\n                                    const sourceResults = results.results[source];\n                                    const filteredResults = filterText\n                                      ? sourceResults.filter(result => \n                                          result.title.toLowerCase().includes(filterText.toLowerCase()) ||\n                                          (result.abstract && result.abstract.toLowerCase().includes(filterText.toLowerCase())) ||\n                                          (result.authors && result.authors.some(author => \n                                            author && author.toLowerCase().includes(filterText.toLowerCase())\n                                          ))\n                                        )\n                                      : sourceResults;\n                                      \n                                    return (\n                                      <Grid item xs={12} sm={6} md={4} lg={3} key={source}>\n                                        <Paper \n                                          elevation={3} \n                                          sx={{ \n                                            height: { xs: 400, sm: 500, md: 550, lg: 600 }, \n                                            display: 'flex', \n                                            flexDirection: 'column',\n                                            overflow: 'hidden'\n                                          }}\n                                        >\n                                          <Box sx={{ \n                                            p: 1, \n                                            bgcolor: \n                                              source === 'ads' ? 'primary.main' :\n                                              source === 'scholar' ? 'error.main' :\n                                              source === 'semanticScholar' ? 'warning.main' : 'success.main',\n                                            color: 'white',\n                                            borderTopLeftRadius: 4,\n                                            borderTopRightRadius: 4,\n                                            display: 'flex',\n                                            justifyContent: 'space-between',\n                                            alignItems: 'center',\n                                            position: 'sticky',\n                                            top: 0,\n                                            zIndex: 1\n                                          }}>\n                                            <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\n                                              {formatSourceName(source)}\n                                            </Typography>\n                                            <Chip \n                                              label={`${filteredResults.length} results`}\n                                              size=\"small\"\n                                              sx={{ \n                                                bgcolor: 'rgba(255,255,255,0.2)', \n                                                color: 'white',\n                                                '& .MuiChip-label': { fontWeight: 'bold' }\n                                              }} \n                                            />\n                                          </Box>\n                                          \n                                          <Box sx={{ \n                                            flexGrow: 1, \n                                            overflow: 'auto', \n                                            maxHeight: { \n                                              xs: 'calc(400px - 48px)', \n                                              sm: 'calc(500px - 48px)', \n                                              md: 'calc(550px - 48px)', \n                                              lg: 'calc(600px - 48px)' \n                                            }\n                                          }}>\n                                            <List disablePadding>\n                                              {filteredResults.map((result, idx) => (\n                                                <Tooltip\n                                                  key={idx}\n                                                  title={\n                                                    <Box sx={{ p: 1, maxWidth: 400 }}>\n                                                      {/* Title */}\n                                                      <Typography variant=\"subtitle2\" gutterBottom>\n                                                        {result.title}\n                                                      </Typography>\n                                                      \n                                                      <Divider sx={{ my: 1 }} />\n                                                      \n                                                      {/* Key metadata in a single line */}\n                                                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 1 }}>\n                                                        {result.year && (\n                                                          <Chip \n                                                            size=\"small\" \n                                                            label={`Year: ${result.year}`} \n                                                            sx={{ fontSize: '0.7rem' }}\n                                                          />\n                                                        )}\n                                                        {(result.citation_count !== undefined && result.citation_count !== null) && (\n                                                          <Chip \n                                                            size=\"small\" \n                                                            label={`Citations: ${result.citation_count}`} \n                                                            sx={{ fontSize: '0.7rem' }}\n                                                          />\n                                                        )}\n                                                        {result.doi && (\n                                                          <Chip \n                                                            size=\"small\" \n                                                            label={`DOI: ${result.doi.substring(0, 15)}...`} \n                                                            sx={{ fontSize: '0.7rem' }}\n                                                          />\n                                                        )}\n                                                      </Box>\n                                                      \n                                                      {/* Authors - condensed */}\n                                                      {result.authors && result.authors.length > 0 && (\n                                                        <Typography variant=\"caption\" sx={{ display: 'block', mb: 1 }}>\n                                                          <strong>Authors:</strong> {Array.isArray(result.authors) \n                                                            ? result.authors.slice(0, 3).join(', ') + (result.authors.length > 3 ? ', et al.' : '')\n                                                            : result.authors}\n                                                        </Typography>\n                                                      )}\n                                                      \n                                                      {/* Abstract snippet */}\n                                                      {result.abstract && (\n                                                        <Typography variant=\"caption\" sx={{ display: 'block' }}>\n                                                          <strong>Abstract:</strong> {result.abstract.length > 300 \n                                                            ? `${result.abstract.substring(0, 300)}...` \n                                                            : result.abstract}\n                                                        </Typography>\n                                                      )}\n                                                    </Box>\n                                                  }\n                                                  arrow\n                                                  placement=\"right\"\n                                                  componentsProps={{\n                                                    tooltip: {\n                                                      sx: { bgcolor: 'background.paper', color: 'text.primary', boxShadow: 3 }\n                                                    }\n                                                  }}\n                                                >\n                                                  <ListItem \n                                                    divider \n                                                    sx={{ \n                                                      '&:hover': { bgcolor: 'action.hover' },\n                                                      px: 2, \n                                                      py: 1,\n                                                      minHeight: 80,\n                                                      maxHeight: 110\n                                                    }}\n                                                    secondaryAction={\n                                                      result.url && (\n                                                        <IconButton \n                                                          size=\"small\" \n                                                          href={result.url} \n                                                          target=\"_blank\" \n                                                          aria-label=\"View source\"\n                                                          sx={{ ml: 1 }}\n                                                        >\n                                                          <LaunchIcon fontSize=\"small\" />\n                                                        </IconButton>\n                                                      )\n                                                    }\n                                                  >\n                                                    <ListItemText\n                                                      disableTypography\n                                                      primary={\n                                                        <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n                                                          <Chip \n                                                            label={result.rank} \n                                                            size=\"small\" \n                                                            sx={{ \n                                                              mr: 1, \n                                                              minWidth: 28,\n                                                              height: 20,\n                                                              bgcolor: \n                                                                source === 'ads' ? 'primary.light' :\n                                                                source === 'scholar' ? 'error.light' :\n                                                                source === 'semanticScholar' ? 'warning.light' : 'success.light',\n                                                            }} \n                                                          />\n                                                          <Typography \n                                                            variant=\"body2\" \n                                                            sx={{ \n                                                              fontWeight: 'medium',\n                                                              display: '-webkit-box',\n                                                              WebkitLineClamp: 2,\n                                                              WebkitBoxOrient: 'vertical',\n                                                              overflow: 'hidden',\n                                                              lineHeight: 1.2,\n                                                              mb: 0.5\n                                                            }}\n                                                          >\n                                                            {result.title}\n                                                          </Typography>\n                                                        </Box>\n                                                      }\n                                                      secondary={\n                                                        <Box sx={{ mt: 0.5 }}>\n                                                          {/* Authors + Year */}\n                                                          <Typography \n                                                            variant=\"caption\" \n                                                            sx={{ \n                                                              display: 'block',\n                                                              color: 'text.secondary',\n                                                              whiteSpace: 'nowrap',\n                                                              overflow: 'hidden',\n                                                              textOverflow: 'ellipsis'\n                                                            }}\n                                                          >\n                                                            {Array.isArray(result.authors) \n                                                              ? result.authors.slice(0, 2).join(', ') + (result.authors.length > 2 ? ', et al.' : '') \n                                                              : result.authors}\n                                                            {result.year ? ` (${result.year})` : ''}\n                                                          </Typography>\n                                                          \n                                                          {/* Abstract preview */}\n                                                          {result.abstract && (\n                                                            <Typography \n                                                              variant=\"caption\" \n                                                              sx={{ \n                                                                display: '-webkit-box',\n                                                                WebkitLineClamp: 1,\n                                                                WebkitBoxOrient: 'vertical',\n                                                                overflow: 'hidden',\n                                                                color: 'text.secondary',\n                                                                lineHeight: 1.2,\n                                                                mt: 0.5\n                                                              }}\n                                                            >\n                                                              {result.abstract}\n                                                            </Typography>\n                                                          )}\n                                                          \n                                                          {/* Citations as a small indicator in bottom right */}\n                                                          {(result.citation_count !== undefined && result.citation_count !== null) && (\n                                                            <Box sx={{ \n                                                              display: 'flex', \n                                                              justifyContent: 'flex-end',\n                                                              mt: 0.5  \n                                                            }}>\n                                                              <Chip\n                                                                size=\"small\"\n                                                                label={`Cited: ${result.citation_count}`}\n                                                                sx={{ \n                                                                  height: 16,\n                                                                  fontSize: '0.6rem',\n                                                                  '& .MuiChip-label': { px: 0.8 }\n                                                                }}\n                                                              />\n                                                            </Box>\n                                                          )}\n                                                        </Box>\n                                                      }\n                                                    />\n                                                  </ListItem>\n                                                </Tooltip>\n                                              ))}\n                                            </List>\n                                          </Box>\n                                        </Paper>\n                                      </Grid>\n                                    );\n                                  })}\n                                </Grid>\n                              </Box>\n                            )}\n                          </Box>\n                        )}\n\n                        {/* Visualization Tab */}\n                        {resultTab === 2 && (\n                          <Box>\n                            <Typography variant=\"h6\" gutterBottom>\n                              Visualization\n                            </Typography>\n                            <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                              Visual representation of search result similarity across different sources.\n                            </Typography>\n                            \n                            {results.comparison && results.comparison.similarity && (\n                              <Box>\n                                <Typography variant=\"h6\" gutterBottom>\n                                  Similarity Metrics Visualization\n                                </Typography>\n                                \n                                <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n                                  <Typography variant=\"subtitle2\" gutterBottom>\n                                    About this visualization:\n                                  </Typography>\n                                  <Typography variant=\"body2\">\n                                    These bar charts show the Jaccard similarity and Rank-Biased Overlap (RBO) metrics between ADS/SciX and other search engines.\n                                    Higher values indicate greater similarity between result sets.\n                                  </Typography>\n                                  <Alert severity=\"info\" sx={{ mt: 1 }}>\n                                    <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\n                                      Current Query: <strong>{results.query}</strong>\n                                    </Typography>\n                                    <Typography variant=\"body2\" sx={{ mt: 0.5, fontStyle: 'italic' }}>\n                                      In future versions, multiple queries will be displayed with different patterns to identify trends in search engine behavior across query types.\n                                    </Typography>\n                                  </Alert>\n                                </Paper>\n\n                                {/* Jaccard Similarity Bar Chart */}\n                                <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n                                  <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n                                    Jaccard Similarity\n                                  </Typography>\n                                  <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                                    Jaccard similarity measures the proportion of shared results regardless of ranking position.\n                                  </Typography>\n                                  \n                                  <Box sx={{ height: 300, position: 'relative', border: '1px solid #eee', borderRadius: 1, p: 2, mb: 2 }}>\n                                    {/* Y-axis */}\n                                    <Box sx={{ \n                                      position: 'absolute', \n                                      left: 0, \n                                      top: 0, \n                                      bottom: 0, \n                                      width: 50, \n                                      display: 'flex', \n                                      flexDirection: 'column', \n                                      justifyContent: 'space-between', \n                                      alignItems: 'flex-end', \n                                      pr: 1,\n                                      borderRight: '1px solid #eee' \n                                    }}>\n                                      <Typography variant=\"caption\">1.0</Typography>\n                                      <Typography variant=\"caption\">0.8</Typography>\n                                      <Typography variant=\"caption\">0.6</Typography>\n                                      <Typography variant=\"caption\">0.4</Typography>\n                                      <Typography variant=\"caption\">0.2</Typography>\n                                      <Typography variant=\"caption\">0.0</Typography>\n                                    </Box>\n                                    \n                                    {/* X-axis labels */}\n                                    <Box sx={{ position: 'absolute', left: 50, right: 0, bottom: 0, height: 20, display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n                                      <Typography variant=\"caption\">ADS vs Google Scholar</Typography>\n                                      <Typography variant=\"caption\">ADS vs Semantic Scholar</Typography>\n                                      <Typography variant=\"caption\">ADS vs Web of Science</Typography>\n                                    </Box>\n                                    \n                                    {/* Bar Chart area */}\n                                    <Box sx={{ position: 'absolute', left: 50, right: 0, top: 0, bottom: 20, display: 'flex', alignItems: 'flex-end', justifyContent: 'space-around' }}>\n                                      {/* Process data for bar chart */}\n                                      {(() => {\n                                        // Define the comparison pairs we want to show\n                                        const comparisonPairs = [\n                                          { key: 'ads_vs_scholar', label: 'ADS vs Google Scholar', color: 'error.main' },\n                                          { key: 'ads_vs_semanticScholar', label: 'ADS vs Semantic Scholar', color: 'warning.main' },\n                                          { key: 'ads_vs_webOfScience', label: 'ADS vs Web of Science', color: 'success.main' }\n                                        ];\n                                        \n                                        return comparisonPairs.map(pair => {\n                                          // Handle both directions (ads_vs_x or x_vs_ads)\n                                          const alt1 = pair.key;\n                                          const alt2 = pair.key.split('_vs_').reverse().join('_vs_');\n                                          \n                                          // Get value from either direction\n                                          const value = results.comparison.similarity.jaccard?.[alt1] || \n                                                     results.comparison.similarity.jaccard?.[alt2] || \n                                                     0;\n                                          \n                                          // Calculate bar height based on value\n                                          const barHeight = `${value * 100}%`;\n                                          \n                                          return (\n                                            <Tooltip\n                                              key={pair.key}\n                                              title={`${pair.label}: ${value.toFixed(4)} (Query: \"${results.query}\")`}\n                                              placement=\"top\"\n                                            >\n                                              <Box\n                                                sx={{\n                                                  width: '20%',\n                                                  height: barHeight,\n                                                  bgcolor: pair.color,\n                                                  borderRadius: '4px 4px 0 0',\n                                                  transition: 'transform 0.2s',\n                                                  cursor: 'pointer',\n                                                  '&:hover': {\n                                                    transform: 'scaleY(1.05)',\n                                                    filter: 'brightness(1.1)'\n                                                  }\n                                                }}\n                                              />\n                                            </Tooltip>\n                                          );\n                                        });\n                                      })()}\n                                    </Box>\n                                  </Box>\n                                  \n                                  {/* Legend */}\n                                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center', mt: 2 }}>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'error.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Google Scholar</Typography>\n                                    </Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'warning.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Semantic Scholar</Typography>\n                                    </Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'success.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Web of Science</Typography>\n                                    </Box>\n                                  </Box>\n                                </Paper>\n                                \n                                {/* Rank-Biased Overlap Bar Chart */}\n                                <Paper elevation={2} sx={{ p: 2 }}>\n                                  <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n                                    Rank-Biased Overlap\n                                  </Typography>\n                                  <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                                    Rank-Biased Overlap considers the order of results, giving higher weight to matches at the top of result lists.\n                                  </Typography>\n                                  \n                                  <Box sx={{ height: 300, position: 'relative', border: '1px solid #eee', borderRadius: 1, p: 2, mb: 2 }}>\n                                    {/* Y-axis */}\n                                    <Box sx={{ \n                                      position: 'absolute', \n                                      left: 0, \n                                      top: 0, \n                                      bottom: 0, \n                                      width: 50, \n                                      display: 'flex', \n                                      flexDirection: 'column', \n                                      justifyContent: 'space-between', \n                                      alignItems: 'flex-end', \n                                      pr: 1,\n                                      borderRight: '1px solid #eee' \n                                    }}>\n                                      <Typography variant=\"caption\">1.0</Typography>\n                                      <Typography variant=\"caption\">0.8</Typography>\n                                      <Typography variant=\"caption\">0.6</Typography>\n                                      <Typography variant=\"caption\">0.4</Typography>\n                                      <Typography variant=\"caption\">0.2</Typography>\n                                      <Typography variant=\"caption\">0.0</Typography>\n                                    </Box>\n                                    \n                                    {/* X-axis labels */}\n                                    <Box sx={{ position: 'absolute', left: 50, right: 0, bottom: 0, height: 20, display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n                                      <Typography variant=\"caption\">ADS vs Google Scholar</Typography>\n                                      <Typography variant=\"caption\">ADS vs Semantic Scholar</Typography>\n                                      <Typography variant=\"caption\">ADS vs Web of Science</Typography>\n                                    </Box>\n                                    \n                                    {/* Grid lines */}\n                                    <Box sx={{ position: 'absolute', left: 50, right: 0, top: 0, bottom: 20, display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                                      {[0, 0.2, 0.4, 0.6, 0.8, 1].map((line) => (\n                                        <Box key={line} sx={{ borderBottom: line < 1 ? '1px dashed #ddd' : 'none', width: '100%', height: 0 }} />\n                                      ))}\n                                    </Box>\n                                    \n                                    {/* Bar Chart area */}\n                                    <Box sx={{ position: 'absolute', left: 50, right: 0, top: 0, bottom: 20, display: 'flex', alignItems: 'flex-end', justifyContent: 'space-around' }}>\n                                      {/* Process data for bar chart */}\n                                      {(() => {\n                                        // Define the comparison pairs we want to show\n                                        const comparisonPairs = [\n                                          { key: 'ads_vs_scholar', label: 'ADS vs Google Scholar', color: 'error.main' },\n                                          { key: 'ads_vs_semanticScholar', label: 'ADS vs Semantic Scholar', color: 'warning.main' },\n                                          { key: 'ads_vs_webOfScience', label: 'ADS vs Web of Science', color: 'success.main' }\n                                        ];\n                                        \n                                        return comparisonPairs.map(pair => {\n                                          // Handle both directions (ads_vs_x or x_vs_ads)\n                                          const alt1 = pair.key;\n                                          const alt2 = pair.key.split('_vs_').reverse().join('_vs_');\n                                          \n                                          // Get value from either direction\n                                          const value = results.comparison.similarity.rankBiased?.[alt1] || \n                                                       results.comparison.similarity.rankBiased?.[alt2] || \n                                                       0;\n                                          \n                                          // Calculate bar height based on value\n                                          const barHeight = `${value * 100}%`;\n                                          \n                                          return (\n                                            <Tooltip\n                                              key={pair.key}\n                                              title={`${pair.label}: ${value.toFixed(4)} (Query: \"${results.query}\")`}\n                                              placement=\"top\"\n                                            >\n                                              <Box\n                                                sx={{\n                                                  width: '20%',\n                                                  height: barHeight,\n                                                  bgcolor: pair.color,\n                                                  borderRadius: '4px 4px 0 0',\n                                                  transition: 'transform 0.2s',\n                                                  cursor: 'pointer',\n                                                  '&:hover': {\n                                                    transform: 'scaleY(1.05)',\n                                                    filter: 'brightness(1.1)'\n                                                  }\n                                                }}\n                                              />\n                                            </Tooltip>\n                                          );\n                                        });\n                                      })()}\n                                    </Box>\n                                  </Box>\n                                  \n                                  {/* Legend */}\n                                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center', mt: 2 }}>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'error.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Google Scholar</Typography>\n                                    </Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'warning.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Semantic Scholar</Typography>\n                                    </Box>\n                                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                      <Box sx={{ width: 16, height: 10, bgcolor: 'success.main', mr: 1 }} />\n                                      <Typography variant=\"caption\">ADS vs Web of Science</Typography>\n                                    </Box>\n                                  </Box>\n                                </Paper>\n                              </Box>\n                            )}\n                            \n                            {(!results.comparison || !results.comparison.similarity) && (\n                              <Box sx={{ height: 300, display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\n                                <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                                  No data to visualize\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\">\n                                  Run a search across multiple sources to see similarity metrics visualized here.\n                                </Typography>\n                              </Box>\n                            )}\n                          </Box>\n                        )}\n                      </Box>\n                    </Paper>\n                  </Box>\n                )}\n                {Object.keys(results.results).length === 0 && (\n                  <Alert severity=\"info\">No results found for the given query and sources.</Alert>\n                )}\n              </Box>\n            )}\n          </Box>\n        )}\n\n        {/* Experiments Tab */}\n        {mainTab === 1 && (\n          <Box my={4}>\n            <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n              {renderExperimentTabs()}\n            </Paper>\n          </Box>\n        )}\n\n        {/* Debug Tab */}\n        {mainTab === 2 && (\n          <Box my={4}>\n            <Paper elevation={3} sx={{ p: 3, mb: 4 }}>\n              <Tabs\n                value={debugTab}\n                onChange={handleDebugTabChange}\n                variant=\"fullWidth\"\n                textColor=\"primary\"\n                indicatorColor=\"primary\"\n              >\n                <Tab label=\"Environment\" id=\"debug-tab-0\" />\n                <Tab label=\"Sources\" id=\"debug-tab-1\" />\n                <Tab label=\"Test Search\" id=\"debug-tab-2\" />\n              </Tabs>\n\n              {/* Environment Info */}\n              {debugTab === 0 && (\n                <Box mt={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async () => {\n                      setLoading(true);\n                      try {\n                        const response = await debugService.getEnvironmentInfo();\n                        if (response.error) {\n                          setError(response.message);\n                        } else {\n                          setEnvironmentInfo(response);\n                        }\n                      } catch (err) {\n                        setError(`Failed to get environment info: ${err.message}`);\n                      } finally {\n                        setLoading(false);\n                      }\n                    }}\n                    disabled={loading}\n                    sx={{ mb: 2 }}\n                  >\n                    {loading ? <CircularProgress size={24} /> : \"Refresh Environment Info\"}\n                  </Button>\n\n                  {environmentInfo && (\n                    <Paper elevation={2} sx={{ p: 2 }}>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Environment Information\n                      </Typography>\n                      <Grid container spacing={2}>\n                        {/* System Info */}\n                        <Grid item xs={12} md={6}>\n                          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                            <Typography variant=\"subtitle1\" gutterBottom>System</Typography>\n                            <TableContainer>\n                              <Table size=\"small\">\n                                <TableBody>\n                                  <TableRow>\n                                    <TableCell><strong>Python Version</strong></TableCell>\n                                    <TableCell>{environmentInfo.python_version || 'N/A'}</TableCell>\n                                  </TableRow>\n                                  <TableRow>\n                                    <TableCell><strong>OS Platform</strong></TableCell>\n                                    <TableCell>{environmentInfo.platform || 'N/A'}</TableCell>\n                                  </TableRow>\n                                  <TableRow>\n                                    <TableCell><strong>Environment</strong></TableCell>\n                                    <TableCell>{environmentInfo.environment || 'development'}</TableCell>\n                                  </TableRow>\n                                  <TableRow>\n                                    <TableCell><strong>Debug Mode</strong></TableCell>\n                                    <TableCell>\n                                      <Chip \n                                        label={environmentInfo.debug ? 'Enabled' : 'Disabled'} \n                                        color={environmentInfo.debug ? 'warning' : 'default'}\n                                        size=\"small\"\n                                      />\n                                    </TableCell>\n                                  </TableRow>\n                                </TableBody>\n                              </Table>\n                            </TableContainer>\n                          </Paper>\n                        </Grid>\n                        \n                        {/* API Keys */}\n                        <Grid item xs={12} md={6}>\n                          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                            <Typography variant=\"subtitle1\" gutterBottom>API Configuration</Typography>\n                            <TableContainer>\n                              <Table size=\"small\">\n                                <TableBody>\n                                  {Object.entries(environmentInfo.api_keys || {}).map(([key, value]) => (\n                                    <TableRow key={key}>\n                                      <TableCell><strong>{key}</strong></TableCell>\n                                      <TableCell>\n                                        <Chip \n                                          label={value ? 'Configured' : 'Missing'} \n                                          color={value ? 'success' : 'error'}\n                                          size=\"small\"\n                                        />\n                                      </TableCell>\n                                    </TableRow>\n                                  ))}\n                                </TableBody>\n                              </Table>\n                            </TableContainer>\n                          </Paper>\n                        </Grid>\n                        \n                        {/* Dependencies */}\n                        {environmentInfo.dependencies && Object.keys(environmentInfo.dependencies).length > 0 && (\n                          <Grid item xs={12}>\n                            <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                              <Typography variant=\"subtitle1\" gutterBottom>Dependencies</Typography>\n                              <TableContainer sx={{ maxHeight: 300 }}>\n                                <Table size=\"small\" stickyHeader>\n                                  <TableHead>\n                                    <TableRow>\n                                      <TableCell>Package</TableCell>\n                                      <TableCell>Version</TableCell>\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    {Object.entries(environmentInfo.dependencies).map(([pkg, version]) => (\n                                      <TableRow key={pkg}>\n                                        <TableCell>{pkg}</TableCell>\n                                        <TableCell>{version}</TableCell>\n                                      </TableRow>\n                                    ))}\n                                  </TableBody>\n                                </Table>\n                              </TableContainer>\n                            </Paper>\n                          </Grid>\n                        )}\n                        \n                        {/* Raw Data (Collapsed) */}\n                        <Grid item xs={12}>\n                          <Accordion>\n                            <AccordionSummary expandIcon={<InfoIcon />}>\n                              <Typography>View Raw Environment Data</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                              <pre style={{ maxHeight: '300px', overflow: 'auto' }}>\n                                {JSON.stringify(environmentInfo, null, 2)}\n                              </pre>\n                            </AccordionDetails>\n                          </Accordion>\n                        </Grid>\n                      </Grid>\n                    </Paper>\n                  )}\n                </Box>\n              )}\n\n              {/* Sources Info */}\n              {debugTab === 1 && (\n                <Box mt={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleListSources}\n                    disabled={loading}\n                    sx={{ mb: 2, mr: 2 }}\n                  >\n                    {loading ? <CircularProgress size={24} /> : \"List Sources\"}\n                  </Button>\n\n                  {/* Source Info */}\n                  {sourcesList && (\n                    <Grid item xs={12}>\n                      <Paper elevation={2} sx={{ p: 2 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                          Available Search Sources\n                        </Typography>\n                        <List>\n                          {sourcesList.map(source => (\n                            <ListItem key={source.id}>\n                              <ListItemAvatar>\n                                <Avatar sx={{ \n                                  bgcolor: \n                                    source.id === 'ads' ? 'primary.main' :\n                                    source.id === 'scholar' ? 'error.main' :\n                                    source.id === 'semanticScholar' ? 'warning.main' : 'success.main' \n                                }}>\n                                  <SearchIcon />\n                                </Avatar>\n                              </ListItemAvatar>\n                              <ListItemText \n                                primary={formatSourceName(source.id)} \n                                secondary={`Status: ${source.status}, Max Results: ${source.max_results}`} \n                              />\n                              <ListItemSecondaryAction>\n                                <Button \n                                  size=\"small\" \n                                  onClick={() => handlePingSource(source.id)}\n                                  startIcon={<NetworkCheckIcon />}\n                                >\n                                  Ping\n                                </Button>\n                                <Button \n                                  size=\"small\" \n                                  onClick={() => handleTestSearch(source.id)}\n                                  disabled={!query.trim()}\n                                  startIcon={<CheckIcon />}\n                                  sx={{ ml: 1 }}\n                                >\n                                  Test Search\n                                </Button>\n                              </ListItemSecondaryAction>\n                            </ListItem>\n                          ))}\n                        </List>\n                      </Paper>\n                    </Grid>\n                  )}\n\n                  {/* Ping Results */}\n                  {Object.keys(pingResults).length > 0 && (\n                    <Grid item xs={12}>\n                      <Paper elevation={2} sx={{ p: 2 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                          Ping Results\n                        </Typography>\n                        <List>\n                          {Object.entries(pingResults).map(([sourceId, result]) => (\n                            <ListItem key={sourceId}>\n                              <ListItemAvatar>\n                                <Avatar sx={{ \n                                  bgcolor: \n                                    sourceId === 'ads' ? 'primary.main' :\n                                    sourceId === 'scholar' ? 'error.main' :\n                                    sourceId === 'semanticScholar' ? 'warning.main' : 'success.main' \n                                }}>\n                                  <SearchIcon />\n                                </Avatar>\n                              </ListItemAvatar>\n                              <ListItemText \n                                primary={formatSourceName(sourceId)} \n                                secondary={\n                                  result.loading ? 'Pinging...' :\n                                  result.error ? `Error: ${result.error}` :\n                                  `Response time: ${result.response_time_ms}ms, Status: ${result.status}`\n                                } \n                              />\n                            </ListItem>\n                          ))}\n                        </List>\n                      </Paper>\n                    </Grid>\n                  )}\n                </Box>\n              )}\n\n              {/* Test Search */}\n              {debugTab === 2 && (\n                <Box mt={2}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Test Search Query\"\n                        variant=\"outlined\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                        placeholder=\"Enter query for testing\"\n                      />\n                    </Grid>\n                    \n                    <Grid item xs={12}>\n                      <Typography variant=\"subtitle1\">Select Source to Test</Typography>\n                      <Box display=\"flex\" flexWrap=\"wrap\" gap={2} mt={1}>\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => handleTestSearch('ads')}\n                          disabled={loading}\n                        >\n                          Test ADS/SciX\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => handleTestSearch('scholar')}\n                          disabled={loading}\n                        >\n                          Test Google Scholar\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => handleTestSearch('semanticScholar')}\n                          disabled={loading}\n                        >\n                          Test Semantic Scholar\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => handleTestSearch('webOfScience')}\n                          disabled={loading}\n                        >\n                          Test Web of Science\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n\n                  {/* Test Search Results */}\n                  {testSearchResults && (\n                    <Box mt={4}>\n                      <Typography variant=\"h5\" gutterBottom>\n                        Test Search Results for {testSearchResults.source}\n                      </Typography>\n                      <Paper elevation={2} sx={{ p: 2 }}>\n                        <Typography variant=\"subtitle1\">\n                          Query: {testSearchResults.query} | \n                          Results: {testSearchResults.count} | \n                          Time: {testSearchResults.response_time_ms}ms\n                        </Typography>\n                        <Divider sx={{ my: 2 }} />\n                        <pre>{JSON.stringify(testSearchResults.results, null, 2)}</pre>\n                      </Paper>\n                    </Box>\n                  )}\n                </Box>\n              )}\n            </Paper>\n          </Box>\n        )}\n\n        {/* About Tab */}\n        {mainTab === 3 && (\n          <Box my={4}>\n            <Paper elevation={3} sx={{ p: 3 }}>\n              <Typography variant=\"h5\" gutterBottom>\n                About Search Comparisons\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                This application allows you to compare search results across multiple academic search engines,\n                including ADS/SciX, Google Scholar, Semantic Scholar, and Web of Science.\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                Features include:\n              </Typography>\n              <ul>\n                <li>Compare results across multiple sources</li>\n                <li>Analyze similarity between result sets</li>\n                <li>Experiment with boosting factors to improve rankings</li>\n                <li>Perform A/B testing of different search algorithms</li>\n                <li>Debug tools for API testing and diagnostics</li>\n              </ul>\n              <Typography variant=\"body1\" paragraph>\n                Version: {APP_VERSION}\n              </Typography>\n              <Typography variant=\"body1\">\n                Backend API: {API_URL}\n              </Typography>\n              {environmentInfo && environmentInfo.environment && (\n                <Typography variant=\"body1\">\n                  Environment: {environmentInfo.environment}\n                </Typography>\n              )}\n            </Paper>\n          </Box>\n        )}\n      </Container>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}