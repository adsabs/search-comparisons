{"ast":null,"code":"/**\n * Quepid Evaluation component for search-comparisons application.\n * \n * This component provides UI for evaluating search results against\n * Quepid judgments, calculating metrics like nDCG@10.\n */import React,{useState,useEffect}from'react';import{experimentService}from'../services/api';import{Container,Typography,TextField,Button,Box,Card,CardContent,Chip,FormGroup,FormControlLabel,Checkbox,Grid,List,ListItem,ListItemText,Alert,CircularProgress,Accordion,AccordionSummary,AccordionDetails,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Divider}from'@mui/material';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';// Available search sources\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const AVAILABLE_SOURCES=[{id:'ads',name:'ADS/SciX'},{id:'scholar',name:'Google Scholar'},{id:'semantic_scholar',name:'Semantic Scholar'},{id:'web_of_science',name:'Web of Science'}];const QuepidEvaluation=()=>{// State for search parameters\nconst[query,setQuery]=useState('');const[caseId,setCaseId]=useState('');const[maxResults,setMaxResults]=useState(20);const[selectedSources,setSelectedSources]=useState(['ads','scholar','semantic_scholar']);// State for UI\nconst[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);const[results,setResults]=useState(null);// Function to toggle a search source\nconst toggleSource=sourceId=>{if(selectedSources.includes(sourceId)){setSelectedSources(selectedSources.filter(id=>id!==sourceId));}else{setSelectedSources([...selectedSources,sourceId]);}};// Function to evaluate search results with Quepid\nconst handleEvaluate=async()=>{// Clear previous state\nsetError(null);setSuccessMessage(null);setResults(null);// Validate inputs\nif(!query.trim()){setError('Please enter a search query');return;}if(!caseId||isNaN(parseInt(caseId))){setError('Please enter a valid case ID');return;}if(selectedSources.length===0){setError('Please select at least one search source');return;}// Prepare the evaluation request\nconst evaluationRequest={query:query.trim(),sources:selectedSources,case_id:parseInt(caseId),max_results:maxResults};// Call the API\nsetIsLoading(true);try{const response=await experimentService.evaluateWithQuepid(evaluationRequest);if(response.error){setError(response.message||'Error evaluating search results');}else{setResults(response);setSuccessMessage('Evaluation completed successfully');}}catch(error){setError('Error connecting to the server');console.error('Quepid evaluation error:',error);}finally{setIsLoading(false);}};// Function to render the evaluation results\nconst renderResults=()=>{if(!results)return null;return/*#__PURE__*/_jsxs(Box,{mt:4,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",gutterBottom:true,children:[\"Evaluation Results for \\\"\",results.query,\"\\\"\"]}),/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Chip,{label:`Case: ${results.case_name}`,color:\"primary\",variant:\"outlined\",sx:{marginRight:1}}),/*#__PURE__*/_jsx(Chip,{label:`Total judged: ${results.total_judged}`,color:\"primary\",variant:\"outlined\",sx:{marginRight:1}}),/*#__PURE__*/_jsx(Chip,{label:`Total relevant: ${results.total_relevant}`,color:\"primary\",variant:\"outlined\"})]}),results.available_queries&&results.available_queries.length>0&&/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Note: The exact query was not found. Here are some available queries in this case:\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mt:1},children:results.available_queries.map((q,i)=>/*#__PURE__*/_jsx(Chip,{label:q,size:\"small\",onClick:()=>setQuery(q),color:\"primary\"},i))})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Source\"}),/*#__PURE__*/_jsx(TableCell,{children:\"nDCG@10\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Precision@10\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Recall\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Judged/Relevant\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:results.source_results.map(sourceResult=>{// Find metrics\nconst ndcg10=sourceResult.metrics.find(m=>m.name==='ndcg@10');const precision10=sourceResult.metrics.find(m=>m.name==='p@10');const recall=sourceResult.metrics.find(m=>m.name==='recall');return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:getSourceName(sourceResult.source)}),/*#__PURE__*/_jsx(TableCell,{children:ndcg10?ndcg10.value.toFixed(3):'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:precision10?precision10.value.toFixed(3):'N/A'}),/*#__PURE__*/_jsx(TableCell,{children:recall?recall.value.toFixed(3):'N/A'}),/*#__PURE__*/_jsxs(TableCell,{children:[sourceResult.judged_retrieved,\"/\",sourceResult.relevant_retrieved,\" of \",sourceResult.results_count]})]},sourceResult.source);})})]})}),/*#__PURE__*/_jsxs(Box,{mt:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Detailed Metrics\"}),results.source_results.map(sourceResult=>/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsx(Typography,{children:getSourceName(sourceResult.source)})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Metric\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Value\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Description\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:sourceResult.metrics.map((metric,idx)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:metric.name}),/*#__PURE__*/_jsx(TableCell,{children:metric.value.toFixed(3)}),/*#__PURE__*/_jsx(TableCell,{children:metric.description})]},idx))})]})})})]},sourceResult.source))]})]});};// Helper function to get source display name\nconst getSourceName=sourceId=>{const source=AVAILABLE_SOURCES.find(s=>s.id===sourceId);return source?source.name:sourceId;};return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",children:/*#__PURE__*/_jsxs(Box,{my:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Quepid Evaluation\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",paragraph:true,children:\"Evaluate search results against Quepid relevance judgments to measure the effectiveness of search algorithms.\"}),/*#__PURE__*/_jsx(Card,{sx:{mb:4},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Evaluation Parameters\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Search Query\",fullWidth:true,margin:\"normal\",value:query,onChange:e=>setQuery(e.target.value),placeholder:\"Enter search query\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Quepid Case ID\",fullWidth:true,margin:\"normal\",value:caseId,onChange:e=>setCaseId(e.target.value),placeholder:\"Enter your Quepid case ID\",type:\"number\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{label:\"Max Results\",fullWidth:true,margin:\"normal\",value:maxResults,onChange:e=>setMaxResults(parseInt(e.target.value)||20),placeholder:\"Maximum number of results\",type:\"number\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Search Sources\"}),/*#__PURE__*/_jsx(FormGroup,{children:AVAILABLE_SOURCES.map(source=>/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:selectedSources.includes(source.id),onChange:()=>toggleSource(source.id)}),label:source.name},source.id))})]})]}),/*#__PURE__*/_jsx(Box,{mt:3,textAlign:\"center\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleEvaluate,disabled:isLoading,size:\"large\",children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Evaluate Search Results'})}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error}),successMessage&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mt:2},children:successMessage})]})}),renderResults()]})});};export default QuepidEvaluation;","map":{"version":3,"names":["React","useState","useEffect","experimentService","Container","Typography","TextField","Button","Box","Card","CardContent","Chip","FormGroup","FormControlLabel","Checkbox","Grid","List","ListItem","ListItemText","Alert","CircularProgress","Accordion","AccordionSummary","AccordionDetails","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Divider","ExpandMoreIcon","jsxs","_jsxs","jsx","_jsx","AVAILABLE_SOURCES","id","name","QuepidEvaluation","query","setQuery","caseId","setCaseId","maxResults","setMaxResults","selectedSources","setSelectedSources","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","results","setResults","toggleSource","sourceId","includes","filter","handleEvaluate","trim","isNaN","parseInt","length","evaluationRequest","sources","case_id","max_results","response","evaluateWithQuepid","message","console","renderResults","mt","children","variant","gutterBottom","mb","label","case_name","color","sx","marginRight","total_judged","total_relevant","available_queries","severity","display","flexWrap","gap","map","q","i","size","onClick","component","source_results","sourceResult","ndcg10","metrics","find","m","precision10","recall","getSourceName","source","value","toFixed","judged_retrieved","relevant_retrieved","results_count","expandIcon","metric","idx","description","s","maxWidth","my","paragraph","container","spacing","item","xs","md","fullWidth","margin","onChange","e","target","placeholder","type","control","checked","textAlign","disabled"],"sources":["/Users/JarmakS/SciX_Projects/SearchTool/search-comparisons/frontend/src/components/QuepidEvaluation.js"],"sourcesContent":["/**\n * Quepid Evaluation component for search-comparisons application.\n * \n * This component provides UI for evaluating search results against\n * Quepid judgments, calculating metrics like nDCG@10.\n */\nimport React, { useState, useEffect } from 'react';\nimport { experimentService } from '../services/api';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Alert,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Divider\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n// Available search sources\nconst AVAILABLE_SOURCES = [\n  { id: 'ads', name: 'ADS/SciX' },\n  { id: 'scholar', name: 'Google Scholar' },\n  { id: 'semantic_scholar', name: 'Semantic Scholar' },\n  { id: 'web_of_science', name: 'Web of Science' }\n];\n\nconst QuepidEvaluation = () => {\n  // State for search parameters\n  const [query, setQuery] = useState('');\n  const [caseId, setCaseId] = useState('');\n  const [maxResults, setMaxResults] = useState(20);\n  const [selectedSources, setSelectedSources] = useState(['ads', 'scholar', 'semantic_scholar']);\n  \n  // State for UI\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [results, setResults] = useState(null);\n  \n  // Function to toggle a search source\n  const toggleSource = (sourceId) => {\n    if (selectedSources.includes(sourceId)) {\n      setSelectedSources(selectedSources.filter(id => id !== sourceId));\n    } else {\n      setSelectedSources([...selectedSources, sourceId]);\n    }\n  };\n  \n  // Function to evaluate search results with Quepid\n  const handleEvaluate = async () => {\n    // Clear previous state\n    setError(null);\n    setSuccessMessage(null);\n    setResults(null);\n    \n    // Validate inputs\n    if (!query.trim()) {\n      setError('Please enter a search query');\n      return;\n    }\n    \n    if (!caseId || isNaN(parseInt(caseId))) {\n      setError('Please enter a valid case ID');\n      return;\n    }\n    \n    if (selectedSources.length === 0) {\n      setError('Please select at least one search source');\n      return;\n    }\n    \n    // Prepare the evaluation request\n    const evaluationRequest = {\n      query: query.trim(),\n      sources: selectedSources,\n      case_id: parseInt(caseId),\n      max_results: maxResults\n    };\n    \n    // Call the API\n    setIsLoading(true);\n    \n    try {\n      const response = await experimentService.evaluateWithQuepid(evaluationRequest);\n      \n      if (response.error) {\n        setError(response.message || 'Error evaluating search results');\n      } else {\n        setResults(response);\n        setSuccessMessage('Evaluation completed successfully');\n      }\n    } catch (error) {\n      setError('Error connecting to the server');\n      console.error('Quepid evaluation error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Function to render the evaluation results\n  const renderResults = () => {\n    if (!results) return null;\n    \n    return (\n      <Box mt={4}>\n        <Typography variant=\"h5\" gutterBottom>\n          Evaluation Results for \"{results.query}\"\n        </Typography>\n        \n        <Box mb={2}>\n          <Chip \n            label={`Case: ${results.case_name}`} \n            color=\"primary\" \n            variant=\"outlined\" \n            sx={{ marginRight: 1 }}\n          />\n          <Chip \n            label={`Total judged: ${results.total_judged}`} \n            color=\"primary\" \n            variant=\"outlined\" \n            sx={{ marginRight: 1 }}\n          />\n          <Chip \n            label={`Total relevant: ${results.total_relevant}`} \n            color=\"primary\" \n            variant=\"outlined\"\n          />\n        </Box>\n        \n        {results.available_queries && results.available_queries.length > 0 && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            <Typography variant=\"body2\">\n              Note: The exact query was not found. Here are some available queries in this case:\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n              {results.available_queries.map((q, i) => (\n                <Chip \n                  key={i} \n                  label={q}\n                  size=\"small\"\n                  onClick={() => setQuery(q)}\n                  color=\"primary\"\n                />\n              ))}\n            </Box>\n          </Alert>\n        )}\n        \n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Source</TableCell>\n                <TableCell>nDCG@10</TableCell>\n                <TableCell>Precision@10</TableCell>\n                <TableCell>Recall</TableCell>\n                <TableCell>Judged/Relevant</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {results.source_results.map((sourceResult) => {\n                // Find metrics\n                const ndcg10 = sourceResult.metrics.find(m => m.name === 'ndcg@10');\n                const precision10 = sourceResult.metrics.find(m => m.name === 'p@10');\n                const recall = sourceResult.metrics.find(m => m.name === 'recall');\n                \n                return (\n                  <TableRow key={sourceResult.source}>\n                    <TableCell>{getSourceName(sourceResult.source)}</TableCell>\n                    <TableCell>{ndcg10 ? ndcg10.value.toFixed(3) : 'N/A'}</TableCell>\n                    <TableCell>{precision10 ? precision10.value.toFixed(3) : 'N/A'}</TableCell>\n                    <TableCell>{recall ? recall.value.toFixed(3) : 'N/A'}</TableCell>\n                    <TableCell>\n                      {sourceResult.judged_retrieved}/{sourceResult.relevant_retrieved} of {sourceResult.results_count}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        \n        <Box mt={4}>\n          <Typography variant=\"h6\" gutterBottom>\n            Detailed Metrics\n          </Typography>\n          \n          {results.source_results.map((sourceResult) => (\n            <Accordion key={sourceResult.source}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>{getSourceName(sourceResult.source)}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <TableContainer>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Metric</TableCell>\n                        <TableCell>Value</TableCell>\n                        <TableCell>Description</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {sourceResult.metrics.map((metric, idx) => (\n                        <TableRow key={idx}>\n                          <TableCell>{metric.name}</TableCell>\n                          <TableCell>{metric.value.toFixed(3)}</TableCell>\n                          <TableCell>{metric.description}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </AccordionDetails>\n            </Accordion>\n          ))}\n        </Box>\n      </Box>\n    );\n  };\n  \n  // Helper function to get source display name\n  const getSourceName = (sourceId) => {\n    const source = AVAILABLE_SOURCES.find(s => s.id === sourceId);\n    return source ? source.name : sourceId;\n  };\n  \n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Quepid Evaluation\n        </Typography>\n        \n        <Typography variant=\"body1\" paragraph>\n          Evaluate search results against Quepid relevance judgments to measure the effectiveness of search algorithms.\n        </Typography>\n        \n        <Card sx={{ mb: 4 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Evaluation Parameters\n            </Typography>\n            \n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  label=\"Search Query\"\n                  fullWidth\n                  margin=\"normal\"\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  placeholder=\"Enter search query\"\n                />\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <TextField\n                  label=\"Quepid Case ID\"\n                  fullWidth\n                  margin=\"normal\"\n                  value={caseId}\n                  onChange={(e) => setCaseId(e.target.value)}\n                  placeholder=\"Enter your Quepid case ID\"\n                  type=\"number\"\n                />\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <TextField\n                  label=\"Max Results\"\n                  fullWidth\n                  margin=\"normal\"\n                  value={maxResults}\n                  onChange={(e) => setMaxResults(parseInt(e.target.value) || 20)}\n                  placeholder=\"Maximum number of results\"\n                  type=\"number\"\n                />\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Search Sources\n                </Typography>\n                <FormGroup>\n                  {AVAILABLE_SOURCES.map((source) => (\n                    <FormControlLabel\n                      key={source.id}\n                      control={\n                        <Checkbox\n                          checked={selectedSources.includes(source.id)}\n                          onChange={() => toggleSource(source.id)}\n                        />\n                      }\n                      label={source.name}\n                    />\n                  ))}\n                </FormGroup>\n              </Grid>\n            </Grid>\n            \n            <Box mt={3} textAlign=\"center\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleEvaluate}\n                disabled={isLoading}\n                size=\"large\"\n              >\n                {isLoading ? <CircularProgress size={24} /> : 'Evaluate Search Results'}\n              </Button>\n            </Box>\n            \n            {error && (\n              <Alert severity=\"error\" sx={{ mt: 2 }}>\n                {error}\n              </Alert>\n            )}\n            \n            {successMessage && (\n              <Alert severity=\"success\" sx={{ mt: 2 }}>\n                {successMessage}\n              </Alert>\n            )}\n          </CardContent>\n        </Card>\n        \n        {renderResults()}\n      </Box>\n    </Container>\n  );\n};\n\nexport default QuepidEvaluation; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,iBAAiB,KAAQ,iBAAiB,CACnD,OACEC,SAAS,CACTC,UAAU,CACVC,SAAS,CACTC,MAAM,CACNC,GAAG,CACHC,IAAI,CACJC,WAAW,CACXC,IAAI,CACJC,SAAS,CACTC,gBAAgB,CAChBC,QAAQ,CACRC,IAAI,CACJC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,KAAK,CACLC,gBAAgB,CAChBC,SAAS,CACTC,gBAAgB,CAChBC,gBAAgB,CAChBC,KAAK,CACLC,SAAS,CACTC,SAAS,CACTC,cAAc,CACdC,SAAS,CACTC,QAAQ,CACRC,KAAK,CACLC,OAAO,KACF,eAAe,CACtB,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAE3D;AAAA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,iBAAiB,CAAG,CACxB,CAAEC,EAAE,CAAE,KAAK,CAAEC,IAAI,CAAE,UAAW,CAAC,CAC/B,CAAED,EAAE,CAAE,SAAS,CAAEC,IAAI,CAAE,gBAAiB,CAAC,CACzC,CAAED,EAAE,CAAE,kBAAkB,CAAEC,IAAI,CAAE,kBAAmB,CAAC,CACpD,CAAED,EAAE,CAAE,gBAAgB,CAAEC,IAAI,CAAE,gBAAiB,CAAC,CACjD,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGzC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC0C,MAAM,CAAEC,SAAS,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAC4C,UAAU,CAAEC,aAAa,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC8C,eAAe,CAAEC,kBAAkB,CAAC,CAAG/C,QAAQ,CAAC,CAAC,KAAK,CAAE,SAAS,CAAE,kBAAkB,CAAC,CAAC,CAE9F;AACA,KAAM,CAACgD,SAAS,CAAEC,YAAY,CAAC,CAAGjD,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACkD,KAAK,CAAEC,QAAQ,CAAC,CAAGnD,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACoD,cAAc,CAAEC,iBAAiB,CAAC,CAAGrD,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACsD,OAAO,CAAEC,UAAU,CAAC,CAAGvD,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACA,KAAM,CAAAwD,YAAY,CAAIC,QAAQ,EAAK,CACjC,GAAIX,eAAe,CAACY,QAAQ,CAACD,QAAQ,CAAC,CAAE,CACtCV,kBAAkB,CAACD,eAAe,CAACa,MAAM,CAACtB,EAAE,EAAIA,EAAE,GAAKoB,QAAQ,CAAC,CAAC,CACnE,CAAC,IAAM,CACLV,kBAAkB,CAAC,CAAC,GAAGD,eAAe,CAAEW,QAAQ,CAAC,CAAC,CACpD,CACF,CAAC,CAED;AACA,KAAM,CAAAG,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC;AACAT,QAAQ,CAAC,IAAI,CAAC,CACdE,iBAAiB,CAAC,IAAI,CAAC,CACvBE,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,GAAI,CAACf,KAAK,CAACqB,IAAI,CAAC,CAAC,CAAE,CACjBV,QAAQ,CAAC,6BAA6B,CAAC,CACvC,OACF,CAEA,GAAI,CAACT,MAAM,EAAIoB,KAAK,CAACC,QAAQ,CAACrB,MAAM,CAAC,CAAC,CAAE,CACtCS,QAAQ,CAAC,8BAA8B,CAAC,CACxC,OACF,CAEA,GAAIL,eAAe,CAACkB,MAAM,GAAK,CAAC,CAAE,CAChCb,QAAQ,CAAC,0CAA0C,CAAC,CACpD,OACF,CAEA;AACA,KAAM,CAAAc,iBAAiB,CAAG,CACxBzB,KAAK,CAAEA,KAAK,CAACqB,IAAI,CAAC,CAAC,CACnBK,OAAO,CAAEpB,eAAe,CACxBqB,OAAO,CAAEJ,QAAQ,CAACrB,MAAM,CAAC,CACzB0B,WAAW,CAAExB,UACf,CAAC,CAED;AACAK,YAAY,CAAC,IAAI,CAAC,CAElB,GAAI,CACF,KAAM,CAAAoB,QAAQ,CAAG,KAAM,CAAAnE,iBAAiB,CAACoE,kBAAkB,CAACL,iBAAiB,CAAC,CAE9E,GAAII,QAAQ,CAACnB,KAAK,CAAE,CAClBC,QAAQ,CAACkB,QAAQ,CAACE,OAAO,EAAI,iCAAiC,CAAC,CACjE,CAAC,IAAM,CACLhB,UAAU,CAACc,QAAQ,CAAC,CACpBhB,iBAAiB,CAAC,mCAAmC,CAAC,CACxD,CACF,CAAE,MAAOH,KAAK,CAAE,CACdC,QAAQ,CAAC,gCAAgC,CAAC,CAC1CqB,OAAO,CAACtB,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,OAAS,CACRD,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAAwB,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAACnB,OAAO,CAAE,MAAO,KAAI,CAEzB,mBACErB,KAAA,CAAC1B,GAAG,EAACmE,EAAE,CAAE,CAAE,CAAAC,QAAA,eACT1C,KAAA,CAAC7B,UAAU,EAACwE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,EAAC,2BACZ,CAACrB,OAAO,CAACd,KAAK,CAAC,IACzC,EAAY,CAAC,cAEbP,KAAA,CAAC1B,GAAG,EAACuE,EAAE,CAAE,CAAE,CAAAH,QAAA,eACTxC,IAAA,CAACzB,IAAI,EACHqE,KAAK,CAAE,SAASzB,OAAO,CAAC0B,SAAS,EAAG,CACpCC,KAAK,CAAC,SAAS,CACfL,OAAO,CAAC,UAAU,CAClBM,EAAE,CAAE,CAAEC,WAAW,CAAE,CAAE,CAAE,CACxB,CAAC,cACFhD,IAAA,CAACzB,IAAI,EACHqE,KAAK,CAAE,iBAAiBzB,OAAO,CAAC8B,YAAY,EAAG,CAC/CH,KAAK,CAAC,SAAS,CACfL,OAAO,CAAC,UAAU,CAClBM,EAAE,CAAE,CAAEC,WAAW,CAAE,CAAE,CAAE,CACxB,CAAC,cACFhD,IAAA,CAACzB,IAAI,EACHqE,KAAK,CAAE,mBAAmBzB,OAAO,CAAC+B,cAAc,EAAG,CACnDJ,KAAK,CAAC,SAAS,CACfL,OAAO,CAAC,UAAU,CACnB,CAAC,EACC,CAAC,CAELtB,OAAO,CAACgC,iBAAiB,EAAIhC,OAAO,CAACgC,iBAAiB,CAACtB,MAAM,CAAG,CAAC,eAChE/B,KAAA,CAACf,KAAK,EAACqE,QAAQ,CAAC,MAAM,CAACL,EAAE,CAAE,CAAEJ,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,eACnCxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,OAAO,CAAAD,QAAA,CAAC,oFAE5B,CAAY,CAAC,cACbxC,IAAA,CAAC5B,GAAG,EAAC2E,EAAE,CAAE,CAAEM,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,CAAC,CAAEhB,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CAC3DrB,OAAO,CAACgC,iBAAiB,CAACK,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBAClC1D,IAAA,CAACzB,IAAI,EAEHqE,KAAK,CAAEa,CAAE,CACTE,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMtD,QAAQ,CAACmD,CAAC,CAAE,CAC3BX,KAAK,CAAC,SAAS,EAJVY,CAKN,CACF,CAAC,CACC,CAAC,EACD,CACR,cAED1D,IAAA,CAACT,cAAc,EAACsE,SAAS,CAAEnE,KAAM,CAAA8C,QAAA,cAC/B1C,KAAA,CAACV,KAAK,EAAAoD,QAAA,eACJxC,IAAA,CAACR,SAAS,EAAAgD,QAAA,cACR1C,KAAA,CAACL,QAAQ,EAAA+C,QAAA,eACPxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,SAAO,CAAW,CAAC,cAC9BxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,cAAY,CAAW,CAAC,cACnCxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,iBAAe,CAAW,CAAC,EAC9B,CAAC,CACF,CAAC,cACZxC,IAAA,CAACX,SAAS,EAAAmD,QAAA,CACPrB,OAAO,CAAC2C,cAAc,CAACN,GAAG,CAAEO,YAAY,EAAK,CAC5C;AACA,KAAM,CAAAC,MAAM,CAAGD,YAAY,CAACE,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChE,IAAI,GAAK,SAAS,CAAC,CACnE,KAAM,CAAAiE,WAAW,CAAGL,YAAY,CAACE,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChE,IAAI,GAAK,MAAM,CAAC,CACrE,KAAM,CAAAkE,MAAM,CAAGN,YAAY,CAACE,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChE,IAAI,GAAK,QAAQ,CAAC,CAElE,mBACEL,KAAA,CAACL,QAAQ,EAAA+C,QAAA,eACPxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAE8B,aAAa,CAACP,YAAY,CAACQ,MAAM,CAAC,CAAY,CAAC,cAC3DvE,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAEwB,MAAM,CAAGA,MAAM,CAACQ,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAG,KAAK,CAAY,CAAC,cACjEzE,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAE4B,WAAW,CAAGA,WAAW,CAACI,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAG,KAAK,CAAY,CAAC,cAC3EzE,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAE6B,MAAM,CAAGA,MAAM,CAACG,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAG,KAAK,CAAY,CAAC,cACjE3E,KAAA,CAACR,SAAS,EAAAkD,QAAA,EACPuB,YAAY,CAACW,gBAAgB,CAAC,GAAC,CAACX,YAAY,CAACY,kBAAkB,CAAC,MAAI,CAACZ,YAAY,CAACa,aAAa,EACvF,CAAC,GAPCb,YAAY,CAACQ,MAQlB,CAAC,CAEf,CAAC,CAAC,CACO,CAAC,EACP,CAAC,CACM,CAAC,cAEjBzE,KAAA,CAAC1B,GAAG,EAACmE,EAAE,CAAE,CAAE,CAAAC,QAAA,eACTxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,kBAEtC,CAAY,CAAC,CAEZrB,OAAO,CAAC2C,cAAc,CAACN,GAAG,CAAEO,YAAY,eACvCjE,KAAA,CAACb,SAAS,EAAAuD,QAAA,eACRxC,IAAA,CAACd,gBAAgB,EAAC2F,UAAU,cAAE7E,IAAA,CAACJ,cAAc,GAAE,CAAE,CAAA4C,QAAA,cAC/CxC,IAAA,CAAC/B,UAAU,EAAAuE,QAAA,CAAE8B,aAAa,CAACP,YAAY,CAACQ,MAAM,CAAC,CAAa,CAAC,CAC7C,CAAC,cACnBvE,IAAA,CAACb,gBAAgB,EAAAqD,QAAA,cACfxC,IAAA,CAACT,cAAc,EAAAiD,QAAA,cACb1C,KAAA,CAACV,KAAK,EAACuE,IAAI,CAAC,OAAO,CAAAnB,QAAA,eACjBxC,IAAA,CAACR,SAAS,EAAAgD,QAAA,cACR1C,KAAA,CAACL,QAAQ,EAAA+C,QAAA,eACPxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,OAAK,CAAW,CAAC,cAC5BxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAC,aAAW,CAAW,CAAC,EAC1B,CAAC,CACF,CAAC,cACZxC,IAAA,CAACX,SAAS,EAAAmD,QAAA,CACPuB,YAAY,CAACE,OAAO,CAACT,GAAG,CAAC,CAACsB,MAAM,CAAEC,GAAG,gBACpCjF,KAAA,CAACL,QAAQ,EAAA+C,QAAA,eACPxC,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAEsC,MAAM,CAAC3E,IAAI,CAAY,CAAC,cACpCH,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAEsC,MAAM,CAACN,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAY,CAAC,cAChDzE,IAAA,CAACV,SAAS,EAAAkD,QAAA,CAAEsC,MAAM,CAACE,WAAW,CAAY,CAAC,GAH9BD,GAIL,CACX,CAAC,CACO,CAAC,EACP,CAAC,CACM,CAAC,CACD,CAAC,GAzBLhB,YAAY,CAACQ,MA0BlB,CACZ,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAD,aAAa,CAAIhD,QAAQ,EAAK,CAClC,KAAM,CAAAiD,MAAM,CAAGtE,iBAAiB,CAACiE,IAAI,CAACe,CAAC,EAAIA,CAAC,CAAC/E,EAAE,GAAKoB,QAAQ,CAAC,CAC7D,MAAO,CAAAiD,MAAM,CAAGA,MAAM,CAACpE,IAAI,CAAGmB,QAAQ,CACxC,CAAC,CAED,mBACEtB,IAAA,CAAChC,SAAS,EAACkH,QAAQ,CAAC,IAAI,CAAA1C,QAAA,cACtB1C,KAAA,CAAC1B,GAAG,EAAC+G,EAAE,CAAE,CAAE,CAAA3C,QAAA,eACTxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,IAAI,CAACoB,SAAS,CAAC,IAAI,CAACnB,YAAY,MAAAF,QAAA,CAAC,mBAErD,CAAY,CAAC,cAEbxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,OAAO,CAAC2C,SAAS,MAAA5C,QAAA,CAAC,+GAEtC,CAAY,CAAC,cAEbxC,IAAA,CAAC3B,IAAI,EAAC0E,EAAE,CAAE,CAAEJ,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,cAClB1C,KAAA,CAACxB,WAAW,EAAAkE,QAAA,eACVxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,uBAEtC,CAAY,CAAC,cAEb1C,KAAA,CAACnB,IAAI,EAAC0G,SAAS,MAACC,OAAO,CAAE,CAAE,CAAA9C,QAAA,eACzBxC,IAAA,CAACrB,IAAI,EAAC4G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAjD,QAAA,cACvBxC,IAAA,CAAC9B,SAAS,EACR0E,KAAK,CAAC,cAAc,CACpB8C,SAAS,MACTC,MAAM,CAAC,QAAQ,CACfnB,KAAK,CAAEnE,KAAM,CACbuF,QAAQ,CAAGC,CAAC,EAAKvF,QAAQ,CAACuF,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE,CAC1CuB,WAAW,CAAC,oBAAoB,CACjC,CAAC,CACE,CAAC,cAEP/F,IAAA,CAACrB,IAAI,EAAC4G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAjD,QAAA,cACvBxC,IAAA,CAAC9B,SAAS,EACR0E,KAAK,CAAC,gBAAgB,CACtB8C,SAAS,MACTC,MAAM,CAAC,QAAQ,CACfnB,KAAK,CAAEjE,MAAO,CACdqF,QAAQ,CAAGC,CAAC,EAAKrF,SAAS,CAACqF,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE,CAC3CuB,WAAW,CAAC,2BAA2B,CACvCC,IAAI,CAAC,QAAQ,CACd,CAAC,CACE,CAAC,cAEPhG,IAAA,CAACrB,IAAI,EAAC4G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAjD,QAAA,cACvBxC,IAAA,CAAC9B,SAAS,EACR0E,KAAK,CAAC,aAAa,CACnB8C,SAAS,MACTC,MAAM,CAAC,QAAQ,CACfnB,KAAK,CAAE/D,UAAW,CAClBmF,QAAQ,CAAGC,CAAC,EAAKnF,aAAa,CAACkB,QAAQ,CAACiE,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC,EAAI,EAAE,CAAE,CAC/DuB,WAAW,CAAC,2BAA2B,CACvCC,IAAI,CAAC,QAAQ,CACd,CAAC,CACE,CAAC,cAEPlG,KAAA,CAACnB,IAAI,EAAC4G,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAjD,QAAA,eACvBxC,IAAA,CAAC/B,UAAU,EAACwE,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAF,QAAA,CAAC,gBAE7C,CAAY,CAAC,cACbxC,IAAA,CAACxB,SAAS,EAAAgE,QAAA,CACPvC,iBAAiB,CAACuD,GAAG,CAAEe,MAAM,eAC5BvE,IAAA,CAACvB,gBAAgB,EAEfwH,OAAO,cACLjG,IAAA,CAACtB,QAAQ,EACPwH,OAAO,CAAEvF,eAAe,CAACY,QAAQ,CAACgD,MAAM,CAACrE,EAAE,CAAE,CAC7C0F,QAAQ,CAAEA,CAAA,GAAMvE,YAAY,CAACkD,MAAM,CAACrE,EAAE,CAAE,CACzC,CACF,CACD0C,KAAK,CAAE2B,MAAM,CAACpE,IAAK,EAPdoE,MAAM,CAACrE,EAQb,CACF,CAAC,CACO,CAAC,EACR,CAAC,EACH,CAAC,cAEPF,IAAA,CAAC5B,GAAG,EAACmE,EAAE,CAAE,CAAE,CAAC4D,SAAS,CAAC,QAAQ,CAAA3D,QAAA,cAC5BxC,IAAA,CAAC7B,MAAM,EACLsE,OAAO,CAAC,WAAW,CACnBK,KAAK,CAAC,SAAS,CACfc,OAAO,CAAEnC,cAAe,CACxB2E,QAAQ,CAAEvF,SAAU,CACpB8C,IAAI,CAAC,OAAO,CAAAnB,QAAA,CAEX3B,SAAS,cAAGb,IAAA,CAAChB,gBAAgB,EAAC2E,IAAI,CAAE,EAAG,CAAE,CAAC,CAAG,yBAAyB,CACjE,CAAC,CACN,CAAC,CAEL5C,KAAK,eACJf,IAAA,CAACjB,KAAK,EAACqE,QAAQ,CAAC,OAAO,CAACL,EAAE,CAAE,CAAER,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CACnCzB,KAAK,CACD,CACR,CAEAE,cAAc,eACbjB,IAAA,CAACjB,KAAK,EAACqE,QAAQ,CAAC,SAAS,CAACL,EAAE,CAAE,CAAER,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CACrCvB,cAAc,CACV,CACR,EACU,CAAC,CACV,CAAC,CAENqB,aAAa,CAAC,CAAC,EACb,CAAC,CACG,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAlC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}